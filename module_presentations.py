# S T A R   W A R S   C O N Q U E S T   M O D U L E   S Y S T E M
# / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / /
# By Taleworlds, HokieBT, MartinF and Swyter - Do not use/copy without permission

from header_common import *
from header_presentations import *
from header_mission_templates import *
from ID_meshes import *
from header_operations import *
from header_triggers import *
from module_constants import *
#SW - added for zoom_view functionality
from header_items import *
import string

####################################################################################################################
#  Each presentation record contains the following fields:
#  1) Presentation id: used for referencing presentations in other files. The prefix prsnt_ is automatically added before each presentation id.
#  2) Presentation flags. See header_presentations.py for a list of available flags
#  3) Presentation background mesh: See module_meshes.py for a list of available background meshes
#  4) Triggers: Simple triggers that are associated with the presentation
####################################################################################################################

presentations = [
  ("game_credits",prsntf_read_only,mesh_load_window,[
      (ti_on_presentation_load,
       [(assign, "$g_presentation_credits_obj_1", -1),
        (assign, "$g_presentation_credits_obj_2", -1),
        (assign, "$g_presentation_credits_obj_3", -1),
        (assign, "$g_presentation_credits_obj_4", -1),
        (assign, "$g_presentation_credits_obj_5", -1),
        (assign, "$g_presentation_credits_obj_6", -1),
        (assign, "$g_presentation_credits_obj_7", -1),
        (assign, "$g_presentation_credits_obj_8", -1),
        (assign, "$g_presentation_credits_obj_9", -1),
        (assign, "$g_presentation_credits_obj_10", -1),
        (assign, "$g_presentation_credits_obj_11", -1),
        (assign, "$g_presentation_credits_obj_12", -1),
        (assign, "$g_presentation_credits_obj_1_alpha", 0),
        (assign, "$g_presentation_credits_obj_2_alpha", 0),
        (assign, "$g_presentation_credits_obj_3_alpha", 0),
        (assign, "$g_presentation_credits_obj_4_alpha", 0),
        (assign, "$g_presentation_credits_obj_5_alpha", 0),
        (assign, "$g_presentation_credits_obj_6_alpha", 0),
        (assign, "$g_presentation_credits_obj_7_alpha", 0),
        (assign, "$g_presentation_credits_obj_8_alpha", 0),
        (assign, "$g_presentation_credits_obj_9_alpha", 0),
        ]),
      (ti_on_presentation_run,
       [
        (store_trigger_param_1, ":cur_time"),
        (set_fixed_point_multiplier, 1000),
        (presentation_set_duration, 1000000),
        (try_begin),
          (this_or_next|key_clicked, key_space),
          (this_or_next|key_clicked, key_enter),
          (this_or_next|key_clicked, key_escape),
          (this_or_next|key_clicked, key_back_space),
          (this_or_next|key_clicked, key_left_mouse_button),
          (key_clicked, key_right_mouse_button),
          (presentation_set_duration, 0),
        (try_end),
        (try_begin),
          #LOGO--KICK IN
          (lt, "$g_presentation_credits_obj_1", 0),
          (str_store_string, s1, "str_credits_1"),
          (create_mesh_overlay, "$g_presentation_credits_obj_1", "mesh_swc_logo"),

          (overlay_set_alpha, "$g_presentation_credits_obj_1", 0),

          (position_set_x, pos1, 1500),
          (position_set_y, pos1, 1500),
          (overlay_set_size, "$g_presentation_credits_obj_1", pos1),

          (position_set_x, pos1, 210),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_1", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_1", 1000, 0xEF),
        (else_try),
          #YEAR--KICK IN
          (gt, ":cur_time", 1200),
          (lt, "$g_presentation_credits_obj_2", 0),

          (str_store_string, s1, "str_swconquest_credits_years"),
          (create_text_overlay, "$g_presentation_credits_obj_2", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),

          (overlay_set_color, "$g_presentation_credits_obj_2", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_2", 0),

          (position_set_x, pos1, 1450),
          (position_set_y, pos1, 1450),
          (overlay_set_size, "$g_presentation_credits_obj_2", pos1),

          (position_set_x, pos1, 500),
          (position_set_y, pos1, 295),
          (overlay_set_position, "$g_presentation_credits_obj_2", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_2", 1000, 0xFF),
        (else_try),
          #LOGO AND YEAR--KICK OUT
          (gt, ":cur_time", 4500),

          (eq, "$g_presentation_credits_obj_1_alpha", 0),
          (assign, "$g_presentation_credits_obj_1_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_1", 1000, 0x15),

          (eq, "$g_presentation_credits_obj_2_alpha", 0),
          (assign, "$g_presentation_credits_obj_2_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_2", 1000, 0x09),
        (else_try),
          #CREDTS PREFACE--KICK IN
          (gt, ":cur_time", 5000),
          (lt, "$g_presentation_credits_obj_3", 0),

          (str_store_string, s1, "str_swconquest_credits_prefc"),
          (create_text_overlay, "$g_presentation_credits_obj_3", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),

          (overlay_set_color, "$g_presentation_credits_obj_3", 0x331122),
          (overlay_set_alpha, "$g_presentation_credits_obj_3", 0),

          (position_set_x, pos1, 1350),
          (position_set_y, pos1, 1350),
          (overlay_set_size, "$g_presentation_credits_obj_3", pos1),

          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_3", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_3", 1000, 0xFF),
        (else_try),
          #PREFACE--KICK OUT
          (gt, ":cur_time", 10000),
          (eq, "$g_presentation_credits_obj_3_alpha", 0),
          (assign, "$g_presentation_credits_obj_3_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_3", 1000, 0),
        (else_try),
          #CONTRIBUTORS SCROLLING--KICK IN
          (gt, ":cur_time", 10500),
          (lt, "$g_presentation_credits_obj_4", 0),

          (str_store_string, s1, "str_swconquest_credits_contb"),
          (create_text_overlay, "$g_presentation_credits_obj_4", s1, tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_4", 0x000044),
          (overlay_set_alpha, "$g_presentation_credits_obj_4", 0),

          (position_set_x, pos1, 1250),
          (position_set_y, pos1, 1250),
          (overlay_set_size, "$g_presentation_credits_obj_4", pos1),

          (position_set_x, pos1, 100),
          (position_set_y, pos1, -375),
          (overlay_set_position, "$g_presentation_credits_obj_4", pos1),

          (position_set_x, pos1, 100),
          (position_set_y, pos1, 1500),
          (overlay_animate_to_position, "$g_presentation_credits_obj_4", 28000, pos1),
          (overlay_animate_to_alpha,    "$g_presentation_credits_obj_4", 700,   0xFF),
        (else_try),
          #CONTRIBUTORS SCROLLING--STOP
          (gt, ":cur_time", 39500),
          (eq, "$g_presentation_credits_obj_4_alpha", 0),
          (assign, "$g_presentation_credits_obj_4_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_4", 800, 0),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_1", 1000, 0x77),

        (else_try),
          #CONTRIBUTORS SCROLLING--KICK OUT
          (gt, ":cur_time", 43000),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_1", 1000, 0x00),
          (presentation_set_duration, 0),
        (try_end),
        ]),
      ]),
  ("gamddde_start",prsntf_read_only,0,[
      (ti_on_presentation_load,
       [(assign, "$g_presentation_credits_obj_1", -1),
        (assign, "$g_presentation_credits_obj_2", -1),
        (assign, "$g_presentation_credits_obj_3", -1),
        (assign, "$g_presentation_credits_obj_4", -1),
        (assign, "$g_presentation_credits_obj_5", -1),
        (assign, "$g_presentation_credits_obj_6", -1),
        (assign, "$g_presentation_credits_obj_7", -1),
        (assign, "$g_presentation_credits_obj_8", -1),
        (assign, "$g_presentation_credits_obj_9", -1),
        (assign, "$g_presentation_credits_obj_10", -1),
        (assign, "$g_presentation_credits_obj_11", -1),
        (assign, "$g_presentation_credits_obj_12", -1),
        (assign, "$g_presentation_credits_obj_1_alpha", 0),
        (assign, "$g_presentation_credits_obj_2_alpha", 0),
        (assign, "$g_presentation_credits_obj_3_alpha", 0),
        (assign, "$g_presentation_credits_obj_4_alpha", 0),
        (assign, "$g_presentation_credits_obj_5_alpha", 0),
        (assign, "$g_presentation_credits_obj_6_alpha", 0),
        (assign, "$g_presentation_credits_obj_7_alpha", 0),
        (assign, "$g_presentation_credits_obj_8_alpha", 0),
        (assign, "$g_presentation_credits_obj_9_alpha", 0),
        ]),
      (ti_on_presentation_run,
       [
        (store_trigger_param_1, ":cur_time"),
        (set_fixed_point_multiplier, 1000),
		(set_fixed_point_multiplier, 10),
        #(presentation_set_duration, 1000000),

        #(try_begin),
        #(lt, "$g_presentation_credits_obj_1", 0),
        (str_store_string, s1, "str_credits_1"),
		(create_mesh_overlay, "$g_presentation_credits_obj_1", "mesh_galaxy"),
		#(overlay_set_alpha, "$g_presentation_credits_obj_1", 0),
          #(position_set_x, pos1, 1500),
          #(position_set_y, pos1, 1500),
          (overlay_set_size, "$g_presentation_credits_obj_1", pos1),
          (position_set_x, pos1, 100),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_1", pos1),
          #(overlay_animate_to_alpha, "$g_presentation_credits_obj_1", 1000, 0xFF),  -> 1/2
		  #(overlay_animate_to_alpha, "$g_presentation_credits_obj_1", 1000, 0x7F),
		(overlay_get_position, 2, "$g_presentation_credits_obj_1"),
		(mouse_get_position, 99),
		(position_get_x,":x",99),
		(position_get_y,":y",99),
		(val_mul,":x",-.1),
		(val_mul,":y",-.1),
		(position_move_x,2,":x"),
		(position_move_y,2,":y"),
		(overlay_animate_to_position, "$g_presentation_credits_obj_1", 100, 2),

        #(else_try),
		(try_begin),
          (gt, ":cur_time", 5500),
          (eq, "$g_presentation_credits_obj_1_alpha", 0),
          (assign, "$g_presentation_credits_obj_1_alpha", 1),
          #(overlay_animate_to_alpha, "$g_presentation_credits_obj_1", 1000, 0x00),
        (else_try),
          (gt, ":cur_time", 3500),
          (lt, "$g_presentation_credits_obj_2", 0),
          #(str_store_string, s1, "str_credits_2"),
          (create_text_overlay, "$g_presentation_credits_obj_2", "@2006-2010 THE STAR WARS CONQUEST DEV TEAM", tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_2", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_2", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_2", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 275),
          (overlay_set_position, "$g_presentation_credits_obj_2", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_2", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 5500),
          (eq, "$g_presentation_credits_obj_2_alpha", 0),
          (assign, "$g_presentation_credits_obj_2_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_2", 1000, 0x00),
        (else_try),
          (gt, ":cur_time", 6000),
          (lt, "$g_presentation_credits_obj_3", 0),
          #(str_store_string, s1, "str_credits_3"),
          (create_text_overlay, "$g_presentation_credits_obj_3", "@This Module it's dedicated to every person who believed in us.^^Their valuable Work and Support have inspired Us to Make this bigger.^^The Force It's Strong with you! :-)", tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_3", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_3", 0),
          (position_set_x, pos1, 1350),
          (position_set_y, pos1, 1350),
          (overlay_set_size, "$g_presentation_credits_obj_3", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_3", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_3", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 10000),
          (eq, "$g_presentation_credits_obj_3_alpha", 0),
          (assign, "$g_presentation_credits_obj_3_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_3", 1000, 0),
        (else_try),
          (gt, ":cur_time", 10500),
          (lt, "$g_presentation_credits_obj_4", 0),
          (str_store_string, s1, "str_credits_4"),
          (create_text_overlay, "$g_presentation_credits_obj_4", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_4", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_4", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_4", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_4", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_4", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 12500),
          (eq, "$g_presentation_credits_obj_4_alpha", 0),
          (assign, "$g_presentation_credits_obj_4_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_4", 1000, 0),
        (else_try),
          (gt, ":cur_time", 14000),
          (lt, "$g_presentation_credits_obj_5", 0),
          (str_store_string, s1, "str_credits_8"),
          (create_text_overlay, "$g_presentation_credits_obj_5", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_5", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_5", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_5", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_5", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_5", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 16000),
          (eq, "$g_presentation_credits_obj_5_alpha", 0),
          (assign, "$g_presentation_credits_obj_5_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_5", 1000, 0),
        (else_try),
          (gt, ":cur_time", 17500),
          (lt, "$g_presentation_credits_obj_6", 0),
          (str_store_string, s1, "str_credits_5"),
          (create_text_overlay, "$g_presentation_credits_obj_6", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_6", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_6", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_6", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_6", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_6", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 19500),
          (eq, "$g_presentation_credits_obj_6_alpha", 0),
          (assign, "$g_presentation_credits_obj_6_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_6", 1000, 0),
        (else_try),
          (gt, ":cur_time", 21000),
          (lt, "$g_presentation_credits_obj_7", 0),
          (str_store_string, s1, "str_credits_6"),
          (create_text_overlay, "$g_presentation_credits_obj_7", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_7", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_7", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_7", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_7", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_7", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 23000),
          (eq, "$g_presentation_credits_obj_7_alpha", 0),
          (assign, "$g_presentation_credits_obj_7_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_7", 1000, 0),
        (else_try),
          (gt, ":cur_time", 24500),
          (lt, "$g_presentation_credits_obj_8", 0),
          (str_store_string, s1, "str_credits_9"),
          (create_text_overlay, "$g_presentation_credits_obj_8", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_8", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_8", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_8", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_8", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_8", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 26500),
          (eq, "$g_presentation_credits_obj_8_alpha", 0),
          (assign, "$g_presentation_credits_obj_8_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_8", 1000, 0),
        (else_try),
          (gt, ":cur_time", 28000),
          (lt, "$g_presentation_credits_obj_9", 0),
          (str_store_string, s1, "str_credits_10"),
          (create_text_overlay, "$g_presentation_credits_obj_9", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_9", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_9", 0),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, "$g_presentation_credits_obj_9", pos1),
          (position_set_x, pos1, 250),
          (position_set_y, pos1, 485),
          (overlay_set_position, "$g_presentation_credits_obj_9", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_9", 1000, 0xFF),

          (str_store_string, s1, "str_credits_11"),
          (create_text_overlay, "$g_presentation_credits_obj_10", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_10", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_10", 0),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, "$g_presentation_credits_obj_10", pos1),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 470),
          (overlay_set_position, "$g_presentation_credits_obj_10", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_10", 1000, 0xFF),

          (str_store_string, s1, "str_credits_12"),
          (create_text_overlay, "$g_presentation_credits_obj_11", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_11", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_11", 0),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, "$g_presentation_credits_obj_11", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 105),
          (overlay_set_position, "$g_presentation_credits_obj_11", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_11", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 34000),
          (eq, "$g_presentation_credits_obj_9_alpha", 0),
          (assign, "$g_presentation_credits_obj_9_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_9", 1000, 0),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_10", 1000, 0),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_11", 1000, 0),
        (else_try),
          (gt, ":cur_time", 35500),
          (lt, "$g_presentation_credits_obj_12", 0),
          (str_store_string, s1, "str_credits_7"),
          (create_text_overlay, "$g_presentation_credits_obj_12", s1, tf_center_justify|tf_double_space),
          (overlay_set_color, "$g_presentation_credits_obj_12", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_12", 0xFF),
          (position_set_x, pos1, 1000),
          (position_set_y, pos1, 1000),
          (overlay_set_size, "$g_presentation_credits_obj_12", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, -6100),
          (overlay_set_position, "$g_presentation_credits_obj_12", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 760),
          (overlay_animate_to_position, "$g_presentation_credits_obj_12", 70000, pos1),
        (else_try),
          (gt, ":cur_time", 105500),
          (presentation_set_duration, 0),
        (try_end),
        ]),
      ]),
######################################################################################################
#SW - new presentations for Star Wars Conquest

("helmet_view", prsntf_read_only, 0, [		#must use prsntf_read_only or you cannot attack
	(ti_on_presentation_load,
		[
		(presentation_set_duration, 999999),

		#(troop_get_inventory_slot,":item_id","trp_player",":slot_no"),
		(troop_get_inventory_slot,":item_id","$g_player_troop", 4),	#$g_player_troop is because  custom commander is integrated, 4 = ek_head
		(try_begin),
			(eq, ":item_id", "itm_imperial_stormtrooper_helmet"),
			(create_mesh_overlay, reg1, "mesh_helmet_view_stormtrooper"),
			(position_set_x, pos1, 0),
			(position_set_y, pos1, 0),
			(overlay_set_position, reg1, pos1),
		(else_try),
			(eq|this_or_next, ":item_id", "itm_imperial_stormtrooper_helmet_incinerator"),
			(eq,              ":item_id", "itm_imperial_stormtrooper_helmet_novatrooper"),

			(create_mesh_overlay, reg1, "mesh_helmet_view_shadow_stormtrooper"),
			(position_set_x, pos1, 0),
			(position_set_y, pos1, 0),
			(overlay_set_position, reg1, pos1),
		(else_try),
			(eq, ":item_id", "itm_imperial_scout_trooper_helmet"),
			(create_mesh_overlay, reg1, "mesh_helmet_view_scout_trooper"),
			(position_set_x, pos1, 0),
			(position_set_y, pos1, 0),
			(overlay_set_position, reg1, pos1),
		(else_try),
			(eq, ":item_id", "itm_shadow_scout_trooper_helmet"),
			(create_mesh_overlay, reg1, "mesh_helmet_view_shadow_scout_trooper"),
			(position_set_x, pos1, 0),
			(position_set_y, pos1, 0),
			(overlay_set_position, reg1, pos1),
		(else_try),
			(eq, ":item_id", "itm_fang_helmet"),
			(create_mesh_overlay, reg1, "mesh_helmet_view_fang"),
			(position_set_x, pos1, 0),
			(position_set_y, pos1, 0),
			(overlay_set_position, reg1, pos1),
		(else_try),
			(eq, ":item_id", "itm_eyepiece_tactics"),
			(create_mesh_overlay, reg1, "mesh_helmet_view_eyepiece_right"),
			(position_set_x, pos1, 0),
			(position_set_y, pos1, 0),
			(overlay_set_position, reg1, pos1),
		(else_try),
			(eq, ":item_id", "itm_eyepiece_leadership"),
			(create_mesh_overlay, reg1, "mesh_helmet_view_eyepiece_left"),
			(position_set_x, pos1, 0),
			(position_set_y, pos1, 0),
			(overlay_set_position, reg1, pos1),
		(else_try),
			(eq|this_or_next, ":item_id", "itm_defiler_helmet"),
			(eq,              ":item_id", "itm_mercenary_helmet"),
			(create_mesh_overlay, reg1, "mesh_helmet_view_defiler"),
			(position_set_x, pos1, 0),
			(position_set_y, pos1, 0),
			(overlay_set_position, reg1, pos1),
		(else_try),
			(eq, ":item_id", "itm_imperial_gunner_helmet"),
			(create_mesh_overlay, reg1, "mesh_helmet_view_imperial_gunner"),
			(position_set_x, pos1, 0),
			(position_set_y, pos1, 0),
			(overlay_set_position, reg1, pos1),
		(else_try),
			(eq, ":item_id", "itm_beak_helmet"),
			(create_mesh_overlay, reg1, "mesh_helmet_view_beak"),
			(position_set_x, pos1, 0),
			(position_set_y, pos1, 0),
			(overlay_set_position, reg1, pos1),
		(else_try),
			(eq, ":item_id", "itm_black_sun_helmet"),
			(create_mesh_overlay, reg1, "mesh_helmet_view_black_sun"),
			(position_set_x, pos1, 0),
			(position_set_y, pos1, 0),
			(overlay_set_position, reg1, pos1),
		(else_try),
			(eq, ":item_id", "itm_glasses_black"),
			(create_mesh_overlay, reg1, "mesh_helmet_view_glasses_black"),
			(position_set_x, pos1, 0),
			(position_set_y, pos1, 0),
			(overlay_set_position, reg1, pos1),
		(else_try),
			(eq, ":item_id", "itm_glasses_yellow"),
			(create_mesh_overlay, reg1, "mesh_helmet_view_glasses_yellow"),
			(position_set_x, pos1, 0),
			(position_set_y, pos1, 0),
			(overlay_set_position, reg1, pos1),
		(else_try),
			(eq, ":item_id", "itm_trandoshan_mask"),
			(create_mesh_overlay, reg1, "mesh_helmet_view_trandoshan"),
			(position_set_x, pos1, 0),
			(position_set_y, pos1, 0),
			(overlay_set_position, reg1, pos1),
		(else_try),
			(eq, ":item_id", "itm_wookiee_hunter_helmet"),
			(create_mesh_overlay, reg1, "mesh_helmet_view_wookiee"),
			(position_set_x, pos1, 0),
			(position_set_y, pos1, 0),
			(overlay_set_position, reg1, pos1),
		(else_try),
			(eq, ":item_id", "itm_darth_vader_helmet"),
			(create_mesh_overlay, reg1, "mesh_helmet_view_darth_vader"),
			(position_set_x, pos1, 0),
			(position_set_y, pos1, 0),
			(overlay_set_position, reg1, pos1),
		(else_try),
			(this_or_next|eq, ":item_id", "itm_tusken_helmet"),
			(             eq, ":item_id", "itm_gas_mask"),
			(create_mesh_overlay, reg1, "mesh_helmet_view_tusken_gas"),
			(position_set_x, pos1, 0),
			(position_set_y, pos1, 0),
			(overlay_set_position, reg1, pos1),
		(else_try),
			(this_or_next|eq, ":item_id", "itm_imperial_royal_guard_helmet"),
			(             eq, ":item_id", "itm_shadow_guard_helmet"),
			(create_mesh_overlay, reg1, "mesh_helmet_view_royal_guard"),
			(position_set_x, pos1, 0),
			(position_set_y, pos1, 0),
			(overlay_set_position, reg1, pos1),
		(else_try),
			(this_or_next|eq, ":item_id", "itm_imperial_trooper_helmet"),
			(             eq, ":item_id", "itm_rebel_honor_guard_helmet"),
			(create_mesh_overlay, reg1, "mesh_helmet_view_imperial_trooper_rebel_honor_guard"),
			(position_set_x, pos1, 0),
			(position_set_y, pos1, 0),
			(overlay_set_position, reg1, pos1),
		(else_try),
			(this_or_next|eq, ":item_id", "itm_clone_trooper_helmet_white"),
			(this_or_next|eq, ":item_id", "itm_clone_trooper_helmet_green"),
			(this_or_next|eq, ":item_id", "itm_clone_trooper_helmet_blue"),
			(this_or_next|eq, ":item_id", "itm_clone_trooper_helmet_red"),
			(this_or_next|eq, ":item_id", "itm_clone_trooper_helmet_yellow"),
			(this_or_next|eq, ":item_id", "itm_clone_trooper_helmet_orange"),
			(this_or_next|eq, ":item_id", "itm_clone_trooper_helmet_mand"),
			(             eq, ":item_id", "itm_clone_trooper_helmet_lux"),
			(create_mesh_overlay, reg1, "mesh_helmet_view_clone"),
			(position_set_x, pos1, 0),
			(position_set_y, pos1, 0),
			(overlay_set_position, reg1, pos1),
		(else_try),
			(this_or_next|eq, ":item_id", "itm_mandalorian_soldier_helmet"),
			(this_or_next|eq, ":item_id", "itm_mandalorian_soldier_helmet2"),
			(this_or_next|eq, ":item_id", "itm_mandalorian_soldier_helmet3"),
			(this_or_next|eq, ":item_id", "itm_mandalorian_commando_helmet"),
			(this_or_next|eq, ":item_id", "itm_mandalorian_sniper_helmet"),
			(this_or_next|eq, ":item_id", "itm_mandalorian_crusader_helmet"),
			(this_or_next|eq, ":item_id", "itm_mandalorian_neocrusader_helmet"),
			(this_or_next|eq, ":item_id", "itm_mandalorian_deadeye_helmet"),
			(this_or_next|eq, ":item_id", "itm_mandalorian_beskar_helmet"),
			(             eq, ":item_id", "itm_boba_fett_helmet"),
			(create_mesh_overlay, reg1, "mesh_helmet_view_mandalorian"),
			(position_set_x, pos1, 0),
			(position_set_y, pos1, 0),
			(overlay_set_position, reg1, pos1),
		(try_end),

		]),
	(ti_on_presentation_run,
       		[
			(try_begin),
				(le, "$helmet_view", 0),
		        (presentation_set_duration, 0),
	        (try_end),
        	]),
]),

("zoom_view", prsntf_read_only, 0, [		#must use prsntf_read_only or you cannot attack
	(ti_on_presentation_load,
		[
		(assign, ":view", 0),
		(get_player_agent_no, ":player_agent"),
		(agent_get_wielded_item, ":item_handone", ":player_agent", 0),
		#(agent_get_wielded_item, ":item_handtwo", ":player_agent", 1),
		(try_begin),
			(eq, ":item_handone", -1),
			(assign, ":view", 1),	#use binoculars
		(else_try),
			#(ge, ":item_handone", 0),
			(item_get_type, ":item_type_handone", ":item_handone"),
			(try_begin),
				(this_or_next|eq, ":item_type_handone", itp_type_one_handed_wpn),
				(this_or_next|eq, ":item_type_handone", itp_type_two_handed_wpn),
				(this_or_next|eq, ":item_type_handone", itp_type_bow),
				(eq, ":item_type_handone", itp_type_polearm),
				(assign, ":view", 1),	#use binoculars
			(else_try),
				(this_or_next|eq, ":item_type_handone", itp_type_crossbow),
				(eq, ":item_type_handone", itp_type_pistol),
				(assign, ":view", 2),	#use scope
			(else_try),
				(assign, ":view", 0),	#pistol, other, don't do anything
			(try_end),
		(try_end),

		(try_begin),
			(eq, ":view", 1),
			 (create_mesh_overlay, reg1, "mesh_binocular_display"),
			 (position_set_x, pos1, 0),
			 (position_set_y, pos1, 0),
			 (overlay_set_position, reg1, pos1),
		(else_try),
			(eq, ":view", 2),
			(create_mesh_overlay, reg1, "mesh_weapon_display"),
			(position_set_x, pos1, 0),
			(position_set_y, pos1, 0),
			(overlay_set_position, reg1, pos1),
		(try_end),

		(presentation_set_duration, 999999),

		# --------------------------
							# Little Pos Helper by Kuba begin---------
							# (create_text_overlay, "$g_little_pos_helper", "@X: 00,Y: 00"),
							# (overlay_set_color, "$g_little_pos_helper", 0xFFFFFFFF),
							# (position_set_x, pos1, 10),
							# (position_set_y, pos1, 700),
							# (overlay_set_position, "$g_little_pos_helper", pos1),
							# ----------------------------------------

							# (create_mesh_overlay, reg1, "mesh_binocular_display"),
							# (position_set_x, pos1, 0),
							# (position_set_y, pos1, 0),
							# (position_set_z, pos1, 0),
							# (overlay_set_position, reg1, pos1),

							##Dynamic numbers by Swyter - Rotation
							# (create_text_overlay, "$g_rotation", "@Binocular Rotation"),
							# (position_set_x, pos1, 465),
							# (position_set_y, pos1, 200),
							# (position_set_z, pos1, 0),
							# (overlay_set_position, "$g_rotation", pos1),
							# (overlay_set_color, "$g_rotation", 0xde9e62),

							##Dynamic numbers by Swyter - Distance
							# (create_text_overlay, "$g_distance", "@Binocular Distance"),
							# (position_set_x, pos1, 238),
							# (position_set_y, pos1, 140),
							# (position_set_z, pos1, 0),
							# (overlay_set_position, "$g_distance", pos1),
							# (overlay_set_color, "$g_distance", 0x3e1213),
		#-----------------------------------------------------------
		]),
	(ti_on_presentation_run,
       		[
				#-----------------------------------------------------------
				# (mouse_get_position, pos1),
				# (position_get_x, reg1, pos1),
				# (position_get_y, reg2, pos1),
				# (overlay_set_text, "$g_little_pos_helper", "@X: {reg1},Y: {reg2}"),


				# (get_player_agent_no,":bin_player"),
				# (agent_get_position, pos2,":bin_player"),
				# (position_get_rotation_around_z,":bin_rotation",pos2),
				# (str_store_string,reg60,":bin_rotation"),

				# (agent_get_look_position, pos3, ":bin_player"),
				# (get_distance_between_positions,":bin_distance",pos2,pos3),
				# (store_div,":bin_distance",":bin_distance",1000),

				# (overlay_set_text, "$g_rotation", "@{reg60}"),
				# (overlay_set_text, "$g_distance", ":bin_distance"),
			#-----------------------------------------------------------

		(try_begin),
			(neg|game_key_is_down,gk_zoom),
			#(assign, "$zoom_view", 0),
			(presentation_set_duration, 0),
		(try_end),
        	]),
]),

("binocular_display", prsntf_read_only, 0, [
	(ti_on_presentation_load,
		[
		(presentation_set_duration, 999999),
        (create_mesh_overlay, reg1, "mesh_binocular_display"),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, 0),
		(position_set_z, pos1, 0),
        (overlay_set_position, reg1, pos1),
		]),
	(ti_on_presentation_event_state_change,
		[
		#(presentation_set_duration, 0),
		]),
	(ti_on_presentation_run,
       		[
			(try_begin),
				#(this_or_next|key_clicked, key_escape),
		        #(this_or_next|key_clicked, key_tab),
				#(this_or_next|key_clicked, key_b),
				(le, "$binocular_magnification", 0),
		        (presentation_set_duration, 0),
	        (try_end),
        	]),
]),


("player_damage", prsntf_read_only, 0, [		#must use prsntf_read_only or you cannot attack
	(ti_on_presentation_load,
		[
		(presentation_set_duration, 999999),
		#(presentation_set_duration, 110),	# 1.05 seconds to match the MT trigger
		#check the players health
		# (get_player_agent_no, ":player_agent"),
		# (store_agent_hit_points,":player_hp",":player_agent",0),	# set absolute to 1 to retrieve actual hps, otherwise will return relative hp in range [0..100]
		# (try_begin),
			# (le, ":player_hp", 25),
			# (assign, "$player_damage", 25),
			# (assign, ":mesh", "mesh_player_damage_25"),
		# (else_try),
			# (le, ":player_hp", 50),
			# (assign, "$player_damage", 50),
			# (assign, ":mesh", "mesh_player_damage_50"),
		# (else_try),
			# (le, ":player_hp", 75),
			# (assign, "$player_damage", 75),
			# (assign, ":mesh", "mesh_player_damage_75"),
		# (else_try),
			# (assign, "$player_damage", 0),
			# (assign, ":mesh", 0),
		# (try_end),
		(assign, ":mesh", "mesh_player_damage_25"),
		#display the mesh if necessary
		(try_begin),
			(neq, ":mesh", 0),
			#(display_message, "@create_mesh_overlay..."),
			(create_mesh_overlay, reg1, ":mesh"),
			(position_set_x, pos1, 0),
			(position_set_y, pos1, 0),		# 300 and -300 moves it behind the screen so it is hidden ?
			(position_set_z, pos1, 0),
			(overlay_set_position, reg1, pos1),
		(try_end),

		]),
	(ti_on_presentation_run,
    	[
		#check the players health
		# (get_player_agent_no, ":player_agent"),
		# (store_agent_hit_points,":player_hp",":player_agent",0),	# set absolute to 1 to retrieve actual hps, otherwise will return relative hp in range [0..100]
		# (try_begin),
			# (neq, ":player_hp", "$player_damage"),
			# (assign, "$player_damage", 0),
			# #(display_message, "@presentation_set_duration 0..."),
			# (presentation_set_duration, 0),
		# (try_end),
       	]),
]),

#--------------------------------------------------------------------------------------------------------------------------------------------

# string typer kit by jik and Slawomir of Aaarrghh
# http://forums.taleworlds.net/index.php/topic,57775.0.html
# http://forums.taleworlds.net/index.php/topic,57775.msg1503015.html#msg1503015

("typer", 0, mesh_load_window,   [
(ti_on_presentation_load,    [

#basic prsnt setup
   (presentation_set_duration, 999999),
   (set_fixed_point_multiplier, 1000),

#SW - new create instructions
   (create_text_overlay, "$g_presentation_obj_0", "@Type your Faction's name:", tf_center_justify),
   (position_set_x, pos1, 500),
   (position_set_y, pos1, 600),
   (overlay_set_position, "$g_presentation_obj_0", pos1),
#create buttons
   (create_button_overlay, "$g_presentation_obj_1", "@Accept", tf_center_justify),
   (position_set_x, pos1, 250),
   (position_set_y, pos1, 50),
   (overlay_set_position, "$g_presentation_obj_1", pos1),
   (create_button_overlay, "$g_presentation_obj_2", "@Reset", tf_center_justify),
   (position_set_x, pos1, 500),
   (position_set_y, pos1, 100),
   (overlay_set_position, "$g_presentation_obj_2", pos1),
   (create_button_overlay, "$g_presentation_obj_3", "@Cancel", tf_center_justify),
   (position_set_x, pos1, 750),
   (position_set_y, pos1, 50),
   (overlay_set_position, "$g_presentation_obj_3", pos1),
   (str_clear,s10),
   (assign,"$caps_on",0),
   (assign,"$str_len",0),
  # (create_text_overlay, "$g_string", s10, tf_double_space|tf_scrollable),
   (create_text_overlay, "$g_string", s10, tf_center_justify),
   (position_set_x, pos1, 500),
   (position_set_y, pos1, 500),
   (overlay_set_position, "$g_string", pos1),
]),
(ti_on_presentation_event_state_change,     [
   (store_trigger_param_1, ":object"),
   (try_begin),
      (eq, ":object", "$g_presentation_obj_1"),
     #here you can add a line that changes you faction name, party name etc. to "s10"
	 #SW - added faction_set_name
	  (faction_set_name, "fac_player_supporters_faction", "@{s10}"),
	  (display_message, "@Player Faction name changed."),
      (presentation_set_duration, 0),
   (try_end),
   (try_begin),
      (eq, ":object", "$g_presentation_obj_2"),
      (str_clear, s10),
	  (assign,"$str_len",0),	#bugfix by jik
   (try_end),
   (try_begin),
      (eq, ":object", "$g_presentation_obj_3"),
      (presentation_set_duration, 0),
   (try_end),
]),

(ti_on_presentation_run,       [
   (try_begin),
      (assign, "$caps_on",0),
      (this_or_next|key_is_down, key_left_shift),(key_is_down, key_right_shift),
      (assign, "$caps_on",1),
   (try_end),

   (try_begin),
      (assign, "$alt_on",0),
      (this_or_next|key_is_down, key_left_alt),(key_is_down, key_right_alt),
      (assign, "$alt_on",1),
   (try_end),

(try_begin),
(key_clicked, key_backspace),  ## to erase the last typed character
         (try_begin),
            (gt,"$str_len",0),
            (troop_set_slot, "trp_temp_array_b", "$str_len",0),
            (val_sub,"$str_len",1),
            (assign,reg2,"$str_len"),
            (call_script,"script_show_text_string"),
          (else_try),
            (display_message, "@Nothing to delete!"),
          (try_end),
        (try_end),

(try_begin),
(key_clicked, key_delete),
(str_clear,s10),(assign,"$str_len",0),
(try_end),

(try_begin),
(key_clicked, key_space),
         (assign,":val",key_space),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_1),
         (assign,":val",key_1),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_2),
         (assign,":val",key_2),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_3),
         (assign,":val",key_3),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_4),
         (assign,":val",key_4),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_5),
         (assign,":val",key_5),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_6),
         (assign,":val",key_6),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_7),
         (assign,":val",key_7),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_8),
         (assign,":val",key_8),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_9),
         (assign,":val",key_9),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_0),
         (assign,":val",key_0),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_a),
         (assign,":val",key_a),
          (try_begin),
         (eq,"$caps_on",1),
         (eq,"$alt_on",1),
            (val_add,":val",30000),
        (else_try),
         (eq,"$alt_on",1),
            (val_add,":val",20000),
        (else_try),
            (eq,"$caps_on",1),
            (val_add,":val",10000),
          (try_end),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_b),
         (assign,":val",key_b),
          (try_begin),
            (eq,"$caps_on",1),
            (val_add,":val",10000),  ## When checking for caps, can test if the value is over 9999, then subtract 10000 from it to get just the value
          (try_end),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_c),
         (assign,":val",key_c),
          (try_begin),
         (eq,"$caps_on",1),
         (eq,"$alt_on",1),
            (val_add,":val",30000),
        (else_try),
         (eq,"$alt_on",1),
            (val_add,":val",20000),
        (else_try),
            (eq,"$caps_on",1),
            (val_add,":val",10000),
          (try_end),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_d),
         (assign,":val",key_d),
          (try_begin),
            (eq,"$caps_on",1),
            (val_add,":val",10000),  ## When checking for caps, can test if the value is over 9999, then subtract 10000 from it to get just the value
          (try_end),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_e),
        (assign,":val",key_e),
          (try_begin),
         (eq,"$caps_on",1),
         (eq,"$alt_on",1),
            (val_add,":val",30000),
        (else_try),
         (eq,"$alt_on",1),
            (val_add,":val",20000),
        (else_try),
            (eq,"$caps_on",1),
            (val_add,":val",10000),
          (try_end),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_f),
         (assign,":val",key_f),
          (try_begin),
            (eq,"$caps_on",1),
            (val_add,":val",10000),  ## When checking for caps, can test if the value is over 9999, then subtract 10000 from it to get just the value
          (try_end),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_g),
         (assign,":val",key_g),
          (try_begin),
            (eq,"$caps_on",1),
            (val_add,":val",10000),  ## When checking for caps, can test if the value is over 9999, then subtract 10000 from it to get just the value
          (try_end),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_h),
         (assign,":val",key_h),
          (try_begin),
            (eq,"$caps_on",1),
            (val_add,":val",10000),  ## When checking for caps, can test if the value is over 9999, then subtract 10000 from it to get just the value
          (try_end),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_i),
         (assign,":val",key_i),
          (try_begin),
            (eq,"$caps_on",1),
            (val_add,":val",10000),  ## When checking for caps, can test if the value is over 9999, then subtract 10000 from it to get just the value
          (try_end),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_j),
         (assign,":val",key_j),
          (try_begin),
            (eq,"$caps_on",1),
            (val_add,":val",10000),  ## When checking for caps, can test if the value is over 9999, then subtract 10000 from it to get just the value
          (try_end),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_k),
         (assign,":val",key_k),
          (try_begin),
            (eq,"$caps_on",1),
            (val_add,":val",10000),  ## When checking for caps, can test if the value is over 9999, then subtract 10000 from it to get just the value
          (try_end),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_l),
         (assign,":val",key_l),
          (try_begin),
         (eq,"$caps_on",1),
         (eq,"$alt_on",1),
            (val_add,":val",30000),
        (else_try),
         (eq,"$alt_on",1),
            (val_add,":val",20000),
        (else_try),
            (eq,"$caps_on",1),
            (val_add,":val",10000),
          (try_end),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_m),
         (assign,":val",key_m),
          (try_begin),
            (eq,"$caps_on",1),
            (val_add,":val",10000),  ## When checking for caps, can test if the value is over 9999, then subtract 10000 from it to get just the value
          (try_end),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_n),
         (assign,":val",key_n),
          (try_begin),
         (eq,"$caps_on",1),
         (eq,"$alt_on",1),
            (val_add,":val",30000),
        (else_try),
         (eq,"$alt_on",1),
            (val_add,":val",20000),
        (else_try),
            (eq,"$caps_on",1),
            (val_add,":val",10000),
          (try_end),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_o),
         (assign,":val",key_o),
          (try_begin),
         (eq,"$caps_on",1),
         (eq,"$alt_on",1),
            (val_add,":val",30000),
        (else_try),
         (eq,"$alt_on",1),
            (val_add,":val",20000),
        (else_try),
            (eq,"$caps_on",1),
            (val_add,":val",10000),
          (try_end),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_p),
         (assign,":val",key_p),
          (try_begin),
            (eq,"$caps_on",1),
            (val_add,":val",10000),  ## When checking for caps, can test if the value is over 9999, then subtract 10000 from it to get just the value
          (try_end),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_q),
         (assign,":val",key_q),
          (try_begin),
            (eq,"$caps_on",1),
            (val_add,":val",10000),  ## When checking for caps, can test if the value is over 9999, then subtract 10000 from it to get just the value
          (try_end),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_r),
         (assign,":val",key_r),
          (try_begin),
            (eq,"$caps_on",1),
            (val_add,":val",10000),  ## When checking for caps, can test if the value is over 9999, then subtract 10000 from it to get just the value
          (try_end),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_s),
         (assign,":val",key_s),
          (try_begin),
         (eq,"$caps_on",1),
         (eq,"$alt_on",1),
            (val_add,":val",30000),
        (else_try),
         (eq,"$alt_on",1),
            (val_add,":val",20000),
        (else_try),
            (eq,"$caps_on",1),
            (val_add,":val",10000),
          (try_end),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_t),
         (assign,":val",key_t),
          (try_begin),
            (eq,"$caps_on",1),
            (val_add,":val",10000),  ## When checking for caps, can test if the value is over 9999, then subtract 10000 from it to get just the value
          (try_end),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_u),
         (assign,":val",key_u),
          (try_begin),
            (eq,"$caps_on",1),
            (val_add,":val",10000),  ## When checking for caps, can test if the value is over 9999, then subtract 10000 from it to get just the value
          (try_end),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_v),
         (assign,":val",key_v),
          (try_begin),
            (eq,"$caps_on",1),
            (val_add,":val",10000),  ## When checking for caps, can test if the value is over 9999, then subtract 10000 from it to get just the value
          (try_end),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_w),
         (assign,":val",key_w),
          (try_begin),
            (eq,"$caps_on",1),
            (val_add,":val",10000),  ## When checking for caps, can test if the value is over 9999, then subtract 10000 from it to get just the value
          (try_end),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_x),
         (assign,":val",key_x),
          (try_begin),
         (eq,"$caps_on",1),
         (eq,"$alt_on",1),
            (val_add,":val",30000),
        (else_try),
         (eq,"$alt_on",1),
            (val_add,":val",20000),
        (else_try),
            (eq,"$caps_on",1),
            (val_add,":val",10000),
          (try_end),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_y),
         (assign,":val",key_y),
          (try_begin),
            (eq,"$caps_on",1),
            (val_add,":val",10000),  ## When checking for caps, can test if the value is over 9999, then subtract 10000 from it to get just the value
          (try_end),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(else_try),
(key_clicked, key_z),
         (assign,":val",key_z),
          (try_begin),
         (eq,"$caps_on",1),
         (eq,"$alt_on",1),
            (val_add,":val",30000),
        (else_try),
         (eq,"$alt_on",1),
            (val_add,":val",20000),
        (else_try),
            (eq,"$caps_on",1),
            (val_add,":val",10000),
          (try_end),
          (troop_set_slot, "trp_temp_array_b", "$str_len",":val"),
          (val_add,"$str_len",1),
          (call_script,"script_show_text_string"),
(try_end),
(overlay_set_text, "$g_string", s10),

 ]),
 ]),
######################################################################################################

  ("banner_selection",0,mesh_load_window,[
      (ti_on_presentation_load,
       [(set_fixed_point_multiplier, 1000),
        (str_store_string, s1, "str_banner_selection_text"),
        (create_text_overlay, reg1, s1, tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (overlay_set_text, reg1, s1),
		#SW modified Next Page button on banner_selection (nevermind)
        (create_button_overlay, "$g_presentation_obj_1", "@Next Page", tf_center_justify),
		#(create_button_overlay, "$g_presentation_obj_1", 0, tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 50),
        (overlay_set_position, "$g_presentation_obj_1", pos1),

        (assign, ":x_pos", 150),
        (assign, ":y_pos", 575),
        (assign, ":try_end", banner_meshes_end_minus_one),
        (store_mul, ":begin_mesh", 16, "$g_presentation_page_no"),
        (val_add, ":begin_mesh", banner_meshes_begin),
        (store_add, ":try_end_2", ":begin_mesh", 16),
        (val_min, ":try_end", ":try_end_2"),
        (store_add, "$g_presentation_banner_start", "$g_presentation_obj_1", 1),
        (try_for_range, ":cur_banner_mesh", ":begin_mesh", ":try_end"),
          (create_image_button_overlay, reg1, ":cur_banner_mesh", ":cur_banner_mesh"),
          (position_set_x, pos1, ":x_pos"),
          (position_set_y, pos1, ":y_pos"),
          (overlay_set_position, reg1, pos1),
          (position_set_x, pos1, 100),
          (position_set_y, pos1, 100),
          (overlay_set_size, reg1, pos1),
          (val_add, ":x_pos", 100),
          (ge, ":x_pos", 900),
          (assign, ":x_pos", 150),
          (val_sub, ":y_pos", 250),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (val_add, "$g_presentation_page_no", 1),
		  #SW - modified total pages on banner selection presentation
          #(val_mod, "$g_presentation_page_no", 8),
		  (val_mod, "$g_presentation_page_no", 3),
          (start_presentation, "prsnt_banner_selection"),
        (else_try),
          (store_sub, ":selected_banner", ":object", "$g_presentation_banner_start"),
          (store_mul, ":page_adder", 16, "$g_presentation_page_no"),
          (val_add, ":selected_banner", ":page_adder"),
          (store_add, ":selected_banner_map_icon", ":selected_banner", banner_map_icons_begin),
          (party_set_banner_icon, "p_main_party", ":selected_banner_map_icon"),
          (store_add, ":selected_banner_spr", ":selected_banner", banner_scene_props_begin),
          (troop_set_slot, "trp_player", slot_troop_banner_scene_prop, ":selected_banner_spr"),
          (presentation_set_duration, 0),
          (assign, ":troop_to_change", 0),
          (assign, ":end_cond", faction_heroes_end),
          (try_for_range, ":cur_troop", faction_heroes_begin, ":end_cond"),
            (troop_slot_eq, ":cur_troop", slot_troop_banner_scene_prop, ":selected_banner_spr"),
            (assign, ":troop_to_change", ":cur_troop"),
            (assign, ":end_cond", 0),
			#SW - don't modify troop banners if player chooses one
            #(troop_set_slot, ":cur_troop", slot_troop_banner_scene_prop, banner_scene_props_end_minus_one),
            (troop_get_slot, ":cur_party", ":cur_troop", slot_troop_leaded_party),
            (gt, ":cur_party", 0),
			#SW - don't modify troop banners if player chooses one
            #(party_set_banner_icon, ":cur_party", banner_map_icons_end_minus_one),
          (try_end),
          (try_for_range, ":cur_center", walled_centers_begin, walled_centers_end),
            (try_begin),
              (party_slot_eq, ":cur_center", slot_mainplanet_lord, "trp_player"),
              (party_set_banner_icon, ":cur_center", ":selected_banner_map_icon"),
            (else_try),
              (party_slot_eq, ":cur_center", slot_mainplanet_lord, ":troop_to_change"),
			  #SW - don't modify troop banners if player chooses one
              #(party_set_banner_icon, ":cur_center", banner_map_icons_end_minus_one),
            (try_end),
          (try_end),
        (try_end),
        ]),
      (ti_on_presentation_run,
       [(try_begin),
          (this_or_next|key_clicked, key_space),
          (this_or_next|key_clicked, key_enter),
          (this_or_next|key_clicked, key_escape),
          (key_clicked, key_back_space),
          (presentation_set_duration, 0),
        (try_end),

        ]),
      ]),

  ("custom_banner", 0, mesh_load_window,
   [
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (troop_get_slot, ":flag_type", "trp_player", slot_troop_custom_banner_flag_type),
        (val_max, ":flag_type", 0),
        (val_add, ":flag_type", custom_banner_flag_types_begin),
        (troop_get_slot, ":map_flag_type", "trp_player", slot_troop_custom_banner_map_flag_type),
        (val_max, ":map_flag_type", 0),
        (val_add, ":map_flag_type", custom_banner_flag_map_types_begin),
##        (create_mesh_overlay_with_tableau_material, "$g_presentation_obj_1", ":flag_type", "tableau_custom_banner_square", "trp_player"),
        (troop_get_slot, ":bg_color_1", "trp_player", slot_troop_custom_banner_bg_color_1),
        (troop_get_slot, ":bg_color_2", "trp_player", slot_troop_custom_banner_bg_color_2),

        (create_text_overlay, reg1, "str_color_no_1", 0),
        (position_set_x, pos1, 40),
        (position_set_y, pos1, 550),
        (overlay_set_position, reg1, pos1),
        (create_text_overlay, reg1, "str_color_no_2", 0),
        (position_set_x, pos1, 40),
        (position_set_y, pos1, 500),
        (overlay_set_position, reg1, pos1),

        (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_22", "mesh_color_picker", "tableau_color_picker", ":bg_color_1"),
        (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_23", "mesh_color_picker", "tableau_color_picker", ":bg_color_2"),
        (position_set_x, pos1, 200),
        (position_set_y, pos1, 565),
        (overlay_set_position, "$g_presentation_obj_22", pos1),
        (position_set_y, pos1, 515),
        (overlay_set_position, "$g_presentation_obj_23", pos1),
        (position_set_x, pos1, 250),
        (position_set_y, pos1, 250),
        (overlay_set_size, "$g_presentation_obj_22", pos1),
        (overlay_set_size, "$g_presentation_obj_23", pos1),

        (create_button_overlay, "$g_presentation_obj_2", "str_change", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_3", "str_change", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_4", "str_change_background", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_5", "str_change", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_19", "str_change", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_20", "str_accept", tf_center_justify),
        (troop_get_slot, ":num_charges", "trp_player", slot_troop_custom_banner_num_charges),
        (create_button_overlay, "$g_presentation_obj_16", "str_randomize", tf_center_justify),
        (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_17", ":flag_type", "tableau_custom_banner_default", "trp_player"),
        (try_begin),
          (eq, ":map_flag_type", "mesh_custom_map_banner_01"),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_18", ":map_flag_type", "tableau_custom_banner_square", "trp_player"),
        (else_try),
          (eq, ":map_flag_type", "mesh_custom_map_banner_02"),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_18", ":map_flag_type", "tableau_custom_banner_short", "trp_player"),
        (else_try),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_18", ":map_flag_type", "tableau_custom_banner_tall", "trp_player"),
        (try_end),
        (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_1", -1, "tableau_custom_banner_square_no_mesh", "trp_player"),
        (create_text_overlay, reg1, "str_sample_banner", tf_center_justify),
        (position_set_x, pos1, 825),
        (position_set_y, pos1, 650),
        (overlay_set_position, reg1, pos1),
        (create_text_overlay, reg1, "str_sample_map_banner", tf_center_justify),
        (position_set_y, pos1, 500),
        (overlay_set_position, reg1, pos1),

        (position_set_x, pos1, 800),
        (position_set_y, pos1, 640),
        (overlay_set_position, "$g_presentation_obj_17", pos1),
        (position_set_x, pos1, 780),
        (position_set_y, pos1, 315),
        (overlay_set_position, "$g_presentation_obj_18", pos1),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 50),
        (overlay_set_size, "$g_presentation_obj_17", pos1),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 50),
        (overlay_set_size, "$g_presentation_obj_18", pos1),


        (create_text_overlay, reg1, "str_number_of_charges", 0),
        (position_set_x, pos1, 40),
        (position_set_y, pos1, 350),
        (overlay_set_position, reg1, pos1),

        (assign, reg1, ":num_charges"),
        (create_text_overlay, reg2, "str_reg1", tf_center_justify),
        (position_set_x, pos1, 350),
        (position_set_y, pos1, 350),
        (overlay_set_position, reg2, pos1),
        (try_begin),
          (lt, ":num_charges", 4),
          (create_button_overlay, "$g_presentation_obj_15", "str_plus", tf_center_justify),
          (position_set_x, pos1, 385),
          (position_set_y, pos1, 350),
          (overlay_set_position, "$g_presentation_obj_15", pos1),
        (else_try),
          (assign, "$g_presentation_obj_15", -1),
        (try_end),
        (try_begin),
          (gt, ":num_charges", 0),
          (create_button_overlay, "$g_presentation_obj_21", "str_minus", tf_center_justify),
          (position_set_x, pos1, 370),
          (position_set_y, pos1, 350),
          (overlay_set_position, "$g_presentation_obj_21", pos1),
        (else_try),
          (assign, "$g_presentation_obj_21", -1),
        (try_end),

        (try_begin),
          (ge, ":num_charges", 1),
          (create_text_overlay, reg1, "str_charge", tf_center_justify),
          (position_set_x, pos1, 300),
          (position_set_y, pos1, 300),
          (overlay_set_position, reg1, pos1),
          (create_text_overlay, reg1, "str_color", tf_center_justify),
          (position_set_x, pos1, 550),
          (position_set_y, pos1, 300),
          (overlay_set_position, reg1, pos1),
          (create_button_overlay, "$g_presentation_obj_14", "str_change_charge_position", tf_center_justify),
          (position_set_y, pos1, 350),
          (position_set_x, pos1, 550),
          (overlay_set_position, "$g_presentation_obj_14", pos1),

          (create_text_overlay, reg1, "str_charge_no_1", 0),
          (position_set_x, pos1, 40),
          (position_set_y, pos1, 240),
          (overlay_set_position, reg1, pos1),
          (create_button_overlay, "$g_presentation_obj_6", "str_change", 0),
          (position_set_x, pos1, 310),
          (overlay_set_position, "$g_presentation_obj_6", pos1),
          (create_button_overlay, "$g_presentation_obj_7", "str_change", 0),
          (position_set_x, pos1, 560),
          (overlay_set_position, "$g_presentation_obj_7", pos1),
          (troop_get_slot, ":cur_charge", "trp_player", slot_troop_custom_banner_charge_type_1),
          (val_mod, ":cur_charge", 256),
          (val_add, ":cur_charge", custom_banner_charges_begin),
          (create_image_button_overlay, "$g_presentation_obj_24", ":cur_charge", ":cur_charge"),
          (position_set_x, pos1, 260),
          (position_set_y, pos1, 255),
          (overlay_set_position, "$g_presentation_obj_24", pos1),
          (position_set_x, pos1, 50),
          (position_set_y, pos1, 50),
          (overlay_set_size, "$g_presentation_obj_24", pos1),
          (troop_get_slot, ":cur_charge_color", "trp_player", slot_troop_custom_banner_charge_color_1),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_28", "mesh_color_picker", "tableau_color_picker", ":cur_charge_color"),
          (position_set_x, pos1, 530),
          (position_set_y, pos1, 255),
          (overlay_set_position, "$g_presentation_obj_28", pos1),
          (position_set_x, pos1, 250),
          (position_set_y, pos1, 250),
          (overlay_set_size, "$g_presentation_obj_28", pos1),

          (create_button_overlay, "$g_presentation_obj_32", "str_flip_horizontal", 0),
          (position_set_x, pos1, 700),
          (position_set_y, pos1, 240),
          (overlay_set_position, "$g_presentation_obj_32", pos1),
          (create_button_overlay, "$g_presentation_obj_33", "str_flip_vertical", 0),
          (position_set_x, pos1, 800),
          (overlay_set_position, "$g_presentation_obj_33", pos1),
        (try_end),
        (try_begin),
          (ge, ":num_charges", 2),
          (create_text_overlay, reg1, "str_charge_no_2", 0),
          (position_set_x, pos1, 40),
          (position_set_y, pos1, 180),
          (overlay_set_position, reg1, pos1),
          (create_button_overlay, "$g_presentation_obj_8", "str_change", 0),
          (position_set_x, pos1, 310),
          (overlay_set_position, "$g_presentation_obj_8", pos1),
          (create_button_overlay, "$g_presentation_obj_9", "str_change", 0),
          (position_set_x, pos1, 560),
          (overlay_set_position, "$g_presentation_obj_9", pos1),
          (troop_get_slot, ":cur_charge", "trp_player", slot_troop_custom_banner_charge_type_2),
          (val_mod, ":cur_charge", 256),
          (val_add, ":cur_charge", custom_banner_charges_begin),
          (create_image_button_overlay, "$g_presentation_obj_25", ":cur_charge", ":cur_charge"),
          (position_set_x, pos1, 260),
          (position_set_y, pos1, 195),
          (overlay_set_position, "$g_presentation_obj_25", pos1),
          (position_set_x, pos1, 50),
          (position_set_y, pos1, 50),
          (overlay_set_size, "$g_presentation_obj_25", pos1),
          (troop_get_slot, ":cur_charge_color", "trp_player", slot_troop_custom_banner_charge_color_2),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_29", "mesh_color_picker", "tableau_color_picker", ":cur_charge_color"),
          (position_set_x, pos1, 530),
          (position_set_y, pos1, 195),
          (overlay_set_position, "$g_presentation_obj_29", pos1),
          (position_set_x, pos1, 250),
          (position_set_y, pos1, 250),
          (overlay_set_size, "$g_presentation_obj_29", pos1),

          (create_button_overlay, "$g_presentation_obj_34", "str_flip_horizontal", 0),
          (position_set_x, pos1, 700),
          (position_set_y, pos1, 180),
          (overlay_set_position, "$g_presentation_obj_34", pos1),
          (create_button_overlay, "$g_presentation_obj_35", "str_flip_vertical", 0),
          (position_set_x, pos1, 800),
          (overlay_set_position, "$g_presentation_obj_35", pos1),
        (try_end),
        (try_begin),
          (ge, ":num_charges", 3),
          (create_text_overlay, reg1, "str_charge_no_3", 0),
          (position_set_x, pos1, 40),
          (position_set_y, pos1, 120),
          (overlay_set_position, reg1, pos1),
          (create_button_overlay, "$g_presentation_obj_10", "str_change", 0),
          (position_set_x, pos1, 310),
          (overlay_set_position, "$g_presentation_obj_10", pos1),
          (create_button_overlay, "$g_presentation_obj_11", "str_change", 0),
          (position_set_x, pos1, 560),
          (overlay_set_position, "$g_presentation_obj_11", pos1),
          (troop_get_slot, ":cur_charge", "trp_player", slot_troop_custom_banner_charge_type_3),
          (val_mod, ":cur_charge", 256),
          (val_add, ":cur_charge", custom_banner_charges_begin),
          (create_image_button_overlay, "$g_presentation_obj_26", ":cur_charge", ":cur_charge"),
          (position_set_x, pos1, 260),
          (position_set_y, pos1, 135),
          (overlay_set_position, "$g_presentation_obj_26", pos1),
          (position_set_x, pos1, 50),
          (position_set_y, pos1, 50),
          (overlay_set_size, "$g_presentation_obj_26", pos1),
          (troop_get_slot, ":cur_charge_color", "trp_player", slot_troop_custom_banner_charge_color_3),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_30", "mesh_color_picker", "tableau_color_picker", ":cur_charge_color"),
          (position_set_x, pos1, 530),
          (position_set_y, pos1, 135),
          (overlay_set_position, "$g_presentation_obj_30", pos1),
          (position_set_x, pos1, 250),
          (position_set_y, pos1, 250),
          (overlay_set_size, "$g_presentation_obj_30", pos1),

          (create_button_overlay, "$g_presentation_obj_36", "str_flip_horizontal", 0),
          (position_set_x, pos1, 700),
          (position_set_y, pos1, 120),
          (overlay_set_position, "$g_presentation_obj_36", pos1),
          (create_button_overlay, "$g_presentation_obj_37", "str_flip_vertical", 0),
          (position_set_x, pos1, 800),
          (overlay_set_position, "$g_presentation_obj_37", pos1),
        (try_end),
        (try_begin),
          (ge, ":num_charges", 4),
          (create_text_overlay, reg1, "str_charge_no_4", 0),
          (position_set_x, pos1, 40),
          (position_set_y, pos1, 60),
          (overlay_set_position, reg1, pos1),
          (create_button_overlay, "$g_presentation_obj_12", "str_change", 0),
          (position_set_x, pos1, 310),
          (overlay_set_position, "$g_presentation_obj_12", pos1),
          (create_button_overlay, "$g_presentation_obj_13", "str_change", 0),
          (position_set_x, pos1, 560),
          (overlay_set_position, "$g_presentation_obj_13", pos1),
          (troop_get_slot, ":cur_charge", "trp_player", slot_troop_custom_banner_charge_type_4),
          (val_mod, ":cur_charge", 256),
          (val_add, ":cur_charge", custom_banner_charges_begin),
          (create_image_button_overlay, "$g_presentation_obj_27", ":cur_charge", ":cur_charge"),
          (position_set_x, pos1, 260),
          (position_set_y, pos1, 75),
          (overlay_set_position, "$g_presentation_obj_27", pos1),
          (position_set_x, pos1, 50),
          (position_set_y, pos1, 50),
          (overlay_set_size, "$g_presentation_obj_27", pos1),
          (troop_get_slot, ":cur_charge_color", "trp_player", slot_troop_custom_banner_charge_color_4),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_31", "mesh_color_picker", "tableau_color_picker", ":cur_charge_color"),
          (position_set_x, pos1, 530),
          (position_set_y, pos1, 75),
          (overlay_set_position, "$g_presentation_obj_31", pos1),
          (position_set_x, pos1, 250),
          (position_set_y, pos1, 250),
          (overlay_set_size, "$g_presentation_obj_31", pos1),

          (create_button_overlay, "$g_presentation_obj_38", "str_flip_horizontal", 0),
          (position_set_x, pos1, 700),
          (position_set_y, pos1, 60),
          (overlay_set_position, "$g_presentation_obj_38", pos1),
          (create_button_overlay, "$g_presentation_obj_39", "str_flip_vertical", 0),
          (position_set_x, pos1, 800),
          (overlay_set_position, "$g_presentation_obj_39", pos1),
        (try_end),

        (position_set_x, pos1, 350),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        (position_set_x, pos1, 275),
        (position_set_y, pos1, 550),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        (position_set_y, pos1, 500),
        (overlay_set_position, "$g_presentation_obj_3", pos1),
        (position_set_x, pos1, 175),
        (position_set_y, pos1, 600),
        (overlay_set_position, "$g_presentation_obj_4", pos1),
        (position_set_x, pos1, 880),
        (position_set_y, pos1, 575),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_19", pos1),
        (position_set_y, pos1, 650),
        (position_set_x, pos1, 175),
        (overlay_set_position, "$g_presentation_obj_16", pos1),
        (position_set_y, pos1, 150),
        (position_set_x, pos1, 850),
        (overlay_set_position, "$g_presentation_obj_20", pos1),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (troop_get_slot, ":num_charges", "trp_player", slot_troop_custom_banner_num_charges),
        (try_begin),
          (this_or_next|eq, ":object", "$g_presentation_obj_2"),
          (eq, ":object", "$g_presentation_obj_22"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_bg_color_1),
          (start_presentation, "prsnt_color_selection"),
        (else_try),
          (this_or_next|eq, ":object", "$g_presentation_obj_3"),
          (eq, ":object", "$g_presentation_obj_23"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_bg_color_2),
          (start_presentation, "prsnt_color_selection"),
        (else_try),
          (this_or_next|eq, ":object", "$g_presentation_obj_4"),
          (eq, ":object", "$g_presentation_obj_1"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (start_presentation, "prsnt_banner_background_selection"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_5"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (start_presentation, "prsnt_banner_flag_type_selection"),
        (else_try),
          (ge, ":num_charges", 1),
          (this_or_next|eq, ":object", "$g_presentation_obj_6"),
          (eq, ":object", "$g_presentation_obj_24"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_type_1),
          (start_presentation, "prsnt_banner_charge_selection"),
        (else_try),
          (ge, ":num_charges", 1),
          (this_or_next|eq, ":object", "$g_presentation_obj_7"),
          (eq, ":object", "$g_presentation_obj_28"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_color_1),
          (start_presentation, "prsnt_color_selection"),
        (else_try),
          (ge, ":num_charges", 2),
          (this_or_next|eq, ":object", "$g_presentation_obj_8"),
          (eq, ":object", "$g_presentation_obj_25"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_type_2),
          (start_presentation, "prsnt_banner_charge_selection"),
        (else_try),
          (ge, ":num_charges", 2),
          (this_or_next|eq, ":object", "$g_presentation_obj_9"),
          (eq, ":object", "$g_presentation_obj_29"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_color_2),
          (start_presentation, "prsnt_color_selection"),
        (else_try),
          (ge, ":num_charges", 3),
          (this_or_next|eq, ":object", "$g_presentation_obj_10"),
          (eq, ":object", "$g_presentation_obj_26"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_type_3),
          (start_presentation, "prsnt_banner_charge_selection"),
        (else_try),
          (ge, ":num_charges", 3),
          (this_or_next|eq, ":object", "$g_presentation_obj_11"),
          (eq, ":object", "$g_presentation_obj_30"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_color_3),
          (start_presentation, "prsnt_color_selection"),
        (else_try),
          (ge, ":num_charges", 4),
          (this_or_next|eq, ":object", "$g_presentation_obj_12"),
          (eq, ":object", "$g_presentation_obj_27"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_type_4),
          (start_presentation, "prsnt_banner_charge_selection"),
        (else_try),
          (ge, ":num_charges", 4),
          (this_or_next|eq, ":object", "$g_presentation_obj_13"),
          (eq, ":object", "$g_presentation_obj_31"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_color_4),
          (start_presentation, "prsnt_color_selection"),
        (else_try),
          (ge, ":num_charges", 1),
          (eq, ":object", "$g_presentation_obj_14"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (start_presentation, "prsnt_banner_charge_positioning"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_15"),
          (troop_get_slot, ":num_charges", "trp_player", slot_troop_custom_banner_num_charges),
          (val_add, ":num_charges", 1),
          (val_clamp, ":num_charges", 0, 5),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_num_charges, ":num_charges"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_21"),
          (troop_get_slot, ":num_charges", "trp_player", slot_troop_custom_banner_num_charges),
          (val_sub, ":num_charges", 1),
          (val_clamp, ":num_charges", 0, 5),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_num_charges, ":num_charges"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_16"),
          (call_script, "script_get_random_custom_banner", "trp_player"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_17"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (start_presentation, "prsnt_banner_flag_type_selection"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_18"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (start_presentation, "prsnt_banner_flag_map_type_selection"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_19"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (start_presentation, "prsnt_banner_flag_map_type_selection"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_32"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_1),
          (store_mod, ":charge_type_base", ":charge_type", 256),
          (val_div, ":charge_type", 256),
          (store_mod, ":flag", ":charge_type", 2),
          (val_div, ":charge_type", 2), #remove flag
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":charge_type", 2),
          (val_add, ":charge_type", ":flag"),
          (val_mul, ":charge_type", 256),
          (val_add, ":charge_type", ":charge_type_base"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_1, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_34"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_2),
          (store_mod, ":charge_type_base", ":charge_type", 256),
          (val_div, ":charge_type", 256),
          (store_mod, ":flag", ":charge_type", 2),
          (val_div, ":charge_type", 2), #remove flag
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":charge_type", 2),
          (val_add, ":charge_type", ":flag"),
          (val_mul, ":charge_type", 256),
          (val_add, ":charge_type", ":charge_type_base"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_2, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_36"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_3),
          (store_mod, ":charge_type_base", ":charge_type", 256),
          (val_div, ":charge_type", 256),
          (store_mod, ":flag", ":charge_type", 2),
          (val_div, ":charge_type", 2), #remove flag
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":charge_type", 2),
          (val_add, ":charge_type", ":flag"),
          (val_mul, ":charge_type", 256),
          (val_add, ":charge_type", ":charge_type_base"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_3, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_38"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_4),
          (store_mod, ":charge_type_base", ":charge_type", 256),
          (val_div, ":charge_type", 256),
          (store_mod, ":flag", ":charge_type", 2),
          (val_div, ":charge_type", 2), #remove flag
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":charge_type", 2),
          (val_add, ":charge_type", ":flag"),
          (val_mul, ":charge_type", 256),
          (val_add, ":charge_type", ":charge_type_base"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_4, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_33"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_1),
          (store_div, ":flag", ":charge_type", 512),
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":flag", 512),
          (val_mod, ":charge_type", 512), #remove flag
          (val_add, ":charge_type", ":flag"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_1, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_35"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_2),
          (store_div, ":flag", ":charge_type", 512),
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":flag", 512),
          (val_mod, ":charge_type", 512), #remove flag
          (val_add, ":charge_type", ":flag"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_2, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_37"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_3),
          (store_div, ":flag", ":charge_type", 512),
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":flag", 512),
          (val_mod, ":charge_type", 512), #remove flag
          (val_add, ":charge_type", ":flag"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_3, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_39"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_4),
          (store_div, ":flag", ":charge_type", 512),
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":flag", 512),
          (val_mod, ":charge_type", 512), #remove flag
          (val_add, ":charge_type", ":flag"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_4, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_20"),
          (troop_get_slot, ":flag_icon", "trp_player", slot_troop_custom_banner_map_flag_type),
          (try_begin),
            (ge, ":flag_icon", 0),
            (val_add, ":flag_icon", custom_banner_map_icons_begin),
            (party_set_banner_icon, "p_main_party", ":flag_icon"),
          (try_end),
          (presentation_set_duration, 0),
        (try_end),
        ]),
##     (ti_on_presentation_run,
##      [(try_begin),
##         (this_or_next|key_clicked, key_space),
##         (this_or_next|key_clicked, key_enter),
##         (this_or_next|key_clicked, key_escape),
##         (key_clicked, key_back_space),
##         (presentation_set_duration, 0),
##       (try_end),
##       ]),
     ]),

  ("banner_charge_positioning", 0, mesh_load_window,
   [
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (create_text_overlay, reg1, "str_choose_position", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (assign, ":pos_x", 125),
        (assign, ":pos_y", 400),
        (call_script, "script_get_troop_custom_banner_num_positionings", "trp_player"),
        (assign, ":num_positionings", reg0),
        (store_mul, ":x_needed", ":num_positionings", 125),
        (val_sub, ":x_needed", 25),
        (store_div, ":pos_x", ":x_needed", 2),
        (store_sub, ":pos_x", 500, ":pos_x"),
        (try_for_range, ":cur_positioning", 0, ":num_positionings"),
          (create_image_button_overlay_with_tableau_material, reg1, -1, "tableau_positioning_selection", ":cur_positioning"),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_add, ":pos_x", 125),
          (overlay_set_position, reg1, pos1),
          (troop_set_slot, "trp_temp_array_a", ":cur_positioning", reg1),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (call_script, "script_get_troop_custom_banner_num_positionings", "trp_player"),
        (assign, ":num_positionings", reg0),
        (try_for_range, ":trp_slot_index", 0, ":num_positionings"),
          (troop_slot_eq, "trp_temp_array_a", ":trp_slot_index", ":object"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_positioning, ":trp_slot_index"),
          (assign, ":num_positionings", 0),
        (try_end),
        (try_begin),
          (gt, "$g_presentation_next_presentation", 0),
          (start_presentation, "$g_presentation_next_presentation"),
        (else_try),
          (presentation_set_duration, 0),
        (try_end),
        ]),
     ]),

  ("banner_charge_selection", 0, mesh_load_window,
   [
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (create_text_overlay, reg1, "str_choose_charge", tf_center_justify),

        (position_set_x, pos1, 500),
        (position_set_y, pos1, 650),
        (overlay_set_position, reg1, pos1),
        (assign, ":pos_x", 100),
        (assign, ":pos_y", 600),
        (try_for_range, ":cur_charge", custom_banner_charges_begin, custom_banner_charges_end),
          (create_image_button_overlay, reg1, ":cur_charge", ":cur_charge"),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_add, ":pos_x", 100),
          (try_begin),
            (gt, ":pos_x", 900),
            (assign, ":pos_x", 100),
            (val_sub, ":pos_y", 100),
          (try_end),
          (overlay_set_position, reg1, pos1),
          (position_set_x, pos1, 80),
          (position_set_y, pos1, 80),
          (overlay_set_size, reg1, pos1),
          (store_sub, ":slot_index", ":cur_charge", custom_banner_charges_begin),
          (troop_set_slot, "trp_temp_array_a", ":slot_index", reg1),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (assign, ":end_cond", custom_banner_charges_end),
        (val_sub, ":end_cond", custom_banner_charges_begin),
        (try_for_range, ":trp_slot_index", 0, ":end_cond"),
          (troop_slot_eq, "trp_temp_array_a", ":trp_slot_index", ":object"),
          (troop_set_slot, "trp_player", "$g_presentation_output_slot", ":trp_slot_index"),
          (assign, ":end_cond", 0),
        (try_end),
        (try_begin),
          (gt, "$g_presentation_next_presentation", 0),
          (start_presentation, "$g_presentation_next_presentation"),
        (else_try),
          (presentation_set_duration, 0),
        (try_end),
        ]),
     ]),

  ("banner_background_selection", 0, mesh_load_window,
   [
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (create_text_overlay, reg1, "str_choose_background", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (assign, ":pos_x", 75),
        (assign, ":pos_y", 450),
        (try_for_range, ":cur_banner", custom_banner_backgrounds_begin, custom_banner_backgrounds_end),
          (store_sub, ":slot_index", ":cur_banner", custom_banner_backgrounds_begin),
          (create_image_button_overlay_with_tableau_material, reg1, -1, "tableau_background_selection", ":slot_index"),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_add, ":pos_x", 125),
          (try_begin),
            (gt, ":pos_x", 900),
            (assign, ":pos_x", 75),
            (val_sub, ":pos_y", 125),
          (try_end),
          (overlay_set_position, reg1, pos1),
          (troop_set_slot, "trp_temp_array_a", ":slot_index", reg1),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (assign, ":end_cond", custom_banner_backgrounds_end),
        (val_sub, ":end_cond", custom_banner_backgrounds_begin),
        (try_for_range, ":trp_slot_index", 0, ":end_cond"),
          (troop_slot_eq, "trp_temp_array_a", ":trp_slot_index", ":object"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_bg_type, ":trp_slot_index"),
          (assign, ":end_cond", 0),
        (try_end),
        (try_begin),
          (gt, "$g_presentation_next_presentation", 0),
          (start_presentation, "$g_presentation_next_presentation"),
        (else_try),
          (presentation_set_duration, 0),
        (try_end),
        ]),
     ]),

  ("banner_flag_type_selection", 0, mesh_load_window,
   [
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (create_text_overlay, reg1, "str_choose_flag_type", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),

        (assign, ":pos_x", 435),
        (assign, ":pos_y", 450),
        (try_for_range, ":cur_flag", custom_banner_flag_types_begin, custom_banner_flag_types_end),
          (store_sub, ":slot_index", ":cur_flag", custom_banner_flag_types_begin),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_flag_type, ":slot_index"),
          (create_image_button_overlay_with_tableau_material, reg1, ":cur_flag", "tableau_custom_banner_default", "trp_player"),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_add, ":pos_x", 130),
          (overlay_set_position, reg1, pos1),
          (position_set_x, pos1, 100),
          (position_set_y, pos1, 100),
          (overlay_set_size, reg1, pos1),
          (troop_set_slot, "trp_temp_array_a", ":slot_index", reg1),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (assign, ":end_cond", custom_banner_flag_types_end),
        (val_sub, ":end_cond", custom_banner_flag_types_begin),
        (try_for_range, ":trp_slot_index", 0, ":end_cond"),
          (troop_slot_eq, "trp_temp_array_a", ":trp_slot_index", ":object"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_flag_type, ":trp_slot_index"),
          (assign, ":end_cond", 0),
        (try_end),
        (try_begin),
          (gt, "$g_presentation_next_presentation", 0),
          (start_presentation, "$g_presentation_next_presentation"),
        (else_try),
          (presentation_set_duration, 0),
        (try_end),
        ]),
     ]),

  ("banner_flag_map_type_selection", 0, mesh_load_window,
   [
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (create_text_overlay, reg1, "str_choose_map_flag_type", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (troop_get_slot, ":bg_type", "trp_player", slot_troop_custom_banner_bg_type),
        (val_add, ":bg_type", custom_banner_backgrounds_begin),
        (assign, ":pos_x", 250),
        (assign, ":pos_y", 150),
        (try_for_range, ":cur_flag", custom_banner_flag_map_types_begin, custom_banner_flag_map_types_end),
          (store_sub, ":slot_index", ":cur_flag", custom_banner_flag_map_types_begin),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_map_flag_type, ":slot_index"),
          (try_begin),
            (eq, ":cur_flag", "mesh_custom_map_banner_01"),
            (create_image_button_overlay_with_tableau_material, reg1, ":cur_flag", "tableau_custom_banner_square", "trp_player"),
          (else_try),
            (eq, ":cur_flag", "mesh_custom_map_banner_02"),
            (create_image_button_overlay_with_tableau_material, reg1, ":cur_flag", "tableau_custom_banner_short", "trp_player"),
          (else_try),
            (create_image_button_overlay_with_tableau_material, reg1, ":cur_flag", "tableau_custom_banner_tall", "trp_player"),
          (try_end),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_add, ":pos_x", 200),
          (overlay_set_position, reg1, pos1),
          (position_set_x, pos1, 100),
          (position_set_y, pos1, 100),
          (overlay_set_size, reg1, pos1),
          (troop_set_slot, "trp_temp_array_a", ":slot_index", reg1),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (assign, ":end_cond", custom_banner_flag_map_types_end),
        (val_sub, ":end_cond", custom_banner_flag_map_types_begin),
        (try_for_range, ":trp_slot_index", 0, ":end_cond"),
          (troop_slot_eq, "trp_temp_array_a", ":trp_slot_index", ":object"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_map_flag_type, ":trp_slot_index"),
          (assign, ":end_cond", 0),
        (try_end),
        (try_begin),
          (gt, "$g_presentation_next_presentation", 0),
          (start_presentation, "$g_presentation_next_presentation"),
        (else_try),
          (presentation_set_duration, 0),
        (try_end),
        ]),
     ]),

  ("color_selection", 0, mesh_load_window,
   [
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (create_text_overlay, reg1, "str_choose_color", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),

        (assign, ":pos_x", 125),
        (assign, ":pos_y", 450),
        (try_for_range, ":i_color", 0, 42),
          (call_script, "script_get_custom_banner_color_from_index", ":i_color"),
          (assign, ":cur_color", reg0),
          (create_image_button_overlay_with_tableau_material, reg1, "mesh_color_picker", "tableau_color_picker", ":cur_color"),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_add, ":pos_x", 50),
          (try_begin),
            (store_mod, ":mod_i_color", ":i_color", 7),
            (eq, ":mod_i_color", 6),
            (assign, ":pos_x", 125),
            (val_sub, ":pos_y", 50),
          (try_end),
          (overlay_set_position, reg1, pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 500),
          (overlay_set_size, reg1, pos1),
          (store_mul, ":trp_slot_index", ":i_color", 2),
          (store_add, ":trp_slot_color", ":trp_slot_index", 1),
          (troop_set_slot, "trp_temp_array_a", ":trp_slot_index", reg1),
          (troop_set_slot, "trp_temp_array_a", ":trp_slot_color", ":cur_color"),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (assign, ":end_cond", 64),
        (try_for_range, ":i_color", 0, ":end_cond"),
          (store_mul, ":trp_slot_index", ":i_color", 2),
          (troop_slot_eq, "trp_temp_array_a", ":trp_slot_index", ":object"),
          (store_add, ":trp_slot_color", ":trp_slot_index", 1),
          (troop_get_slot, ":output_color", "trp_temp_array_a", ":trp_slot_color"),
          (troop_set_slot, "trp_player", "$g_presentation_output_slot", ":output_color"),
          (assign, ":end_cond", 0),
        (try_end),
        (try_begin),
          (gt, "$g_presentation_next_presentation", 0),
          (start_presentation, "$g_presentation_next_presentation"),
        (else_try),
          (presentation_set_duration, 0),
        (try_end),
        ]),
     ]),

  ("marshall_selection", 0, mesh_load_window,
   [
     (ti_on_presentation_load,
      [
        (assign, "$g_presentation_obj_1", -1),
        (assign, "$g_presentation_obj_2", -1),
        (assign, "$g_presentation_obj_3", -1),
        (set_fixed_point_multiplier, 1000),
        (assign, "$g_presentation_next_presentation", -1),

        (store_add, ":total_renown", "$g_presentation_marshall_selection_max_renown_1", "$g_presentation_marshall_selection_max_renown_2"),
        (faction_get_slot, ":king", "$players_faction", slot_faction_leader),

        (str_store_troop_name, s1, "$g_presentation_marshall_selection_max_renown_1_troop"),
        (create_text_overlay, reg1, "@Candidate #1: {s1}", tf_center_justify),
        (position_set_x, pos1, 200),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (str_store_troop_name, s1, "$g_presentation_marshall_selection_max_renown_2_troop"),
        (create_text_overlay, reg1, "@Candidate #2: {s1}", tf_center_justify),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_troop_note_mesh", "$g_presentation_marshall_selection_max_renown_1_troop"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 500),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 100),
        (position_set_y, pos1, 300),
        (overlay_set_position, reg1, pos1),
        (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_troop_note_mesh", "$g_presentation_marshall_selection_max_renown_2_troop"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 500),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 700),
        (position_set_y, pos1, 300),
        (overlay_set_position, reg1, pos1),

        (assign, ":lord_index", "$g_presentation_input"),
        (val_add, "$g_presentation_input", 1),

        (try_begin),
          (lt, ":lord_index", 0),
          (str_store_troop_name, s1, "$g_presentation_marshall_selection_max_renown_1_troop"),
          (str_store_troop_name, s2, "$g_presentation_marshall_selection_max_renown_2_troop"),
          (str_store_troop_name, s3, ":king"),
          (str_store_faction_name, s4, "$players_faction"),
          (create_text_overlay, reg1, "@{s3} of {s4} wishes to select a new marshall and invites his commanders for a counsel. {s1} and {s2} are the likely candidates.", tf_center_justify),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 200),
          (overlay_set_position, reg1, pos1),

          (create_button_overlay, "$g_presentation_obj_1", "@Continue...", tf_center_justify),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 100),
          (overlay_set_position, "$g_presentation_obj_1", pos1),
          (assign, "$g_presentation_next_presentation", "prsnt_marshall_selection"),
        (else_try),
          (assign, ":cur_index", ":lord_index"),
          (try_for_range_backwards, ":loop_var", "trp_faction_heroes_including_player_begin", faction_heroes_end),
            (ge, ":cur_index", 0),
            (assign, ":cur_troop", ":loop_var"),
            (assign, ":continue", 0),
            (try_begin),
              (eq, ":loop_var", "trp_faction_heroes_including_player_begin"),
              (assign, ":cur_troop", "trp_player"),
              (try_begin),
                (eq, "$g_player_is_captive", 0),
                (assign, ":continue", 1),
              (try_end),
            (else_try),
              (store_troop_faction, ":cur_troop_faction", ":cur_troop"),
              (eq, "$players_faction", ":cur_troop_faction"),
              #(troop_slot_eq, ":cur_troop", slot_troop_is_prisoner, 0),
              (neg|troop_slot_ge, ":cur_troop", slot_troop_prisoner_of_party, 0),
              (troop_slot_ge, ":cur_troop", slot_troop_leaded_party, 1),
              (troop_slot_eq, ":cur_troop", slot_troop_occupation, slto_faction_hero),
              (neg|faction_slot_eq, ":cur_troop_faction", slot_faction_leader, ":cur_troop"),
              (assign, ":continue", 1),
            (try_end),
            (eq, ":continue", 1),

            (neq, "$g_presentation_marshall_selection_max_renown_1_troop", ":cur_troop"),
            (neq, "$g_presentation_marshall_selection_max_renown_2_troop", ":cur_troop"),

            (val_sub, ":cur_index", 1),
            (lt, ":cur_index", 0),

            (assign, "$g_presentation_next_presentation", "prsnt_marshall_selection"),

            (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_troop_note_mesh", ":cur_troop"),
            (position_set_x, pos1, 300),
            (position_set_y, pos1, 300),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, 440),
            (position_set_y, pos1, 400),
            (overlay_set_position, reg1, pos1),

            (try_begin),
              (eq, ":cur_troop", "trp_player"),
              (create_text_overlay, reg1, "@Who do you wish to support?", tf_center_justify),
              (position_set_x, pos1, 500),
              (position_set_y, pos1, 200),
              (overlay_set_position, reg1, pos1),
              (str_store_troop_name, s1, "$g_presentation_marshall_selection_max_renown_1_troop"),
              (create_button_overlay, "$g_presentation_obj_2", "@{s1}", tf_center_justify),
              (position_set_x, pos1, 300),
              (position_set_y, pos1, 100),
              (overlay_set_position, "$g_presentation_obj_2", pos1),
              (str_store_troop_name, s1, "$g_presentation_marshall_selection_max_renown_2_troop"),
              (create_button_overlay, "$g_presentation_obj_3", "@{s1}", tf_center_justify),
              (position_set_x, pos1, 700),
              (position_set_y, pos1, 100),
              (overlay_set_position, "$g_presentation_obj_3", pos1),
            (else_try),
              (str_store_troop_name, s1, ":cur_troop"),
              (store_random_in_range, ":random_renown", 0, ":total_renown"),
              (val_sub, ":random_renown", "$g_presentation_marshall_selection_max_renown_1"),
              (try_begin),
                (lt, ":random_renown", 0),
                (val_add, "$g_presentation_marshall_selection_1_vote", 1),
                (str_store_troop_name, s2, "$g_presentation_marshall_selection_max_renown_1_troop"),
              (else_try),
                (val_add, "$g_presentation_marshall_selection_2_vote", 1),
                (str_store_troop_name, s2, "$g_presentation_marshall_selection_max_renown_2_troop"),
              (try_end),
              (create_text_overlay, reg1, "@{s1} gives his support to {s2}.", tf_center_justify),
              (position_set_x, pos1, 500),
              (position_set_y, pos1, 200),
              (overlay_set_position, reg1, pos1),

              (create_button_overlay, "$g_presentation_obj_1", "@Continue...", tf_center_justify),
              (position_set_x, pos1, 500),
              (position_set_y, pos1, 100),
              (overlay_set_position, "$g_presentation_obj_1", pos1),
            (try_end),
          (try_end),
        (try_end),

        (assign, reg0, "$g_presentation_marshall_selection_1_vote"),
        (create_text_overlay, reg1, "@Number of Supporters: {reg0}", tf_center_justify),
        (position_set_x, pos1, 200),
        (position_set_y, pos1, 550),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, "$g_presentation_marshall_selection_2_vote"),
        (create_text_overlay, reg1, "@Number of Supporters: {reg0}", tf_center_justify),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 550),
        (overlay_set_position, reg1, pos1),

        (try_begin),
          (lt, "$g_presentation_next_presentation", 0),
          (try_begin),
            (gt, "$g_presentation_marshall_selection_2_vote", "$g_presentation_marshall_selection_1_vote"),
            (assign, ":local_temp", "$g_presentation_marshall_selection_max_renown_1_troop"),
            (assign, "$g_presentation_marshall_selection_max_renown_1_troop", "$g_presentation_marshall_selection_max_renown_2_troop"),
            (assign, "$g_presentation_marshall_selection_max_renown_2_troop", ":local_temp"),
          (try_end),
          #Winner is set to g_presentation_marshall_selection_max_renown_1_troop
          (str_store_troop_name, s1, "$g_presentation_marshall_selection_max_renown_1_troop"),
          (str_store_troop_name, s2, ":king"),
          (str_store_faction_name, s3, "$players_faction"),
          (create_text_overlay, reg1, "@{s2} has heard his commanders' counsel. He selects {s1} as the marshall of {s3}.", tf_center_justify),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 200),
          (overlay_set_position, reg1, pos1),
          (create_button_overlay, "$g_presentation_obj_1", "@Continue...", tf_center_justify),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 100),
          (overlay_set_position, "$g_presentation_obj_1", pos1),
        (try_end),

        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_2"),
          (val_add, "$g_presentation_marshall_selection_1_vote", 1),
          (call_script, "script_change_player_relation_with_troop", "$g_presentation_marshall_selection_max_renown_1_troop", 2),
          (call_script, "script_change_player_relation_with_troop", "$g_presentation_marshall_selection_max_renown_2_troop", -2),
        (else_try),
          (eq, ":object", "$g_presentation_obj_3"),
          (val_add, "$g_presentation_marshall_selection_2_vote", 1),
          (call_script, "script_change_player_relation_with_troop", "$g_presentation_marshall_selection_max_renown_1_troop", -2),
          (call_script, "script_change_player_relation_with_troop", "$g_presentation_marshall_selection_max_renown_2_troop", 2),
        (try_end),
        (try_begin),
          (this_or_next|eq, ":object", "$g_presentation_obj_1"),
          (this_or_next|eq, ":object", "$g_presentation_obj_2"),
          (eq, ":object", "$g_presentation_obj_3"),
          (try_begin),
            (ge, "$g_presentation_next_presentation", 0),
            (start_presentation, "$g_presentation_next_presentation"),
          (else_try),
            (try_begin),
              (neg|faction_slot_eq, "$players_faction", slot_faction_marshall, "$g_presentation_marshall_selection_max_renown_1_troop"),
              (call_script, "script_check_and_finish_active_army_quests_for_faction", "$players_faction"),
            (try_end),
            (faction_set_slot, "$players_faction", slot_faction_marshall, "$g_presentation_marshall_selection_max_renown_1_troop"),
            (try_begin),
              (eq, "$g_presentation_marshall_selection_max_renown_1_troop", "trp_player"),
              (call_script, "script_change_player_relation_with_troop", "$g_presentation_marshall_selection_max_renown_2_troop", -3),
            (try_end),
            (assign, "$g_recalculate_ais", 1),
            (assign, "$g_presentation_marshall_selection_ended", 1),
            (presentation_set_duration, 0),
          (try_end),
        (try_end),
        ]),
     ]),

  ("battle",0,0,[
      (ti_on_presentation_load,
       [(set_fixed_point_multiplier, 1000),
        (assign, "$g_formation_infantry_selected", 0),
        (assign, "$g_formation_archers_selected", 0),
        (assign, "$g_formation_cavalry_selected", 0),
        (assign, "$g_presentation_battle_active", 1),

        (str_clear, s7),

        (try_for_agents, ":agent_no"),
          (agent_set_slot, ":agent_no", slot_agent_map_overlay_id, 0),
        (try_end),

        (position_set_x, pos1, 0),
        (create_image_button_overlay, "$g_presentation_obj_1", "mesh_white_plane", "mesh_white_plane"),
        (position_set_y, pos1, 653),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        (create_image_button_overlay, "$g_presentation_obj_2", "mesh_white_plane", "mesh_white_plane"),
        (position_set_y, pos1, 613),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        (create_image_button_overlay, "$g_presentation_obj_3", "mesh_white_plane", "mesh_white_plane"),
        (position_set_y, pos1, 573),
        (overlay_set_position, "$g_presentation_obj_3", pos1),
        (position_set_x, pos1, 32500),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_presentation_obj_1", pos1),
        (overlay_set_size, "$g_presentation_obj_2", pos1),
        (overlay_set_size, "$g_presentation_obj_3", pos1),
        (overlay_set_alpha, "$g_presentation_obj_1", 0),
        (overlay_set_alpha, "$g_presentation_obj_2", 0),
        (overlay_set_alpha, "$g_presentation_obj_3", 0),
        (overlay_set_color, "$g_presentation_obj_1", 0xFFFF00),
        (overlay_set_color, "$g_presentation_obj_2", 0xFFFF00),
        (overlay_set_color, "$g_presentation_obj_3", 0xFFFF00),

        (position_set_x, pos1, 20),
        (create_check_box_overlay, "$g_presentation_obj_4", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_y, pos1, 663),
        (overlay_set_position, "$g_presentation_obj_4", pos1),
        (create_check_box_overlay, "$g_presentation_obj_5", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_y, pos1, 623),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
        (create_check_box_overlay, "$g_presentation_obj_6", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_y, pos1, 583),
        (overlay_set_position, "$g_presentation_obj_6", pos1),

        (get_player_agent_no, ":player_agent"),
        (agent_get_team, ":player_team", ":player_agent"),

        (position_set_x, pos1, 50),
        (create_text_overlay, "$g_presentation_obj_7", s7, 0),
        (position_set_y, pos1, 660),
        (overlay_set_position, "$g_presentation_obj_7", pos1),
        (create_text_overlay, "$g_presentation_obj_8", s7, 0),
        (position_set_y, pos1, 620),
        (overlay_set_position, "$g_presentation_obj_8", pos1),
        (create_text_overlay, "$g_presentation_obj_9", s7, 0),
        (position_set_y, pos1, 580),
        (overlay_set_position, "$g_presentation_obj_9", pos1),

        (position_set_y, pos1, 700),
        (create_text_overlay, reg1, "@Action", tf_center_justify),
        (position_set_x, pos1, 250),
        (overlay_set_position, reg1, pos1),
        (create_text_overlay, reg1, "@Mount", tf_center_justify),
        (position_set_x, pos1, 400),
        (overlay_set_position, reg1, pos1),
        (create_text_overlay, reg1, "@Attack Type", tf_center_justify),
        (position_set_x, pos1, 550),
        (overlay_set_position, reg1, pos1),

        (create_text_overlay, "$g_presentation_infantry_movement", s7, tf_center_justify),
        (create_text_overlay, "$g_presentation_infantry_riding", s7, tf_center_justify),
        (create_text_overlay, "$g_presentation_infantry_weapon_usage", s7, tf_center_justify),
        (create_text_overlay, "$g_presentation_archers_movement", s7, tf_center_justify),
        (create_text_overlay, "$g_presentation_archers_riding", s7, tf_center_justify),
        (create_text_overlay, "$g_presentation_archers_weapon_usage", s7, tf_center_justify),
        (create_text_overlay, "$g_presentation_cavalry_movement", s7, tf_center_justify),
        (create_text_overlay, "$g_presentation_cavalry_riding", s7, tf_center_justify),
        (create_text_overlay, "$g_presentation_cavalry_weapon_usage", s7, tf_center_justify),

        (call_script, "script_update_order_panel", ":player_team"),

        (create_button_overlay, "$g_presentation_obj_10", "@Hold This Position", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_11", "@Follow Me", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_12", "@Charge", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_13", "@Advance", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_14", "@Fall Back", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_15", "@Stand Closer", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_16", "@Spread Out", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_17", "@Stand Ground", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_18", "@Mount", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_19", "@Dismount", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_20", "@Use Any Weapon", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_21", "@Use Blunt Weapons", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_28", "@Hold Your Fire", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_29", "@Fire At Will", tf_center_justify),

        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, "$g_presentation_obj_10", pos1),
        (overlay_set_size, "$g_presentation_obj_11", pos1),
        (overlay_set_size, "$g_presentation_obj_12", pos1),
        (overlay_set_size, "$g_presentation_obj_13", pos1),
        (overlay_set_size, "$g_presentation_obj_14", pos1),
        (overlay_set_size, "$g_presentation_obj_15", pos1),
        (overlay_set_size, "$g_presentation_obj_16", pos1),
        (overlay_set_size, "$g_presentation_obj_17", pos1),
        (overlay_set_size, "$g_presentation_obj_18", pos1),
        (overlay_set_size, "$g_presentation_obj_19", pos1),
        (overlay_set_size, "$g_presentation_obj_20", pos1),
        (overlay_set_size, "$g_presentation_obj_21", pos1),
        (overlay_set_size, "$g_presentation_obj_28", pos1),
        (overlay_set_size, "$g_presentation_obj_29", pos1),

        (position_set_x, pos1, 250),
        (position_set_y, pos1, 540),
        (overlay_set_position, "$g_presentation_obj_10", pos1),
        (position_set_y, pos1, 520),
        (overlay_set_position, "$g_presentation_obj_11", pos1),
        (position_set_y, pos1, 500),
        (overlay_set_position, "$g_presentation_obj_12", pos1),
        (position_set_y, pos1, 480),
        (overlay_set_position, "$g_presentation_obj_13", pos1),
        (position_set_y, pos1, 460),
        (overlay_set_position, "$g_presentation_obj_14", pos1),
        (position_set_y, pos1, 440),
        (overlay_set_position, "$g_presentation_obj_15", pos1),
        (position_set_y, pos1, 420),
        (overlay_set_position, "$g_presentation_obj_16", pos1),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_17", pos1),

        (position_set_x, pos1, 400),
        (position_set_y, pos1, 540),
        (overlay_set_position, "$g_presentation_obj_18", pos1),
        (position_set_y, pos1, 520),
        (overlay_set_position, "$g_presentation_obj_19", pos1),

        (position_set_x, pos1, 550),
        (position_set_y, pos1, 540),
        (overlay_set_position, "$g_presentation_obj_20", pos1),
        (position_set_y, pos1, 520),
        (overlay_set_position, "$g_presentation_obj_21", pos1),
        (position_set_y, pos1, 500),
        (overlay_set_position, "$g_presentation_obj_28", pos1),
        (position_set_y, pos1, 480),
        (overlay_set_position, "$g_presentation_obj_29", pos1),

        (create_text_overlay, "$g_presentation_obj_22", "@Us", 0),
        (create_text_overlay, "$g_presentation_obj_24", "@Enemies", 0),
        (create_text_overlay, "$g_presentation_obj_25", "@Ready", tf_center_justify),
        (create_text_overlay, "$g_presentation_obj_26", "@Wounded", tf_center_justify),
        (create_text_overlay, "$g_presentation_obj_27", "@Dead", tf_center_justify),

        (create_text_overlay, "$g_battle_us_ready", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_us_wounded", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_us_dead", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_enemies_ready", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_enemies_wounded", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_enemies_dead", s7, tf_center_justify),

        (create_text_overlay, "$g_presentation_obj_23", "@Allies", 0),
        (create_text_overlay, "$g_battle_allies_ready", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_allies_wounded", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_allies_dead", s7, tf_center_justify),

        (assign, ":stat_position_x", 100),
        (assign, ":stat_position_y", 100),

        (val_add, ":stat_position_x", 150),
        (val_add, ":stat_position_y", 120),
        (position_set_x, pos1, ":stat_position_x"),
        (position_set_y, pos1, ":stat_position_y"),
        (overlay_set_position, "$g_presentation_obj_25", pos1),
        (val_add, ":stat_position_x", 150),
        (position_set_x, pos1, ":stat_position_x"),
        (overlay_set_position, "$g_presentation_obj_26", pos1),
        (val_add, ":stat_position_x", 150),
        (position_set_x, pos1, ":stat_position_x"),
        (overlay_set_position, "$g_presentation_obj_27", pos1),

        (val_add, ":stat_position_x", -450),
        (val_add, ":stat_position_y", -40),
        (position_set_x, pos1, ":stat_position_x"),
        (position_set_y, pos1, ":stat_position_y"),
        (overlay_set_position, "$g_presentation_obj_22", pos1),
        (val_add, ":stat_position_y", -40),
        (position_set_y, pos1, ":stat_position_y"),
        (overlay_set_position, "$g_presentation_obj_23", pos1),
        (val_add, ":stat_position_y", -40),
        (position_set_y, pos1, ":stat_position_y"),
        (overlay_set_position, "$g_presentation_obj_24", pos1),

        (get_scene_boundaries, pos2, pos3),
        (position_transform_position_to_local, pos4, pos2, pos3),
        (set_fixed_point_multiplier, 1000),
        (position_get_x, ":map_width", pos4),
        (position_get_y, ":map_height", pos4),
        (set_fixed_point_multiplier, 1000),
        (store_div, ":map_ratio", ":map_height", 100),
        (store_div, ":map_ratio", ":map_width", ":map_ratio"),
        (try_begin),
          (gt, ":map_ratio", 100),
          (assign, "$g_battle_map_width", 300),
          (store_div, "$g_battle_map_scale", ":map_width", "$g_battle_map_width"),
          (store_div, "$g_battle_map_height", ":map_height", "$g_battle_map_scale"),
        (else_try),
          (assign, "$g_battle_map_height", 300),
          (store_div, "$g_battle_map_scale", ":map_height", "$g_battle_map_height"),
          (store_div, "$g_battle_map_width", ":map_width", "$g_battle_map_scale"),
        (try_end),

        (create_image_button_overlay, "$g_battle_map_plane", "mesh_white_plane", "mesh_white_plane"),
        (overlay_set_color, "$g_battle_map_plane", 0),
        (store_add, ":map_bordered_width", "$g_battle_map_width", 20),
        (store_add, ":map_bordered_height", "$g_battle_map_height", 20),
        (store_mul, ":map_scale_x", ":map_bordered_width", 50),
        (store_mul, ":map_scale_y", ":map_bordered_height", 50),
        (position_set_x, pos1, ":map_scale_x"),
        (position_set_y, pos1, ":map_scale_y"),
        (overlay_set_size, "$g_battle_map_plane", pos1),
        (store_sub, ":map_pos_x", 990, ":map_bordered_width"),
        (store_sub, ":map_pos_y", 740, ":map_bordered_height"),
        (position_set_x, pos1, ":map_pos_x"),
        (position_set_y, pos1, ":map_pos_y"),
        (overlay_set_position, "$g_battle_map_plane", pos1),
        (overlay_set_alpha, "$g_battle_map_plane", 0x44),

        (create_mesh_overlay, "$g_battle_map_infantry_order_flag", "mesh_flag_infantry"),
        (create_mesh_overlay, "$g_battle_map_archers_order_flag", "mesh_flag_archers"),
        (create_mesh_overlay, "$g_battle_map_cavalry_order_flag", "mesh_flag_cavalry"),
        (overlay_set_alpha, "$g_battle_map_infantry_order_flag", 0),
        (overlay_set_alpha, "$g_battle_map_archers_order_flag", 0),
        (overlay_set_alpha, "$g_battle_map_cavalry_order_flag", 0),

        (call_script, "script_update_order_panel_checked_classes"),
        (call_script, "script_update_order_panel_statistics_and_map"),

        (presentation_set_duration, 999999),
        ]),
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        (get_player_agent_no, ":player_agent"),
        (agent_get_team, ":player_team", ":player_agent"),

        (assign, ":update_listeners", 0),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_4"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_infantry_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_1", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_1", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_5"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_archers_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_2", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_2", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_6"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_cavalry_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_3", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_3", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_1"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_infantry_selected", 1),
          (assign, "$g_formation_archers_selected", 0),
          (assign, "$g_formation_cavalry_selected", 0),
          (overlay_animate_to_alpha, "$g_presentation_obj_1", 250, 0x44),
          (overlay_animate_to_alpha, "$g_presentation_obj_2", 250, 0),
          (overlay_animate_to_alpha, "$g_presentation_obj_3", 250, 0),
          (overlay_set_val, "$g_presentation_obj_4", 1),
          (overlay_set_val, "$g_presentation_obj_5", 0),
          (overlay_set_val, "$g_presentation_obj_6", 0),
        (else_try),
          (eq, ":object", "$g_presentation_obj_2"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_infantry_selected", 0),
          (assign, "$g_formation_archers_selected", 1),
          (assign, "$g_formation_cavalry_selected", 0),
          (overlay_animate_to_alpha, "$g_presentation_obj_1", 250, 0),
          (overlay_animate_to_alpha, "$g_presentation_obj_2", 250, 0x44),
          (overlay_animate_to_alpha, "$g_presentation_obj_3", 250, 0),
          (overlay_set_val, "$g_presentation_obj_4", 0),
          (overlay_set_val, "$g_presentation_obj_5", 1),
          (overlay_set_val, "$g_presentation_obj_6", 0),
        (else_try),
          (eq, ":object", "$g_presentation_obj_3"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_infantry_selected", 0),
          (assign, "$g_formation_archers_selected", 0),
          (assign, "$g_formation_cavalry_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_1", 250, 0),
          (overlay_animate_to_alpha, "$g_presentation_obj_2", 250, 0),
          (overlay_animate_to_alpha, "$g_presentation_obj_3", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_4", 0),
          (overlay_set_val, "$g_presentation_obj_5", 0),
          (overlay_set_val, "$g_presentation_obj_6", 1),
        (else_try),
          (eq, ":object", "$g_presentation_obj_10"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_hold),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_11"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_follow),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_12"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_charge),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_13"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_advance),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_14"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_fall_back),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_15"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_stand_closer),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_16"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_spread_out),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_17"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_stand_ground),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_18"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_mount),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_19"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_dismount),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_20"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_use_any_weapon),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_21"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_use_blunt_weapons),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_28"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_hold_fire),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_29"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_fire_at_will),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_battle_map_plane"),
          (get_scene_boundaries, pos2, pos3),
          (mouse_get_position, pos1),
          (set_fixed_point_multiplier, 1000),
          (position_get_x, ":mouse_x", pos1),
          (position_get_y, ":mouse_y", pos1),
          (store_sub, ":map_x", 980, "$g_battle_map_width"),
          (store_sub, ":map_y", 730, "$g_battle_map_height"),
          (val_sub, ":mouse_x", ":map_x"),
          (val_sub, ":mouse_y", ":map_y"),
          (val_clamp, ":mouse_x", 0, "$g_battle_map_width"),
          (val_clamp, ":mouse_y", 0, "$g_battle_map_height"),
          (val_mul, ":mouse_x", "$g_battle_map_scale"),
          (val_mul, ":mouse_y", "$g_battle_map_scale"),
          (set_fixed_point_multiplier, 1000),
          (position_set_x, pos1, ":mouse_x"),
          (position_set_y, pos1, ":mouse_y"),
          (position_transform_position_to_parent, pos3, pos2, pos1),
          (try_begin),
            (eq, "$g_formation_infantry_selected", 1),
            (team_give_order, ":player_team", grc_infantry, mordr_hold),
            (team_set_order_position, ":player_team", grc_infantry, pos3),
          (try_end),
          (try_begin),
            (eq, "$g_formation_archers_selected", 1),
            (team_give_order, ":player_team", grc_archers, mordr_hold),
            (team_set_order_position, ":player_team", grc_archers, pos3),
          (try_end),
          (try_begin),
            (eq, "$g_formation_cavalry_selected", 1),
            (team_give_order, ":player_team", grc_cavalry, mordr_hold),
            (team_set_order_position, ":player_team", grc_cavalry, pos3),
          (try_end),
          (call_script, "script_update_order_flags_on_map"),
          (call_script, "script_update_order_panel", ":player_team"),
        (try_end),
        (try_begin),
          (eq, ":update_listeners", 1),
          (try_begin),
            (eq, "$g_formation_infantry_selected", 1),
            (eq, "$g_formation_archers_selected", 1),
            (eq, "$g_formation_cavalry_selected", 1),
            (team_set_order_listener, ":player_team", grc_everyone),
          (else_try),
            (eq, "$g_formation_infantry_selected", 1),
            (team_set_order_listener, ":player_team", grc_infantry),
          (else_try),
            (eq, "$g_formation_archers_selected", 1),
            (team_set_order_listener, ":player_team", grc_archers),
          (else_try),
            (eq, "$g_formation_cavalry_selected", 1),
            (team_set_order_listener, ":player_team", grc_cavalry),
          (try_end),
        (try_end),
        ]),
      (ti_on_presentation_mouse_enter_leave,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":enter_leave"),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_infantry_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_infantry_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_infantry_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_7", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_infantry_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_infantry_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_infantry_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_7", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_2"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_archers_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_archers_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_archers_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_8", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_archers_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_archers_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_archers_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_3"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_cavalry_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_cavalry_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_cavalry_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_9", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_cavalry_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_cavalry_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_cavalry_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_9", 250, 0),
          (try_end),
        (try_end),
        ]),
      (ti_on_presentation_run,
       [(store_trigger_param_1, ":cur_time"),
        (try_begin),
          (this_or_next|game_key_clicked, gk_infantry_hear),
          (this_or_next|game_key_clicked, gk_archers_hear),
          (this_or_next|game_key_clicked, gk_cavalry_hear),
          (this_or_next|game_key_clicked, gk_everyone_hear),
          (game_key_clicked, gk_reverse_order_group),
          (call_script, "script_update_order_panel_checked_classes"),
        (try_end),
        (try_begin),
          (this_or_next|game_key_clicked, gk_order_halt),
          (this_or_next|game_key_clicked, gk_order_follow),
          (this_or_next|game_key_clicked, gk_order_charge),
          (this_or_next|game_key_clicked, gk_order_dismount),
          (this_or_next|game_key_clicked, gk_order_advance),
          (this_or_next|game_key_clicked, gk_order_fall_back),
          (this_or_next|game_key_clicked, gk_order_stand_closer),
          (this_or_next|game_key_clicked, gk_order_spread_out),
          (this_or_next|game_key_clicked, gk_order_hold_fire_toggle),
          (game_key_clicked, gk_order_blunt_weapons_toggle),
          (get_player_agent_no, ":player_agent"),
          (agent_get_team, ":player_team", ":player_agent"),
          (call_script, "script_update_order_panel", ":player_team"),
        (try_end),
        (try_begin),
          (gt, ":cur_time", 200),
          (game_key_clicked, gk_view_orders),
          (assign, "$g_presentation_battle_active", 0),
          (try_for_agents, ":cur_agent"),
            (agent_set_slot, ":cur_agent", slot_agent_map_overlay_id, 0),
          (try_end),
          #swy-- hackfix to show sidelog messages again in wb-- i'm not going to spend more time in this jumblefuck, i'm scared.
          (set_show_messages, 1),
          (presentation_set_duration, 0),
        (try_end),
        ]),
      ]),


    ("sliders",0,0,[
      (ti_on_presentation_load,
       [(set_fixed_point_multiplier, 1000),
        (create_slider_overlay, "$g_presentation_obj_1", 0, 100),
        (create_slider_overlay, "$g_presentation_obj_2", 0, 100),
        (create_slider_overlay, "$g_presentation_obj_3", 0, 100),
        (create_slider_overlay, "$g_presentation_obj_4", 0, 100),
        (assign, reg1, 25),
        (str_store_string, s1, "str_reg1"),
        (create_text_overlay, "$g_presentation_obj_5", s1),
        (create_text_overlay, "$g_presentation_obj_6", s1),
        (create_text_overlay, "$g_presentation_obj_7", s1),
        (create_text_overlay, "$g_presentation_obj_8", s1),
        (assign, "$g_presentation_obj_1_val", 25),
        (overlay_set_val, "$g_presentation_obj_1", 25),
        (assign, "$g_presentation_obj_2_val", 25),
        (overlay_set_val, "$g_presentation_obj_2", 25),
        (assign, "$g_presentation_obj_3_val", 25),
        (overlay_set_val, "$g_presentation_obj_3", 25),
        (assign, "$g_presentation_obj_4_val", 25),
        (overlay_set_val, "$g_presentation_obj_4", 25),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 200),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        (position_set_y, pos1, 300),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_3", pos1),
        (position_set_y, pos1, 500),
        (overlay_set_position, "$g_presentation_obj_4", pos1),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 200),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
        (position_set_y, pos1, 300),
        (overlay_set_position, "$g_presentation_obj_6", pos1),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_7", pos1),
        (position_set_y, pos1, 500),
        (overlay_set_position, "$g_presentation_obj_8", pos1),
        (position_set_x, pos1, 500),
        (overlay_set_size, "$g_presentation_obj_3", pos1),
        ]),
      (ti_on_presentation_run,
       [
        ]),
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        (assign, ":val_changed", 0),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (try_begin),
            (neq, "$g_presentation_obj_1_val", ":value"),
            (assign, "$g_presentation_obj_1_val", ":value"),
            (assign, ":val_changed", 1),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_2"),
          (try_begin),
            (neq, "$g_presentation_obj_2_val", ":value"),
            (assign, "$g_presentation_obj_2_val", ":value"),
            (assign, ":val_changed", 1),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_3"),
          (try_begin),
            (neq, "$g_presentation_obj_3_val", ":value"),
            (assign, "$g_presentation_obj_3_val", ":value"),
            (assign, ":val_changed", 1),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_4"),
          (try_begin),
            (neq, "$g_presentation_obj_4_val", ":value"),
            (assign, "$g_presentation_obj_4_val", ":value"),
            (assign, ":val_changed", 1),
          (try_end),
        (try_end),
        (try_begin),
          (eq, ":val_changed", 1),
          (assign, ":sum_values", 0),
          (val_add, ":sum_values", "$g_presentation_obj_1_val"),
          (val_add, ":sum_values", "$g_presentation_obj_2_val"),
          (val_add, ":sum_values", "$g_presentation_obj_3_val"),
          (val_add, ":sum_values", "$g_presentation_obj_4_val"),
          (store_sub, ":difference", 100, ":sum_values"),
          (assign, ":obj_1_new_val", "$g_presentation_obj_1_val"),
          (assign, ":obj_2_new_val", "$g_presentation_obj_2_val"),
          (assign, ":obj_3_new_val", "$g_presentation_obj_3_val"),
          (assign, ":obj_4_new_val", "$g_presentation_obj_4_val"),
          (assign, ":adder", 1),
          (assign, ":between_1", 0),
          (assign, ":between_2", 100),
          (try_begin),
            (lt, ":difference", 0),
            (val_mul, ":difference", -1),
            (assign, ":adder", -1),
            (assign, ":between_1", 1),
            (assign, ":between_2", 101),
          (try_end),
          (store_sub, ":sum_non_changed_values", ":sum_values", ":value"),
          (val_add, ":sum_non_changed_values", 30),
          (try_for_range, ":unused", 0, ":difference"),
            (store_random_in_range, ":random_no", 0, ":sum_non_changed_values"),
            (try_begin),
              (neq, ":object", "$g_presentation_obj_1"),
              (val_sub, ":random_no", "$g_presentation_obj_1_val"),
              (val_sub, ":random_no", 10),
              (lt, ":random_no", 0),
              (is_between, ":obj_1_new_val", ":between_1", ":between_2"),
              (val_add, ":obj_1_new_val", ":adder"),
            (else_try),
              (neq, ":object", "$g_presentation_obj_2"),
              (val_sub, ":random_no", "$g_presentation_obj_2_val"),
              (val_sub, ":random_no", 10),
              (lt, ":random_no", 0),
              (is_between, ":obj_2_new_val", ":between_1", ":between_2"),
              (val_add, ":obj_2_new_val", ":adder"),
            (else_try),
              (neq, ":object", "$g_presentation_obj_3"),
              (val_sub, ":random_no", "$g_presentation_obj_3_val"),
              (val_sub, ":random_no", 10),
              (lt, ":random_no", 0),
              (is_between, ":obj_3_new_val", ":between_1", ":between_2"),
              (val_add, ":obj_3_new_val", ":adder"),
            (else_try),
              (is_between, ":obj_4_new_val", ":between_1", ":between_2"),
              (val_add, ":obj_4_new_val", ":adder"),
            (else_try),
              (val_add, ":difference", 1),
            (try_end),
          (try_end),
          (assign, "$g_presentation_obj_1_val", ":obj_1_new_val"),
          (assign, "$g_presentation_obj_2_val", ":obj_2_new_val"),
          (assign, "$g_presentation_obj_3_val", ":obj_3_new_val"),
          (assign, "$g_presentation_obj_4_val", ":obj_4_new_val"),
        (try_end),
        (overlay_set_val, "$g_presentation_obj_1", "$g_presentation_obj_1_val"),
        (overlay_set_val, "$g_presentation_obj_2", "$g_presentation_obj_2_val"),
        (overlay_set_val, "$g_presentation_obj_3", "$g_presentation_obj_3_val"),
        (overlay_set_val, "$g_presentation_obj_4", "$g_presentation_obj_4_val"),
        (assign, reg1, "$g_presentation_obj_1_val"),
        (str_store_string, s1, "str_reg1"),
        (overlay_set_text, "$g_presentation_obj_5", s1),
        (assign, reg1, "$g_presentation_obj_2_val"),
        (str_store_string, s1, "str_reg1"),
        (overlay_set_text, "$g_presentation_obj_6", s1),
        (assign, reg1, "$g_presentation_obj_3_val"),
        (str_store_string, s1, "str_reg1"),
        (overlay_set_text, "$g_presentation_obj_7", s1),
        (assign, reg1, "$g_presentation_obj_4_val"),
        (str_store_string, s1, "str_reg1"),
        (overlay_set_text, "$g_presentation_obj_8", s1),
        ]),
      ]),

  ("arena_training", prsntf_read_only, 0, [
      (ti_on_presentation_load,
       [(presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        (get_player_agent_no, ":player_agent"),
        (agent_get_kill_count, reg1, ":player_agent", 1),
        (str_store_string, s1, "@Number of men knocked down: {reg1}"),
        (create_text_overlay, "$g_presentation_obj_1", s1),
        (overlay_set_color, "$g_presentation_obj_1", 0xFFFFFF),
        (position_set_x, pos1, 10),
        (position_set_y, pos1, 700),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        (assign, reg1, 0),
        (str_store_string, s1, "@Number of men left: {reg1}"),
        (create_text_overlay, "$g_presentation_obj_2", s1),
        (overlay_set_color, "$g_presentation_obj_2", 0xFFFFFF),
        (position_set_x, pos1, 10),
        (position_set_y, pos1, 670),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        ]),
      (ti_on_presentation_run,
       [(get_player_agent_no, ":player_agent"),
        (agent_get_kill_count, reg1, ":player_agent", 1),
        (str_store_string, s1, "@Opponents Beaten: {reg1}"),
        (overlay_set_text, "$g_presentation_obj_1", s1),
        (assign, ":num_left", "$g_arena_training_max_opponents"),
        (try_for_agents, ":agent_no"),
          (agent_is_human, ":agent_no"),
          (neg|agent_is_alive, ":agent_no"),
          (neq, ":agent_no", ":player_agent"),
          (val_sub, ":num_left", 1),
        (try_end),
        (assign, reg1, ":num_left"),
        (str_store_string, s1, "@Opponents Remaining: {reg1}"),
        (overlay_set_text, "$g_presentation_obj_2", s1),
        ]),
      ]),

  ("retirement", 0, mesh_load_window,
   [
     (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        (create_button_overlay, "$g_presentation_obj_1", "@Remain in retirement.", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_2", "@Go back to the adventuring.", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 80),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        (position_set_y, pos1, 40),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        (assign, ":total_effect", 0),
        #wealth
        (store_troop_gold, ":wealth", "trp_player"),
        (store_div, ":wealth_effect", ":wealth", 200),
        (val_add, ":total_effect", ":wealth_effect"),
        #ruled centers and friendly/enemy centers
        (assign, ":num_towns", 0),
        (assign, ":num_castles", 0),
        (assign, ":num_villages", 0),
        (assign, ":num_friendly_towns", 0),
        (assign, ":num_friendly_villages", 0),
        (assign, ":num_enemy_towns", 0),
        (assign, ":num_enemy_villages", 0),
        (try_for_range, ":center_no", centers_begin, centers_end),
          (party_get_slot, ":type", ":center_no", slot_party_type),
          (try_begin),
            (party_slot_eq, ":center_no", slot_mainplanet_lord, "trp_player"),
            (try_begin),
              (eq, ":type", spt_mainplanet),
              (val_add, ":num_towns", 1),
            (else_try),
              (eq, ":type", spt_castle),
              (val_add, ":num_castles", 1),
            (else_try),
              (val_add, ":num_villages", 1),
            (try_end),
          (try_end),
          (party_get_slot, ":relation", ":center_no", slot_center_player_relation),
          (try_begin),
            (ge, ":relation", 40),
            (try_begin),
              (eq, ":type", spt_mainplanet),
              (val_add, ":num_friendly_towns", 1),
            (else_try),
              (eq, ":type", spt_minorplanet),
              (val_add, ":num_friendly_villages", 1),
            (try_end),
          (else_try),
            (le, ":relation", -40),
            (try_begin),
              (eq, ":type", spt_mainplanet),
              (val_add, ":num_enemy_towns", 1),
            (else_try),
              (eq, ":type", spt_minorplanet),
              (val_add, ":num_enemy_villages", 1),
            (try_end),
          (try_end),
        (try_end),
        (store_mul, ":num_mainplanets_effect", ":num_towns", 100),
        (store_mul, ":num_castles_effect", ":num_castles", 50),
        (store_mul, ":num_villages_effect", ":num_villages", 20),
        (store_add, ":num_centers", ":num_towns", ":num_castles"),
        (val_add, ":num_centers", ":num_villages"),
        (store_add, ":ruled_centers_effect", ":num_mainplanets_effect", ":num_castles_effect"),
        (val_add, ":ruled_centers_effect", ":num_villages_effect"),
        (val_add, ":total_effect", ":ruled_centers_effect"),
        (store_mul, ":num_friendly_mainplanets_effect", ":num_friendly_towns", 20),
        (store_mul, ":num_friendly_villages_effect", ":num_friendly_villages", 4),
        (store_add, ":num_friendly_centers", ":num_friendly_towns", ":num_friendly_villages"),
        (store_add, ":friendly_centers_effect", ":num_friendly_mainplanets_effect", ":num_friendly_villages_effect"),
        (val_add, ":total_effect", ":friendly_centers_effect"),
        (store_mul, ":num_enemy_mainplanets_effect", ":num_enemy_towns", -40),
        (store_mul, ":num_enemy_villages_effect", ":num_enemy_villages", -8),
        (store_add, ":num_enemy_centers", ":num_enemy_towns", ":num_enemy_villages"),
        (store_add, ":enemy_centers_effect", ":num_enemy_mainplanets_effect", ":num_enemy_villages_effect"),
        (val_add, ":total_effect", ":enemy_centers_effect"),
        #inventory
        (assign, ":total_item_value", 0),
        (troop_get_inventory_capacity, ":capacity", "trp_player"),
        (try_for_range, ":i_inv", 0, ":capacity"),
          (troop_get_inventory_slot, ":item", "trp_player", ":i_inv"),
          (ge, ":item", 0),
          (store_item_value, ":item_value", ":item"),
          (val_add, ":total_item_value", ":item_value"),
        (try_end),
        (store_div, ":total_item_value_effect", ":total_item_value", 200),
        (val_add, ":total_effect", ":total_item_value_effect"),
        #renown
        (troop_get_slot, ":renown", "trp_player", slot_troop_renown),
        (store_div, ":renown_effect", ":renown", 1),
        (val_add, ":total_effect", ":renown_effect"),
        #enemies and friends
        (assign, ":num_enemies", 0),
        (assign, ":num_friends", 0),
        (try_for_range, ":troop_no", heroes_begin, heroes_end),
          (this_or_next|troop_slot_eq, ":troop_no", slot_troop_occupation, slto_faction_hero),
          (troop_slot_eq, ":troop_no", slot_troop_occupation, slto_faction_lady),
          (call_script, "script_troop_get_player_relation", ":troop_no"),
          (assign, ":relation", reg0),
          #(troop_get_slot, ":relation", ":troop_no", slot_troop_player_relation),
          (try_begin),
            (ge, ":relation", 40),
            (val_add, ":num_friends", 1),
          (else_try),
            (le, ":relation", -40),
            (val_add, ":num_enemies", 1),
          (try_end),
        (try_end),
        (store_mul, ":num_friends_effect", ":num_friends", 10),
        (val_add, ":total_effect", ":num_friends_effect"),
        (store_mul, ":num_enemies_effect", ":num_enemies", -10),
        (val_add, ":total_effect", ":num_enemies_effect"),
        #current day
        (store_current_day, ":cur_day"),
        (store_div, ":cur_day_effect", ":cur_day", -1),
        (val_add, ":total_effect", ":cur_day_effect"),
        #g_total_victories
        (store_mul, ":total_victories_effect", "$g_total_victories", 2),
        (val_add, ":total_effect", ":total_victories_effect"),
        #g_total_defeats
        (store_mul, ":total_defeats_effect", "$g_total_defeats", -3),
        (val_add, ":total_effect", ":total_defeats_effect"),
        #g_total_quests_completed
        (store_mul, ":total_quests_completed_effect", "$g_total_quests_completed", 4),
        (val_add, ":total_effect", ":total_quests_completed_effect"),
        #xp
        (troop_get_xp, ":xp", "trp_player"),
        (store_div, ":xp_effect", ":xp", 5000),
        (val_add, ":total_effect", ":xp_effect"),
        #companions joined / departed
        (assign, ":num_companions_joined", 0),
        (assign, ":num_companions_departed", 0),
        (try_for_range, ":troop_no", companions_begin, companions_end),
          (try_begin),
            (troop_slot_eq, ":troop_no", slot_troop_occupation, slto_player_companion),
            (val_add, ":num_companions_joined", 1),
          (else_try),
            (troop_slot_ge, ":troop_no", slot_troop_playerparty_history, 1),
            (val_add, ":num_companions_departed", 1),
          (try_end),
        (try_end),
        (store_div, ":num_companions_joined_effect", ":num_companions_joined", 2),
        (val_add, ":total_effect", ":num_companions_joined_effect"),
        (store_div, ":num_companions_departed_effect", ":num_companions_departed", -4),
        (val_add, ":total_effect", ":num_companions_departed_effect"),
        #difficulty
        (get_average_game_difficulty, ":difficulty"),
        (assign, ":difficulty_effect", ":total_effect"),
        (val_mul, ":total_effect", ":difficulty"),
        (val_div, ":total_effect", 75),
        (val_mul, ":total_effect", ":difficulty"),
        (val_div, ":total_effect", 75),
        (store_sub, ":difficulty_effect", ":total_effect", ":difficulty_effect"),

        (assign, reg5, ":cur_day"),
        (store_character_level, reg4, "trp_player"),
        (create_text_overlay, reg1, "@You have retired at level {reg4} after {reg5} days of adventuring.", tf_center_justify),
        (position_set_x, pos1, 700),
        (position_set_y, pos1, 700),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 950),
        (position_set_y, pos1, 950),
        (overlay_set_size, reg1, pos1),
##        (overlay_set_color, reg1, 0),
        (create_text_overlay, reg2, "@Effect on Score", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg2, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 670),
        (overlay_set_position, reg2, pos1),
        (assign, reg0, ":num_centers"),
        (create_text_overlay, reg1, "@Settlements owned by you: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 650),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":ruled_centers_effect"),
        (create_text_overlay, reg1, "@{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 650),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00FF00),
        (try_end),

        (assign, reg0, ":num_friendly_centers"),
        (create_text_overlay, reg1, "@Friendly Settlements: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 630),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":friendly_centers_effect"),
        (create_text_overlay, reg1, "@{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 630),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00FF00),
        (try_end),

        (assign, reg0, ":num_enemy_centers"),
        (create_text_overlay, reg1, "@Hostile Settlements: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 610),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":enemy_centers_effect"),
        (create_text_overlay, reg1, "@{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 610),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (lt, reg0, 0),
          (overlay_set_color, reg1, 0xFF0000),
        (try_end),

        (assign, reg0, ":num_friends"),
        (create_text_overlay, reg1, "@Friendly Lords: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 590),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":num_friends_effect"),
        (create_text_overlay, reg1, "@{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 590),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00FF00),
        (try_end),

        (assign, reg0, ":num_enemies"),
        (create_text_overlay, reg1, "@Enemy Lords: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 570),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":num_enemies_effect"),
        (create_text_overlay, reg1, "@{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 570),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (lt, reg0, 0),
          (overlay_set_color, reg1, 0xFF0000),
        (try_end),

        (assign, reg0, "$g_total_victories"),
        (create_text_overlay, reg1, "@Victories: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 550),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":total_victories_effect"),
        (create_text_overlay, reg1, "@{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 550),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00FF00),
        (try_end),

        (assign, reg0, "$g_total_defeats"),
        (create_text_overlay, reg1, "@Defeats: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 530),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":total_defeats_effect"),
        (create_text_overlay, reg1, "@{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 530),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (lt, reg0, 0),
          (overlay_set_color, reg1, 0xFF0000),
        (try_end),

        (assign, reg0, "$g_total_quests_completed"),
        (create_text_overlay, reg1, "@Quests Completed: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 510),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":total_quests_completed_effect"),
        (create_text_overlay, reg1, "@{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 510),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00FF00),
        (try_end),

        (assign, reg0, ":num_companions_joined"),
        (create_text_overlay, reg1, "@Companions Found: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 490),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":num_companions_joined_effect"),
        (create_text_overlay, reg1, "@{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 490),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00FF00),
        (try_end),

        (assign, reg0, ":num_companions_departed"),
        (create_text_overlay, reg1, "@Companions Lost/Departed: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 470),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":num_companions_departed_effect"),
        (create_text_overlay, reg1, "@{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 470),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (lt, reg0, 0),
          (overlay_set_color, reg1, 0xFF0000),
        (try_end),

        (assign, reg0, ":wealth"),
        #SW - modified denars to credits
        #(create_text_overlay, reg1, "@Wealth: {reg0} denars", 0),
        (create_text_overlay, reg1, "@Wealth: {reg0} credits", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 450),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":wealth_effect"),
        (create_text_overlay, reg1, "@{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 450),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00FF00),
        (try_end),

        (assign, reg0, ":total_item_value"),
        #SW - modified denars to credits
        #(create_text_overlay, reg1, "@Inventory: {reg0} denars", 0),
        (create_text_overlay, reg1, "@Inventory: {reg0} credits", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 430),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":total_item_value_effect"),
        (create_text_overlay, reg1, "@{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 430),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00FF00),
        (try_end),

        (assign, reg0, ":renown"),
        (create_text_overlay, reg1, "@Renown: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 410),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":renown_effect"),
        (create_text_overlay, reg1, "@{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 410),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00FF00),
        (try_end),

        (assign, reg0, ":xp"),
        (create_text_overlay, reg1, "@Experience: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 390),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":xp_effect"),
        (create_text_overlay, reg1, "@{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 390),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00FF00),
        (try_end),

        (assign, reg0, ":cur_day"),
        (create_text_overlay, reg1, "@Days Passed: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 370),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":cur_day_effect"),
        (create_text_overlay, reg1, "@{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 370),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (lt, reg0, 0),
          (overlay_set_color, reg1, 0xFF0000),
        (try_end),

        (assign, reg0, ":difficulty"),
        (create_text_overlay, reg1, "@Difficulty: {reg0}%", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 350),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":difficulty_effect"),
        (assign, reg3, reg0),
        (val_max, reg3, 0),
        (create_text_overlay, reg1, "@{reg3?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 350),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00FF00),
        (else_try),
          (lt, reg0, 0),
          (overlay_set_color, reg1, 0xFF0000),
        (try_end),

        (assign, reg0, ":total_effect"),
        (create_text_overlay, reg1, "@TOTAL SCORE: {reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 320),
        (overlay_set_position, reg1, pos1),

        (assign, ":total_villages", 0),
        (assign, ":total_castles", 0),
        (assign, ":total_towns", 0),
        (assign, ":total_minorplanet_rels", 0),
        (assign, ":total_spacestation_rels", 0),
        (assign, ":total_town_rels", 0),
        (try_for_range, ":cur_center_no", centers_begin, centers_end),
          (try_begin),
            (party_slot_eq, ":cur_center_no", slot_mainplanet_lord, "trp_player"),
            (try_begin),
              (party_slot_eq, ":cur_center_no", slot_party_type, spt_mainplanet),
              (val_add, ":total_towns", 1),
            (else_try),
              (party_slot_eq, ":cur_center_no", slot_party_type, spt_castle),
              (val_add, ":total_castles", 1),
            (else_try),
              (val_add, ":total_villages", 1),
            (try_end),
          (else_try),
            (party_get_slot, ":center_relation", ":cur_center_no", slot_center_player_relation),
            (gt, ":center_relation", 0),
            (try_begin),
              (party_slot_eq, ":cur_center_no", slot_party_type, spt_mainplanet),
              (val_add, ":total_town_rels", ":center_relation"),
            (else_try),
              (party_slot_eq, ":cur_center_no", slot_party_type, spt_castle),
              (val_add, ":total_spacestation_rels", ":center_relation"),
            (else_try),
              (val_add, ":total_minorplanet_rels", ":center_relation"),
            (try_end),
          (try_end),
        (try_end),
        (try_begin),
          (gt, ":total_towns", 0),
          (store_random_in_range, ":random_town", 0, ":total_towns"),
          (try_for_range, ":cur_center_no", mainplanets_begin, mainplanets_end),
            (party_slot_eq, ":cur_center_no", slot_mainplanet_lord, "trp_player"),
            (val_sub, ":random_town", 1),
            (lt, ":random_town", 0),
            (str_store_party_name, s9, ":cur_center_no"),
          (try_end),
        (else_try),
          (gt, ":total_town_rels", 0),
          (store_random_in_range, ":random_town_rel", 0, ":total_town_rels"),
          (try_for_range, ":cur_center_no", mainplanets_begin, mainplanets_end),
            (party_get_slot, ":center_relation", ":cur_center_no", slot_center_player_relation),
            (gt, ":center_relation", 0),
            (val_sub, ":random_town_rel", ":center_relation"),
            (lt, ":random_town_rel", 0),
            (str_store_party_name, s9, ":cur_center_no"),
          (try_end),
        (else_try),
          (store_random_in_range, ":random_town", mainplanets_begin, mainplanets_end),
          (str_store_party_name, s9, ":random_town"),
        (try_end),
        (try_begin),
          (gt, ":total_castles", 0),
          (store_random_in_range, ":random_castle", 0, ":total_castles"),
          (try_for_range, ":cur_center_no", castles_begin, castles_end),
            (party_slot_eq, ":cur_center_no", slot_mainplanet_lord, "trp_player"),
            (val_sub, ":random_castle", 1),
            (lt, ":random_castle", 0),
            (str_store_party_name, s8, ":cur_center_no"),
          (try_end),
        (else_try),
          (gt, ":total_spacestation_rels", 0),
          (store_random_in_range, ":random_spacestation_rel", 0, ":total_spacestation_rels"),
          (try_for_range, ":cur_center_no", castles_begin, castles_end),
            (party_get_slot, ":center_relation", ":cur_center_no", slot_center_player_relation),
            (gt, ":center_relation", 0),
            (val_sub, ":random_spacestation_rel", ":center_relation"),
            (lt, ":random_spacestation_rel", 0),
            (str_store_party_name, s8, ":cur_center_no"),
          (try_end),
        (else_try),
          (store_random_in_range, ":random_castle", castles_begin, castles_end),
          (str_store_party_name, s8, ":random_castle"),
        (try_end),
        (try_begin),
          (gt, ":total_villages", 0),
          (store_random_in_range, ":random_village", 0, ":total_villages"),
          (try_for_range, ":cur_center_no", minorplanet_begin, minorplanet_end),
            (party_slot_eq, ":cur_center_no", slot_mainplanet_lord, "trp_player"),
            (val_sub, ":random_village", 1),
            (lt, ":random_village", 0),
            (str_store_party_name, s7, ":cur_center_no"),
          (try_end),
        (else_try),
          (gt, ":total_minorplanet_rels", 0),
          (store_random_in_range, ":random_minorplanet_rel", 0, ":total_minorplanet_rels"),
          (try_for_range, ":cur_center_no", minorplanet_begin, minorplanet_end),
            (party_get_slot, ":center_relation", ":cur_center_no", slot_center_player_relation),
            (gt, ":center_relation", 0),
            (val_sub, ":random_minorplanet_rel", ":center_relation"),
            (lt, ":random_minorplanet_rel", 0),
            (str_store_party_name, s7, ":cur_center_no"),
          (try_end),
        (else_try),
          (store_random_in_range, ":random_village", minorplanet_begin, minorplanet_end),
          (str_store_party_name, s7, ":random_village"),
        (try_end),

        (try_begin),
          (lt, ":total_effect", 100),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 0),
          (str_store_string, s0, "str_retirement_text_1"),
        (else_try),
          (lt, ":total_effect", 200),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 1),
          (str_store_string, s0, "str_retirement_text_2"),
        (else_try),
          (lt, ":total_effect", 400),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 2),
          (str_store_string, s0, "str_retirement_text_3"),
        (else_try),
          (lt, ":total_effect", 700),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 3),
          (str_store_string, s0, "str_retirement_text_4"),
        (else_try),
          (lt, ":total_effect", 1200),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 4),
          (str_store_string, s0, "str_retirement_text_5"),
        (else_try),
          (lt, ":total_effect", 1850),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 5),
          (str_store_string, s0, "str_retirement_text_6"),
        (else_try),
          (lt, ":total_effect", 2500),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 6),
          (str_store_string, s0, "str_retirement_text_7"),
        (else_try),
          (lt, ":total_effect", 3500),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 7),
          (str_store_string, s0, "str_retirement_text_8"),
        (else_try),
          (lt, ":total_effect", 5000),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 8),
          (str_store_string, s0, "str_retirement_text_9"),
        (else_try),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 9),
          (str_store_string, s0, "str_retirement_text_10"),
        (try_end),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, 120),
        (overlay_set_position, reg1, pos1),

        (create_text_overlay, reg1, s0, tf_double_space|tf_scrollable),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 120),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 360),
        (position_set_y, pos1, 190),
        (overlay_set_area_size, reg1, pos1),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg1, pos1),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (jump_to_menu, "mnu_end_game"),
          (start_presentation, "prsnt_game_credits"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_2"),
          (presentation_set_duration, 0),
          (change_screen_return),
        (try_end),
        ]),
     ]),

#------------------------------------------------------------------------------
# START OF CUSTOM BATTLE MOD

  ("battle_2",0,0,[
      (ti_on_presentation_load,
       [(set_fixed_point_multiplier, 1000),
        (assign, "$g_formation_infantry_selected", 0),
        (assign, "$g_formation_archers_selected", 0),
        (assign, "$g_formation_cavalry_selected", 0),
        (assign, "$g_presentation_battle_active", 1),

        (str_clear, s7),

        (position_set_x, pos1, 0),
        (create_image_button_overlay, "$g_presentation_obj_1", "mesh_white_plane", "mesh_white_plane"),
        (position_set_y, pos1, 653),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        (create_image_button_overlay, "$g_presentation_obj_2", "mesh_white_plane", "mesh_white_plane"),
        (position_set_y, pos1, 613),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        (create_image_button_overlay, "$g_presentation_obj_3", "mesh_white_plane", "mesh_white_plane"),
        (position_set_y, pos1, 573),
        (overlay_set_position, "$g_presentation_obj_3", pos1),
        (position_set_x, pos1, 31500),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_presentation_obj_1", pos1),
        (overlay_set_size, "$g_presentation_obj_2", pos1),
        (overlay_set_size, "$g_presentation_obj_3", pos1),
        (overlay_set_alpha, "$g_presentation_obj_1", 0),
        (overlay_set_alpha, "$g_presentation_obj_2", 0),
        (overlay_set_alpha, "$g_presentation_obj_3", 0),
        (overlay_set_color, "$g_presentation_obj_1", 0xFFFF00),
        (overlay_set_color, "$g_presentation_obj_2", 0xFFFF00),
        (overlay_set_color, "$g_presentation_obj_3", 0xFFFF00),

        (position_set_x, pos1, 20),
        (create_check_box_overlay, "$g_presentation_obj_4", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_y, pos1, 663),
        (overlay_set_position, "$g_presentation_obj_4", pos1),
        (create_check_box_overlay, "$g_presentation_obj_5", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_y, pos1, 623),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
        (create_check_box_overlay, "$g_presentation_obj_6", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_y, pos1, 583),
        (overlay_set_position, "$g_presentation_obj_6", pos1),

        (get_player_agent_no, ":player_agent"),
        (agent_get_team, ":player_team", ":player_agent"),

        (position_set_x, pos1, 50),
        (create_text_overlay, "$g_presentation_obj_7", s7, 0),
        (position_set_y, pos1, 660),
        (overlay_set_position, "$g_presentation_obj_7", pos1),
        (create_text_overlay, "$g_presentation_obj_8", s7, 0),
        (position_set_y, pos1, 620),
        (overlay_set_position, "$g_presentation_obj_8", pos1),
        (create_text_overlay, "$g_presentation_obj_9", s7, 0),
        (position_set_y, pos1, 580),
        (overlay_set_position, "$g_presentation_obj_9", pos1),

        (position_set_y, pos1, 700),
        (create_text_overlay, reg1, "@Action", tf_center_justify),
        (position_set_x, pos1, 250),
        (overlay_set_position, reg1, pos1),
        (create_text_overlay, reg1, "@Mount", tf_center_justify),
        (position_set_x, pos1, 400),
        (overlay_set_position, reg1, pos1),
        (create_text_overlay, reg1, "@Attack Type", tf_center_justify),
        (position_set_x, pos1, 550),
        (overlay_set_position, reg1, pos1),

        (create_text_overlay, "$g_presentation_infantry_movement", s7, tf_center_justify),
        (create_text_overlay, "$g_presentation_infantry_riding", s7, tf_center_justify),
        (create_text_overlay, "$g_presentation_infantry_weapon_usage", s7, tf_center_justify),
        (create_text_overlay, "$g_presentation_archers_movement", s7, tf_center_justify),
        (create_text_overlay, "$g_presentation_archers_riding", s7, tf_center_justify),
        (create_text_overlay, "$g_presentation_archers_weapon_usage", s7, tf_center_justify),
        (create_text_overlay, "$g_presentation_cavalry_movement", s7, tf_center_justify),
        (create_text_overlay, "$g_presentation_cavalry_riding", s7, tf_center_justify),
        (create_text_overlay, "$g_presentation_cavalry_weapon_usage", s7, tf_center_justify),

        (call_script, "script_update_order_panel", ":player_team"),

        (create_button_overlay, "$g_presentation_obj_10", "@Hold This Position", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_11", "@Follow Me", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_12", "@Charge", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_13", "@Advance", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_14", "@Fall Back", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_15", "@Stand Closer", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_16", "@Spread Out", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_17", "@Stand Ground", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_18", "@Mount", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_19", "@Dismount", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_20", "@Use Any Weapon", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_21", "@Use Blunt Weapons", tf_center_justify),

        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, "$g_presentation_obj_10", pos1),
        (overlay_set_size, "$g_presentation_obj_11", pos1),
        (overlay_set_size, "$g_presentation_obj_12", pos1),
        (overlay_set_size, "$g_presentation_obj_13", pos1),
        (overlay_set_size, "$g_presentation_obj_14", pos1),
        (overlay_set_size, "$g_presentation_obj_15", pos1),
        (overlay_set_size, "$g_presentation_obj_16", pos1),
        (overlay_set_size, "$g_presentation_obj_17", pos1),
        (overlay_set_size, "$g_presentation_obj_18", pos1),
        (overlay_set_size, "$g_presentation_obj_19", pos1),
        (overlay_set_size, "$g_presentation_obj_20", pos1),
        (overlay_set_size, "$g_presentation_obj_21", pos1),

        (position_set_x, pos1, 250),
        (position_set_y, pos1, 540),
        (overlay_set_position, "$g_presentation_obj_10", pos1),
        (position_set_y, pos1, 520),
        (overlay_set_position, "$g_presentation_obj_11", pos1),
        (position_set_y, pos1, 500),
        (overlay_set_position, "$g_presentation_obj_12", pos1),
        (position_set_y, pos1, 480),
        (overlay_set_position, "$g_presentation_obj_13", pos1),
        (position_set_y, pos1, 460),
        (overlay_set_position, "$g_presentation_obj_14", pos1),
        (position_set_y, pos1, 440),
        (overlay_set_position, "$g_presentation_obj_15", pos1),
        (position_set_y, pos1, 420),
        (overlay_set_position, "$g_presentation_obj_16", pos1),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_17", pos1),

        (position_set_x, pos1, 400),
        (position_set_y, pos1, 540),
        (overlay_set_position, "$g_presentation_obj_18", pos1),
        (position_set_y, pos1, 520),
        (overlay_set_position, "$g_presentation_obj_19", pos1),

        (position_set_x, pos1, 550),
        (position_set_y, pos1, 540),
        (overlay_set_position, "$g_presentation_obj_20", pos1),
        (position_set_y, pos1, 520),
        (overlay_set_position, "$g_presentation_obj_21", pos1),

        (create_text_overlay, "$g_presentation_obj_22", "@Us", 0),
        (create_text_overlay, "$g_presentation_obj_24", "@Enemies", 0),
        (create_text_overlay, "$g_presentation_obj_25", "@Ready", tf_center_justify),
        (create_text_overlay, "$g_presentation_obj_26", "@Wounded", tf_center_justify),
        (create_text_overlay, "$g_presentation_obj_27", "@Dead", tf_center_justify),

        (create_text_overlay, "$g_battle_us_ready", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_us_wounded", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_us_dead", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_enemies_ready", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_enemies_wounded", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_enemies_dead", s7, tf_center_justify),

        (create_text_overlay, "$g_presentation_obj_23", "@Allies", 0),
        (create_text_overlay, "$g_battle_allies_ready", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_allies_wounded", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_allies_dead", s7, tf_center_justify),

        (assign, ":stat_position_x", 100),
        (assign, ":stat_position_y", 100),

        (val_add, ":stat_position_x", 150),
        (val_add, ":stat_position_y", 120),
        (position_set_x, pos1, ":stat_position_x"),
        (position_set_y, pos1, ":stat_position_y"),
        (overlay_set_position, "$g_presentation_obj_25", pos1),
        (val_add, ":stat_position_x", 150),
        (position_set_x, pos1, ":stat_position_x"),
        (overlay_set_position, "$g_presentation_obj_26", pos1),
        (val_add, ":stat_position_x", 150),
        (position_set_x, pos1, ":stat_position_x"),
        (overlay_set_position, "$g_presentation_obj_27", pos1),

        (val_add, ":stat_position_x", -450),
        (val_add, ":stat_position_y", -40),
        (position_set_x, pos1, ":stat_position_x"),
        (position_set_y, pos1, ":stat_position_y"),
        (overlay_set_position, "$g_presentation_obj_22", pos1),
        (val_add, ":stat_position_y", -40),
        (position_set_y, pos1, ":stat_position_y"),
        (overlay_set_position, "$g_presentation_obj_23", pos1),
        (val_add, ":stat_position_y", -40),
        (position_set_y, pos1, ":stat_position_y"),
        (overlay_set_position, "$g_presentation_obj_24", pos1),

        (get_scene_boundaries, pos2, pos3),
        (position_transform_position_to_local, pos4, pos2, pos3),
        (set_fixed_point_multiplier, 1000),
        (position_get_x, ":map_width", pos4),
        (position_get_y, ":map_height", pos4),
        (set_fixed_point_multiplier, 1000),
        (store_div, ":map_ratio", ":map_height", 100),
        (store_div, ":map_ratio", ":map_width", ":map_ratio"),
        (try_begin),
          (gt, ":map_ratio", 100),
          (assign, "$g_battle_map_width", 300),
          (store_div, "$g_battle_map_scale", ":map_width", "$g_battle_map_width"),
          (store_div, "$g_battle_map_height", ":map_height", "$g_battle_map_scale"),
        (else_try),
          (assign, "$g_battle_map_height", 300),
          (store_div, "$g_battle_map_scale", ":map_height", "$g_battle_map_height"),
          (store_div, "$g_battle_map_width", ":map_width", "$g_battle_map_scale"),
        (try_end),

        (create_image_button_overlay, "$g_battle_map_plane", "mesh_white_plane", "mesh_white_plane"),
        (overlay_set_color, "$g_battle_map_plane", 0),
        (store_add, ":map_bordered_width", "$g_battle_map_width", 20),
        (store_add, ":map_bordered_height", "$g_battle_map_height", 20),
        (store_mul, ":map_scale_x", ":map_bordered_width", 50),
        (store_mul, ":map_scale_y", ":map_bordered_height", 50),
        (position_set_x, pos1, ":map_scale_x"),
        (position_set_y, pos1, ":map_scale_y"),
        (overlay_set_size, "$g_battle_map_plane", pos1),
        (store_sub, ":map_pos_x", 990, ":map_bordered_width"),
        (store_sub, ":map_pos_y", 740, ":map_bordered_height"),
        (position_set_x, pos1, ":map_pos_x"),
        (position_set_y, pos1, ":map_pos_y"),
        (overlay_set_position, "$g_battle_map_plane", pos1),
        (overlay_set_alpha, "$g_battle_map_plane", 0x44),

        (create_mesh_overlay, "$g_battle_map_infantry_order_flag", "mesh_flag_infantry"),
        (create_mesh_overlay, "$g_battle_map_archers_order_flag", "mesh_flag_archers"),
        (create_mesh_overlay, "$g_battle_map_cavalry_order_flag", "mesh_flag_cavalry"),
        (overlay_set_alpha, "$g_battle_map_infantry_order_flag", 0),
        (overlay_set_alpha, "$g_battle_map_archers_order_flag", 0),
        (overlay_set_alpha, "$g_battle_map_cavalry_order_flag", 0),

        (call_script, "script_update_order_panel_statistics_and_map_2"),
        (call_script, "script_update_order_panel_checked_classes"),

        (presentation_set_duration, 999999),
        ]),
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        (get_player_agent_no, ":player_agent"),
        (agent_get_team, ":player_team", ":player_agent"),

        (assign, ":update_listeners", 0),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_4"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_infantry_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_1", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_1", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_5"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_archers_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_2", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_2", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_6"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_cavalry_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_3", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_3", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_1"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_infantry_selected", 1),
          (assign, "$g_formation_archers_selected", 0),
          (assign, "$g_formation_cavalry_selected", 0),
          (overlay_animate_to_alpha, "$g_presentation_obj_1", 250, 0x44),
          (overlay_animate_to_alpha, "$g_presentation_obj_2", 250, 0),
          (overlay_animate_to_alpha, "$g_presentation_obj_3", 250, 0),
          (overlay_set_val, "$g_presentation_obj_4", 1),
          (overlay_set_val, "$g_presentation_obj_5", 0),
          (overlay_set_val, "$g_presentation_obj_6", 0),
        (else_try),
          (eq, ":object", "$g_presentation_obj_2"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_infantry_selected", 0),
          (assign, "$g_formation_archers_selected", 1),
          (assign, "$g_formation_cavalry_selected", 0),
          (overlay_animate_to_alpha, "$g_presentation_obj_1", 250, 0),
          (overlay_animate_to_alpha, "$g_presentation_obj_2", 250, 0x44),
          (overlay_animate_to_alpha, "$g_presentation_obj_3", 250, 0),
          (overlay_set_val, "$g_presentation_obj_4", 0),
          (overlay_set_val, "$g_presentation_obj_5", 1),
          (overlay_set_val, "$g_presentation_obj_6", 0),
        (else_try),
          (eq, ":object", "$g_presentation_obj_3"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_infantry_selected", 0),
          (assign, "$g_formation_archers_selected", 0),
          (assign, "$g_formation_cavalry_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_1", 250, 0),
          (overlay_animate_to_alpha, "$g_presentation_obj_2", 250, 0),
          (overlay_animate_to_alpha, "$g_presentation_obj_3", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_4", 0),
          (overlay_set_val, "$g_presentation_obj_5", 0),
          (overlay_set_val, "$g_presentation_obj_6", 1),
        (else_try),
          (eq, ":object", "$g_presentation_obj_10"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_hold),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_11"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_follow),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_12"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_charge),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_13"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_advance),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_14"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_fall_back),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_15"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_stand_closer),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_16"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_spread_out),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_17"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_stand_ground),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_18"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_mount),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_19"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_dismount),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_20"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_use_any_weapon),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_21"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_use_blunt_weapons),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_battle_map_plane"),
          (get_scene_boundaries, pos2, pos3),
          (mouse_get_position, pos1),
          (set_fixed_point_multiplier, 1000),
          (position_get_x, ":mouse_x", pos1),
          (position_get_y, ":mouse_y", pos1),
          (store_sub, ":map_x", 980, "$g_battle_map_width"),
          (store_sub, ":map_y", 730, "$g_battle_map_height"),
          (val_sub, ":mouse_x", ":map_x"),
          (val_sub, ":mouse_y", ":map_y"),
          (val_clamp, ":mouse_x", 0, "$g_battle_map_width"),
          (val_clamp, ":mouse_y", 0, "$g_battle_map_height"),
          (val_mul, ":mouse_x", "$g_battle_map_scale"),
          (val_mul, ":mouse_y", "$g_battle_map_scale"),
          (set_fixed_point_multiplier, 1000),
          (position_set_x, pos1, ":mouse_x"),
          (position_set_y, pos1, ":mouse_y"),
          (position_transform_position_to_parent, pos3, pos2, pos1),
          (try_begin),
            (eq, "$g_formation_infantry_selected", 1),
            (team_give_order, ":player_team", grc_infantry, mordr_hold),
            (team_set_order_position, ":player_team", grc_infantry, pos3),
          (try_end),
          (try_begin),
            (eq, "$g_formation_archers_selected", 1),
            (team_give_order, ":player_team", grc_archers, mordr_hold),
            (team_set_order_position, ":player_team", grc_archers, pos3),
          (try_end),
          (try_begin),
            (eq, "$g_formation_cavalry_selected", 1),
            (team_give_order, ":player_team", grc_cavalry, mordr_hold),
            (team_set_order_position, ":player_team", grc_cavalry, pos3),
          (try_end),
          (call_script, "script_update_order_flags_on_map"),
          (call_script, "script_update_order_panel", ":player_team"),
        (try_end),
        (try_begin),
          (eq, ":update_listeners", 1),
          (try_begin),
            (eq, "$g_formation_infantry_selected", 1),
            (eq, "$g_formation_archers_selected", 1),
            (eq, "$g_formation_cavalry_selected", 1),
            (team_set_order_listener, ":player_team", grc_everyone),
          (else_try),
            (eq, "$g_formation_infantry_selected", 1),
            (team_set_order_listener, ":player_team", grc_infantry),
          (else_try),
            (eq, "$g_formation_archers_selected", 1),
            (team_set_order_listener, ":player_team", grc_archers),
          (else_try),
            (eq, "$g_formation_cavalry_selected", 1),
            (team_set_order_listener, ":player_team", grc_cavalry),
          (try_end),
        (try_end),
        ]),
      (ti_on_presentation_mouse_enter_leave,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":enter_leave"),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_infantry_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_infantry_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_infantry_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_7", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_infantry_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_infantry_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_infantry_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_7", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_2"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_archers_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_archers_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_archers_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_8", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_archers_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_archers_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_archers_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_3"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_cavalry_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_cavalry_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_cavalry_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_9", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_cavalry_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_cavalry_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_cavalry_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_9", 250, 0),
          (try_end),
        (try_end),
        ]),
      (ti_on_presentation_run,
       [(store_trigger_param_1, ":cur_time"),
        (try_begin),
          (this_or_next|game_key_clicked, gk_infantry_hear),
          (this_or_next|game_key_clicked, gk_archers_hear),
          (this_or_next|game_key_clicked, gk_cavalry_hear),
          #SW - commented out - gk_heroes_hear doesn't seem to be valid anymore?
		  #(this_or_next|game_key_clicked, gk_heroes_hear),
          (this_or_next|game_key_clicked, gk_everyone_hear),
          (game_key_clicked, gk_reverse_order_group),
          (call_script, "script_update_order_panel_checked_classes"),
        (try_end),
        (try_begin),
          (this_or_next|game_key_clicked, gk_order_halt),
          (this_or_next|game_key_clicked, gk_order_follow),
          (this_or_next|game_key_clicked, gk_order_charge),
		  #SW - commented out - gk_order_mount doesn't seem to be valid anymore?
          #(this_or_next|game_key_clicked, gk_order_mount),
          (this_or_next|game_key_clicked, gk_order_dismount),
          (this_or_next|game_key_clicked, gk_order_advance),
          (this_or_next|game_key_clicked, gk_order_fall_back),
          (this_or_next|game_key_clicked, gk_order_stand_closer),
          (this_or_next|game_key_clicked, gk_order_spread_out),
          (this_or_next|game_key_clicked, gk_order_hold_fire_toggle),
          (game_key_clicked, gk_order_blunt_weapons_toggle),
          (get_player_agent_no, ":player_agent"),
          (agent_get_team, ":player_team", ":player_agent"),
          (call_script, "script_update_order_panel", ":player_team"),
        (try_end),
        (try_begin),
          (gt, ":cur_time", 200),
          (game_key_clicked, gk_view_orders),
          (try_for_agents, ":cur_agent"),
            (agent_set_slot, ":cur_agent", slot_agent_map_overlay_id, 0),
          (try_end),
          #swy-- hackfix to show sidelog messages again in wb-- i'm not going to spend more time in this jumblefuck, i'm scared.
          (set_show_messages, 1),
          (assign, "$g_presentation_battle_active", 0),
          (presentation_set_duration, 0),
        (try_end),
        ]),
      ]),

# END OF CUSTOM BATTLE MOD
#------------------------------------------------------------------------------

#SW - FROM BLACKJACK MOD
##plus
  ("blackjack", 0, 0,
   [
     (ti_on_presentation_load,
      [

        (set_fixed_point_multiplier, 1000),
        (assign,"$g_presentation_obj_1",-1),
        (assign,"$g_presentation_obj_2",-1),
        (assign,"$g_presentation_obj_3",-1),
        (assign,"$g_presentation_obj_4",-1),
        (assign,"$g_presentation_obj_5",-1),
        (assign,"$g_presentation_obj_6",-1),
        (assign,"$g_presentation_obj_7",-1),
        (assign,"$g_presentation_obj_8",-1),
        (assign,"$g_presentation_obj_9",-1),
        (assign,"$g_presentation_obj_10",-1),
        (assign,"$g_presentation_obj_11",-1),
        (assign,"$g_presentation_obj_12",-1),
        (assign,"$g_presentation_credits_obj_1",-1),
        (assign,"$g_presentation_credits_obj_2",-1),
        (assign,"$g_presentation_credits_obj_3",-1),
        (assign,"$g_presentation_credits_obj_4",-1),
        (assign,"$g_presentation_credits_obj_5",-1),
        (assign,reg1,0),
        (assign,reg21,0),
        (assign,reg22,0),
        (assign,reg23,0),
        (assign,reg24,0),
        (assign,reg25,0),
        (assign,reg26,0),
        (assign,reg27,0),
        (assign,reg28,0),
        (assign,reg29,0),
        (assign,reg30,0),
        (assign,reg31,0),
        (assign,reg32,0),
        (assign,reg33,0),
        (assign,reg34,0),
        (assign,reg35,0),
        (assign,reg36,0),
        (assign,reg37,0),
        (assign,reg38,0),
        (assign,reg39,0),
        (assign, reg51, 1),
        (assign, reg52, 0),
        (assign, reg53, 0),
        (assign, reg54, 0),
        (assign, reg55, 0),
        (assign, reg56, 0),
        (assign, reg57, 0),
        (assign, reg58, 0),
        (assign, reg60, 0),
        (assign, reg61, 0),
        (assign, reg62, 0),
        (assign, reg63, 0),

        (create_mesh_overlay, reg1, "mesh_wood_table"),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, 0),
        (overlay_set_position, reg1, pos1),

        (str_store_troop_name, s1, "$g_talk_troop"),
        (create_text_overlay, reg1, "@{s1}", tf_center_justify),
        (position_set_x, pos1, 120),#820
        (position_set_y, pos1, 470),#470
        (overlay_set_position, reg1, pos1),
        (overlay_set_color, reg1, 0xffffff),
        (str_store_troop_name, s1, "trp_player"),
        (create_text_overlay, reg1, "@{s1}", tf_center_justify),
        (position_set_x, pos1, 815),#120
        (position_set_y, pos1, 8),#8
        (overlay_set_position, reg1, pos1),
        (overlay_set_color, reg1, 0xffffff),
         #"mesh_21_troop_portrait"
        (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_troop_note_mesh", "$g_talk_troop"),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 7),#700
        (position_set_y, pos1, 500),#500
        (overlay_set_position, reg1, pos1),
         #"mesh_21_troop_portrait"
        (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_troop_note_mesh", "trp_player"),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 740),#7
        (position_set_y, pos1, 45),#20
        (overlay_set_position, reg1, pos1),


         #"$g_presentation_obj_1
        (create_image_button_overlay, "$g_presentation_obj_1", "mesh_21_button", "mesh_21_button_down"),
        (position_set_x, pos1, 650),#250
        (position_set_y, pos1, 160),#160
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        (position_set_x, pos1, 300),
        (position_set_y, pos1, 450),
        (overlay_set_size, "$g_presentation_obj_1", pos1),
        (create_text_overlay, reg1, "@Hit"),
        (position_set_x, pos1, 660),#260
        (position_set_y, pos1, 160),#160
        (overlay_set_position, reg1, pos1),
        (overlay_set_color, reg1, 0xffffff),
         #"$g_presentation_obj_2
        (create_image_button_overlay, "$g_presentation_obj_2", "mesh_21_button", "mesh_21_button_down"),
        (position_set_x, pos1, 650),#250
        (position_set_y, pos1, 100),#100
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        (position_set_x, pos1, 300),
        (position_set_y, pos1, 450),
        (overlay_set_size, "$g_presentation_obj_2", pos1),
        (create_text_overlay, reg1, "@Stay"),
        (position_set_x, pos1, 660),#260
        (position_set_y, pos1, 100),#100
        (overlay_set_position, reg1, pos1),
        (overlay_set_color, reg1, 0xffffff),
         #"$g_presentation_obj_3
        (create_image_button_overlay, "$g_presentation_obj_3", "mesh_21_button", "mesh_21_button_down"),
        (position_set_x, pos1, 650),#250
        (position_set_y, pos1, 40),#40
        (overlay_set_position, "$g_presentation_obj_3", pos1),
        (position_set_x, pos1, 300),
        (position_set_y, pos1, 450),
        (overlay_set_size, "$g_presentation_obj_3", pos1),
        (create_text_overlay, reg1, "@Double"),
        (position_set_x, pos1, 660),#260
        (position_set_y, pos1, 40),#40
        (overlay_set_position, reg1, pos1),
        (overlay_set_color, reg1, 0xffffff),

        (create_mesh_overlay, reg1, "mesh_text_bar"),
        (position_set_x, pos1, 240),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 740),
        (position_set_y, pos1, 305),
        (overlay_set_position, reg1, pos1),

        (str_store_string, s1, "@Bet: {reg51} credits"),
        (create_text_overlay, "$g_presentation_obj_4", s1),
        (position_set_x, pos1, 755),#30
        (position_set_y, pos1, 355),#300
        (overlay_set_position, "$g_presentation_obj_4", pos1),
        (overlay_set_color, "$g_presentation_obj_4", 0xfffccc),
        (store_troop_gold,reg1,"trp_player"),
        (create_text_overlay, "$g_presentation_obj_5", "@Money: {reg1} credits"),
        (position_set_x, pos1, 755),#30
        (position_set_y, pos1, 325),#270
        (overlay_set_position, "$g_presentation_obj_5", pos1),
        (overlay_set_color, "$g_presentation_obj_5", 0xfffccc),

     ## energy_bar ## this's for my another mod(Being prepared): http://bbs.mountblade.com.cn/viewthread.php?tid=49652&extra=page%3D1
        #(create_mesh_overlay, "$energy_bar", "mesh_energy_bar"),
        #(position_set_x, pos1, 878),
        #(position_set_y, pos1, 14),
        #(overlay_set_position, "$energy_bar", pos1),
        #(position_set_x, pos1, 5180),#max=5180
        #(position_set_y, pos1, 300),
        #(overlay_set_size, "$energy_bar", pos1),
        #(overlay_set_color, "$energy_bar", 0xcccc66),

        (presentation_set_duration, 999999),
        ]),
      (ti_on_presentation_run,#
       [
        (store_trigger_param_1, ":cur_time"),
        (set_fixed_point_multiplier, 1000),

        (ge, ":cur_time",500),
        #ce shi
        #(try_begin),
        #        (key_clicked, key_t),
        #        (display_message, "@reg52={reg52}"),
        #        (display_message, "@reg53={reg53}"),
        #        (display_message, "@reg54={reg54}"),
        #        (display_message, "@reg55={reg55}"),
        #(try_end),
        #ce shi

        (try_begin),
          (eq, reg50, 0),
          (assign, reg50, 3),
          (create_mesh_overlay, "$g_presentation_obj_6", "mesh_text_bar"),
          (position_set_x, pos1, 350),
          (position_set_y, pos1, 1800),
          (overlay_set_size, "$g_presentation_obj_6", pos1),
          (position_set_x, pos6, 330),
          (position_set_y, pos6, 250),
          (create_slider_overlay, "$g_presentation_obj_7", 1, 50),
          (overlay_set_val, "$g_presentation_obj_7", reg51),
          (position_set_x, pos7, 510),
          (position_set_y, pos7, 360),
          (create_text_overlay, "$g_presentation_obj_8", "@Bet: {reg51} credits"),
          (position_set_x, pos8, 420),
          (position_set_y, pos8, 400),
          (create_mesh_overlay, "$g_presentation_obj_9", "mesh_button_used"),
          (position_set_x, pos1, 350),
          (position_set_y, pos1, 500),
          (overlay_set_size, "$g_presentation_obj_9", pos1),
          (position_set_x, pos9, 453),
          (position_set_y, pos9, 284),
          (create_button_overlay, "$g_presentation_obj_10", "@Done", tf_center_justify),
          (position_set_x, pos1, 1400),
          (position_set_y, pos1, 1400),
          (overlay_set_size, "$g_presentation_obj_10", pos1),
          (position_set_x, pos10, 500),
          (position_set_y, pos10, 284),
          (overlay_set_position, "$g_presentation_obj_6", pos6),
          (overlay_set_val, "$g_presentation_obj_7", reg51),
          (overlay_set_position, "$g_presentation_obj_7", pos7),
          (overlay_set_position, "$g_presentation_obj_8", pos8),
          (overlay_set_position, "$g_presentation_obj_9", pos9),
          (overlay_set_position, "$g_presentation_obj_10", pos10),
        (try_end),

        (try_begin),
          (eq, reg50, 4),
          (assign, reg50, 5),
          (assign, reg58,":cur_time"),
          (position_set_x, pos13, 320),
          (position_set_y, pos13, 265),
          (position_set_x, pos14, 450),
          (position_set_y, pos14, 400),
          (assign, reg63, 0),
        (try_end),
        (try_begin),
          (eq, reg50, 5),
          (lt, reg63, 30),
          (store_sub, ":time_p",":cur_time",reg58),
          (ge, ":time_p",20),
          (assign, reg58,":cur_time"),
          (position_get_x, ":x_13",pos13),
          (val_add, ":x_13",3),
          (position_set_x, pos13, ":x_13"),
          (create_mesh_overlay, reg1, "mesh_poker_back"),
          (overlay_set_position, reg1, pos13),
          (overlay_set_size, reg1, pos14),
          (val_add, reg63,1),
        (else_try),
          (eq, reg63, 30),
          (assign, reg63, 0),
          (assign, reg50, 1),
          (assign, reg58,":cur_time"),
        (try_end),

        (eq, reg50, 1),
        (store_sub, ":time_p",":cur_time",reg58),
        (ge, ":time_p",700),

        (try_begin),
          (eq, reg21, 0),
          (assign,":reang_low","mesh_poker_heart_a"),
          (assign,":reang_high","mesh_poker_red_joker"),
          (store_random_in_range,":rp",":reang_low",":reang_high"),
          (assign,reg21,":rp"),
          (store_sub,":banker_points",":rp",":reang_low"),
          (val_add,":banker_points",1),
          (try_begin),
            (le,":banker_points",13),
          (else_try),
            (val_mod,":banker_points",13),
            (try_begin),
              (eq,":banker_points",0),
              (assign,":banker_points",13),
            (try_end),
          (try_end),
          (val_min,":banker_points",10),
          (val_add, reg52, ":banker_points"),
          (val_add, reg53, ":banker_points"),
          (try_begin),
            (this_or_next|eq,reg21,"mesh_poker_heart_a"),
            (this_or_next|eq,reg21,"mesh_poker_spade_a"),
            (this_or_next|eq,reg21,"mesh_poker_diamond_a"),
            (eq,reg21,"mesh_poker_club_a"),
            #(this_or_next|eq,reg21,407),
            #(this_or_next|eq,reg21,420),
            #(this_or_next|eq,reg21,433),
            #(eq,reg21,446),
            (val_add, reg53, 10),
          (try_end),
          (create_mesh_overlay, "$g_presentation_credits_obj_1", "mesh_poker_back"),
          (overlay_set_position, "$g_presentation_credits_obj_1", pos13),
          (overlay_set_size, "$g_presentation_credits_obj_1", pos14),
          (position_set_x, pos11, 350),
          (position_set_y, pos11, 500),
          (copy_position,pos60,pos11),
          (overlay_animate_to_position, "$g_presentation_credits_obj_1",300, pos11),
          #
          (try_for_range, ":unused", 0, 200),
            (eq,reg22,0),
            (store_random_in_range,":rp",":reang_low",":reang_high"),
            (neq,":rp",reg21),
            (assign,reg22,":rp"),
          (try_end),
          (store_sub,":banker_points",":rp",":reang_low"),
          (val_add,":banker_points",1),
          (try_begin),
            (le,":banker_points",13),
          (else_try),
            (val_mod,":banker_points",13),
            (try_begin),
              (eq,":banker_points",0),
              (assign,":banker_points",13),
            (try_end),
          (try_end),
          (val_min,":banker_points",10),
          (val_add, reg52, ":banker_points"),
          (val_add, reg53, ":banker_points"),
          (try_begin),
            (eq, reg53, reg52),
            (this_or_next|eq,reg22,"mesh_poker_heart_a"),
            (this_or_next|eq,reg22,"mesh_poker_spade_a"),
            (this_or_next|eq,reg22,"mesh_poker_diamond_a"),
            (eq,reg22,"mesh_poker_club_a"),
            #(this_or_next|eq,reg22,407),
            #(this_or_next|eq,reg22,420),
            #(this_or_next|eq,reg22,433),
            #(eq,reg22,446),
            (eq,reg22,446),
            (val_add, reg53, 10),
          (try_end),
          (create_mesh_overlay, "$g_presentation_credits_obj_2", reg22),
          (overlay_set_position, "$g_presentation_credits_obj_2", pos13),
          (overlay_set_size, "$g_presentation_credits_obj_2", pos14),
          (position_get_x,":x_p",pos11),
          (val_add,":x_p",150),
          (position_set_x, pos11, ":x_p"),
          #(position_move_x, pos11, 150),
          (overlay_animate_to_position, "$g_presentation_credits_obj_2",300, pos11),

          (try_for_range, ":unused", 0, 200),
            (eq,reg23,0),
            (store_random_in_range,":rp",":reang_low",":reang_high"),
            (neq,":rp",reg21),
            (neq,":rp",reg22),
            (assign,reg23,":rp"),
          (try_end),
          (store_sub,":player_points",":rp",":reang_low"),
          (val_add,":player_points",1),
          (try_begin),
            (le,":player_points",13),
          (else_try),
            (val_mod,":player_points",13),
            (try_begin),
              (eq,":player_points",0),
              (assign,":player_points",13),
            (try_end),
          (try_end),
          (val_min,":player_points",10),
          (val_add, reg54, ":player_points"),
          (val_add, reg55, ":player_points"),
          (try_begin),
            (this_or_next|eq,reg23,"mesh_poker_heart_a"),
            (this_or_next|eq,reg23,"mesh_poker_spade_a"),
            (this_or_next|eq,reg23,"mesh_poker_diamond_a"),
            (eq,reg23,"mesh_poker_club_a"),
            #(this_or_next|eq,reg23,407),
            #(this_or_next|eq,reg23,420),
            #(this_or_next|eq,reg23,433),
            #(eq,reg23,446),
            (eq,reg23,446),
            (val_add, reg55, 10),
          (try_end),
          (create_mesh_overlay, "$g_presentation_credits_obj_3", reg23),
          (overlay_set_position, "$g_presentation_credits_obj_3", pos13),
          (overlay_set_size, "$g_presentation_credits_obj_3", pos14),
          (position_set_x, pos12, 200),
          (position_set_y, pos12, 30),
          (overlay_animate_to_position, "$g_presentation_credits_obj_3",300, pos12),
          #
          (try_for_range, ":unused", 0, 200),
            (eq,reg24,0),
            (store_random_in_range,":rp",":reang_low",":reang_high"),
            (neq,":rp",reg21),
            (neq,":rp",reg22),
            (neq,":rp",reg23),
            (assign,reg24,":rp"),
          (try_end),
          (store_sub,":player_points",":rp",":reang_low"),
          (val_add,":player_points",1),
          (try_begin),
            (le,":player_points",13),
          (else_try),
            (val_mod,":player_points",13),
            (try_begin),
              (eq,":player_points",0),
              (assign,":player_points",13),
            (try_end),
          (try_end),
          (val_min,":player_points",10),
          (val_add, reg54, ":player_points"),
          (val_add, reg55, ":player_points"),
          (try_begin),
            (eq, reg55, reg54),
            (this_or_next|eq,reg24,"mesh_poker_heart_a"),
            (this_or_next|eq,reg24,"mesh_poker_spade_a"),
            (this_or_next|eq,reg24,"mesh_poker_diamond_a"),
            (eq,reg24,"mesh_poker_club_a"),
            #(this_or_next|eq,reg24,407),
            #(this_or_next|eq,reg24,420),
            #(this_or_next|eq,reg24,433),
            #(eq,reg24,446),
            (val_add, reg55, 10),
          (try_end),
          (create_mesh_overlay, "$g_presentation_credits_obj_4", reg24),
          (overlay_set_position, "$g_presentation_credits_obj_4", pos13),
          (overlay_set_size, "$g_presentation_credits_obj_4", pos14),
          (position_get_x,":x_p",pos12),
		  #SW - modified card overlay so they are spaced wider apart
          #(val_add,":x_p",60),
		  (val_add,":x_p",90),
          (position_set_x, pos12, ":x_p"),
          #(position_move_x, pos12, 100),
          (overlay_animate_to_position, "$g_presentation_credits_obj_4",300, pos12),

          (assign, reg58, ":cur_time"),
        (try_end),

        (gt,reg24,0),
        (store_sub, ":time1",":cur_time",reg58),
        (ge, ":time1",1200),

        (try_begin),
          (eq,reg25,0),
          (eq,reg56,0),
          (try_begin),
            (eq,reg53,21),
            (eq,reg55,21),
            (display_message, "@Draw, all bets are returned.", 0x88ffff),
            (call_script, "script_troop_add_gold", "trp_player", reg51),
            #(play_sound, "snd_game_draw"),
            (assign,reg56,3),
          (else_try),
            (eq,reg53,21),#blackjack
            (val_div, reg51, 2),
            (troop_remove_gold, "trp_player", reg51),
            (play_sound, "snd_money_paid"),
            #(display_message, "@The dealer has a Blackjack! You lose 50% more of your bets!", 0x88ffff),
			(display_message, "@The dealer has a perfect hand! You lose 50% more of your bets!", 0x88ffff),
            #(play_sound, "snd_game_lose"),
            (assign,reg56,1),
          (else_try),
            (eq,reg55,21),
            (val_mul, reg51, 5),
            (val_div, reg51, 2),
            (call_script, "script_troop_add_gold", "trp_player", reg51),
            #(display_message, "@You have a Blackjack! You win 50% more of your bets!", 0x88ffff),
			(display_message, "@You have a perfect hand! You win 50% more of your bets!", 0x88ffff),
            #(play_sound, "snd_game_win"),
            (assign,reg56,2),
          (try_end),

          (neq,reg56,0),
          (try_begin),
            (eq,reg61,0),
            (assign,reg61,1),
            (create_mesh_overlay, reg1, reg21),
            (overlay_set_position, reg1, pos60),
            (overlay_set_size, reg1, pos14),
          (try_end),
          (store_troop_gold,reg1,"trp_player"),
          (str_store_string, s1, "@Bet: 0 credits"),
          (overlay_set_text, "$g_presentation_obj_4", s1),
          (str_store_string, s1, "@Money: {reg1} credits"),
          (overlay_set_text, "$g_presentation_obj_5", s1),
          (assign,reg58,":cur_time"),
        (try_end),

        (try_begin),
          (gt,reg24,0),
          (eq,reg56,0),

          (ge, reg57, 1),
          (store_sub, ":time1",":cur_time",reg58),
          (ge, ":time1",600),

          (try_begin),
            (gt,reg52,21),
            (val_mul,reg51,2),
            (display_message, "@The dealers hand value is over 21. You win!", 0x88ffff),
            #(play_sound, "snd_game_win"),
            (call_script, "script_troop_add_gold", "trp_player", reg51),
            (assign,reg56,2),
			#SW - added script_change_player_relation_with_troop to blackjack mod (win = -1, lose = +1, draw = 0)
			(gt,reg51,25),#if npc loses more than 25 credits then worse relationship
			(call_script, "script_change_player_relation_with_troop", "$g_talk_troop", -1),
          (else_try),
            (gt,reg54,21),
            (display_message, "@Your hand value is over 21. You lose!", 0x88ffff),
            #(play_sound, "snd_game_lose"),
      (assign,reg56,1),
			#SW - added script_change_player_relation_with_troop to blackjack mod (win = -1, lose = +1, draw = 0)
			#if npc gains more than 25 credits has a 50% probability of raising relation
			(gt,reg51,25),
			(store_random_in_range,":_t",0,1),(eq,":_t",0),
			(call_script, "script_change_player_relation_with_troop", "$g_talk_troop", 1),
          (else_try),
            (eq,reg60,1),
            (eq,reg61,1),
            (try_begin),
              (assign,":win",0),
              (try_begin),
                (le,reg53,21),
                (try_begin),
                  (le,reg55,21),
                  (gt,reg53,reg55),
                  (assign,":win",1),
                (else_try),
                  (gt,reg55,21),
                  (gt,reg53,reg54),
                  (assign,":win",1),
                (try_end),
              (else_try),
                (gt,reg53,21),
                (try_begin),
                  (le,reg55,21),
                  (gt,reg52,reg55),
                  (assign,":win",1),
                (else_try),
                  (gt,reg55,21),
                  (gt,reg52,reg54),
                  (assign,":win",1),
                (try_end),
              (try_end),
              (eq,":win",1),
              (assign,reg56,1),
              (display_message, "@The dealer has a higher hand value. You lose!", 0x88ffff),
              #(play_sound, "snd_game_lose"),
			#SW - added script_change_player_relation_with_troop to blackjack mod (win = -1, lose = +1, draw = 0)
			(call_script, "script_change_player_relation_with_troop", "$g_talk_troop", 1),
              (overlay_set_text, "$g_presentation_obj_4", "@Bet: 0 credits"),
            (else_try),
              (assign,":win",0),
              (try_begin),
                (le,reg55,21),
                (try_begin),
                  (le,reg53,21),
                  (gt,reg55,reg53),
                  (assign,":win",1),
                (else_try),
                  (gt,reg53,21),
                  (gt,reg55,reg52),
                  (assign,":win",1),
                (try_end),
              (else_try),
                (gt,reg55,21),
                (try_begin),
                  (le,reg53,21),
                  (gt,reg54,reg53),
                  (assign,":win",1),
                (else_try),
                  (gt,reg53,21),
                  (gt,reg54,reg52),
                  (assign,":win",1),
                (try_end),
              (try_end),
              (eq,":win",1),
              (assign,reg56,2),
              (display_message, "@You have a higher hand value. You win!", 0x88ffff),
              (val_mul, reg51, 2),
              (call_script, "script_troop_add_gold", "trp_player", reg51),
              #(play_sound, "snd_game_win"),
			#SW - added script_change_player_relation_with_troop to blackjack mod (win = -1, lose = +1, draw = 0)
			(gt,reg51,25*2),#if npc losts more than 25 credits then worse relationship
			(call_script, "script_change_player_relation_with_troop", "$g_talk_troop", -1),
            (else_try),
              (display_message, "@Draw, all bets are returned.", 0x88ffff),
              (call_script, "script_troop_add_gold", "trp_player", reg51),
              #(play_sound, "snd_game_draw"),
			#SW - added script_change_player_relation_with_troop to blackjack mod (win = -1, lose = +1, draw = 0)
			#(call_script, "script_change_player_relation_with_troop", "$g_talk_troop", 0),
              (assign,reg56,3),
            (try_end),
          (try_end),
          (neq,reg56,0),
          (try_begin),
            (eq,reg61,0),
            (assign,reg61,1),
            (create_mesh_overlay, reg1, reg21),
            (overlay_set_position, reg1, pos60),
            (overlay_set_size, reg1, pos14),
          (try_end),
          (store_troop_gold,reg1,"trp_player"),
          (str_store_string, s1, "@Bet: 0 credits"),
          (overlay_set_text, "$g_presentation_obj_4", s1),
          (str_store_string, s1, "@Money: {reg1} credits"),
          (overlay_set_text, "$g_presentation_obj_5", s1),
          (assign,reg58,":cur_time"),
        (try_end),

        (try_begin),
          (neq,reg56,0),
          (store_sub,":time",":cur_time",reg58),
          (ge,":time",800),
          (assign,reg50,2),

          (try_begin),
            (eq,reg56,1),
            (str_store_string, s1, "@You lose. Try again?"),
          (else_try),
            (eq,reg56,2),
            (str_store_string, s1, "@You win! Try again?"),
          (else_try),
            (eq,reg56,3),
            (str_store_string, s1, "@Draw. Try again?"),
          (try_end),
          (create_text_overlay, reg1, "@{s1}", tf_center_justify),
          (position_set_x, pos1, 480),
          (position_set_y, pos1, 480),
          (overlay_set_position, reg1, pos1),
          (position_set_x, pos1, 2000),
          (position_set_y, pos1, 2000),
          (overlay_set_size, reg1, pos1),#
		  #SW - modified color
          #(overlay_set_color, reg1, 0xffffff),
		  (overlay_set_color, reg1, 0x8B0000),

          (create_button_overlay, "$g_presentation_obj_11", "@Yes ", tf_center_justify),
          (position_set_x, pos1, 450),
          (position_set_y, pos1, 370),
          (overlay_set_position, "$g_presentation_obj_11", pos1),
          (position_set_x, pos1, 1500),
          (position_set_y, pos1, 1500),
          (overlay_set_size, "$g_presentation_obj_11", pos1),
		  #SW - modified color
          #(overlay_set_color, "$g_presentation_obj_11", 0xffffff),
		  (overlay_set_color, "$g_presentation_obj_11", 0x8B0000),
          (create_button_overlay, "$g_presentation_obj_12", "@ No", tf_center_justify),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 370),
          (overlay_set_position, "$g_presentation_obj_12", pos1),
          (position_set_x, pos1, 1500),
          (position_set_y, pos1, 1500),
          (overlay_set_size, "$g_presentation_obj_12", pos1),
		  #SW - modified color
          #(overlay_set_color, "$g_presentation_obj_12", 0xffffff),
		  (overlay_set_color, "$g_presentation_obj_12", 0x8B0000),
        (try_end),

        (try_begin),
          (eq, reg56, 0),
          (eq, reg57, 0),
          (assign, reg57, 1),
        (try_end),

         #AI
        (try_begin),
          (eq, reg56, 0),
          (eq,reg60,0),
          (this_or_next|eq, reg61, 1),
          (eq, reg57, 2),
          (neq, reg57, 3),
          (assign, reg57, 3),
          (assign,reg58,":cur_time"),
        (try_end),

        (try_begin),
          (eq, reg56, 0),
          (eq,reg60,0),
          (eq, reg57, 3),
          (store_sub,":time",":cur_time",reg58),
          (ge,":time",700),
          (try_begin),
            (gt, reg52, 16),
            (le, reg52, 21),
            (assign,reg60,1),
            (display_message, "@Dealer stays.", 0x88ffff),
            (create_text_overlay, reg1, "@Stay"),
            (position_set_x, pos1, 255),
            (position_set_y, pos1, 650),
            (overlay_set_position, reg1, pos1),
            (position_set_x, pos1, 1600),
            (position_set_y, pos1, 1600),
            (overlay_set_size, reg1, pos1),
            (overlay_set_color, reg1, 0x11bb11),
          (else_try),
            (le, reg52, 16),
            (assign, ":banker_hit", 0),
            (try_begin),
              (le, reg53, 16),
              (assign, ":banker_hit", 1),
            (else_try),
              (gt, reg53, 16),
              (try_begin),
                (gt, reg53, 21),
                (assign, ":banker_hit", 1),
              (else_try),
                (le, reg53, 21),
                (store_sub,":oo", 21, reg53),
                (val_mul,":oo", 15),
                (try_begin),
                  (eq, reg61, 1),
                  (try_begin),
                    (le, reg55, 21),
                    (store_sub,":fix", reg55, reg53),
                  (else_try),
                    (gt, reg55, 21),
                    (store_sub,":fix", reg54, reg53),
                  (try_end),
                  (val_mul,":fix",10),
                  (val_add,":oo",":fix"),
                (try_end),
                (store_random_in_range,":rp",0,100),
                (try_begin),
                  (lt,":rp",":oo"),#
                  (assign, ":banker_hit", 1),
                (else_try),
                  (assign,reg60,1),
                  (display_message, "@Dealer stays.", 0x88ffff),
                  (create_text_overlay, reg1, "@Stay"),
                  (position_set_x, pos1, 255),
                  (position_set_y, pos1, 650),
                  (overlay_set_position, reg1, pos1),
                  (position_set_x, pos1, 1400),
                  (position_set_y, pos1, 1400),
                  (overlay_set_size, reg1, pos1),
                  (overlay_set_color, reg1, 0x11bb11),
                (try_end),
              (try_end),
            (try_end),
            (eq, ":banker_hit", 1),
            (assign,":reang_low","mesh_poker_heart_a"),
            (assign,":reang_high","mesh_poker_red_joker"),
            (assign,":cur_card",0),
            (try_for_range, ":unused", 0, 300),
              (eq,":cur_card",0),
              (store_random_in_range,":rp",":reang_low",":reang_high"),
              (neq,":rp",reg21),
              (neq,":rp",reg22),
              (neq,":rp",reg23),
              (neq,":rp",reg24),
              (neq,":rp",reg25),
              (neq,":rp",reg26),
              (neq,":rp",reg27),
              (neq,":rp",reg28),
              (neq,":rp",reg29),
              (neq,":rp",reg30),
              (neq,":rp",reg31),
              (neq,":rp",reg32),
              (neq,":rp",reg33),
              (neq,":rp",reg34),
              (neq,":rp",reg35),
              (neq,":rp",reg36),
              (neq,":rp",reg37),
              (neq,":rp",reg38),
              (neq,":rp",reg39),
              (assign,":cur_card",":rp"),
            (try_end),
            (try_begin),
              (eq,reg25,0),
              (assign,reg25,":cur_card"),
            (else_try),
              (eq,reg26,0),
              (assign,reg26,":cur_card"),
            (else_try),
              (eq,reg27,0),
              (assign,reg27,":cur_card"),
            (else_try),
              (eq,reg28,0),
              (assign,reg28,":cur_card"),
            (else_try),
              (eq,reg29,0),
              (assign,reg29,":cur_card"),
            (else_try),
              (eq,reg30,0),
              (assign,reg30,":cur_card"),
            (else_try),
              (eq,reg31,0),
              (assign,reg31,":cur_card"),
            (else_try),
              (eq,reg32,0),
              (assign,reg32,":cur_card"),
            (else_try),
              (eq,reg33,0),
              (assign,reg33,":cur_card"),
            (else_try),
              (eq,reg34,0),
              (assign,reg34,":cur_card"),
            (else_try),
              (eq,reg35,0),
              (assign,reg35,":cur_card"),
            (else_try),
              (eq,reg36,0),
              (assign,reg36,":cur_card"),
            (else_try),
              (eq,reg37,0),
              (assign,reg37,":cur_card"),
            (else_try),
              (eq,reg38,0),
              (assign,reg38,":cur_card"),
            (else_try),
              (eq,reg39,0),
              (assign,reg39,":cur_card"),
            (try_end),
            (store_sub,":banker_points",":cur_card",":reang_low"),
            (val_add,":banker_points",1),
            (try_begin),
              (le,":banker_points",13),
            (else_try),
              (val_mod,":banker_points",13),
              (try_begin),
                (eq,":banker_points",0),
                (assign,":banker_points",13),
              (try_end),
            (try_end),
            (val_min,":banker_points",10),
            (val_add, reg52, ":banker_points"),
            (val_add, reg53, ":banker_points"),
            (try_begin),
              (eq, reg53, reg52),
              (this_or_next|eq,":cur_card","mesh_poker_heart_a"),
              (this_or_next|eq,":cur_card","mesh_poker_spade_a"),
              (this_or_next|eq,":cur_card","mesh_poker_diamond_a"),
              (eq,":cur_card","mesh_poker_club_a"),
              #(this_or_next|eq,":cur_card",407),
              #(this_or_next|eq,":cur_card",420),
              #(this_or_next|eq,":cur_card",433),
              #(eq,":cur_card",446),
              (val_add, reg53, 10),
            (try_end),
            (create_mesh_overlay, "$g_presentation_credits_obj_5", ":cur_card"),
            (overlay_set_position, "$g_presentation_credits_obj_5", pos13),
            (overlay_set_size, "$g_presentation_credits_obj_5", pos14),
            (position_get_x,":x_p",pos11),
		    #SW - modified card overlay so they are spaced wider apart
            #(val_add,":x_p",60),
			(val_add,":x_p",90),
            (position_set_x, pos11, ":x_p"),
            #(position_move_x, pos11, 60),
            (overlay_animate_to_position, "$g_presentation_credits_obj_5",300, pos11),
          (try_end),
          (assign, reg57, 1),
          (assign,reg58,":cur_time"),
        (else_try),
          (eq,reg60,1),
          (eq, reg56, 0),
          (assign, reg57, 1),
          (assign,reg58,":cur_time"),
        (try_end),
        ]),

      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),

        (try_begin),
          (eq, ":object", "$g_presentation_obj_7"),
          (try_begin),
            (neq, reg51, ":value"),
            (assign, reg51, ":value"),
          (try_end),
          (overlay_set_val, "$g_presentation_obj_7", reg51),
          (str_store_string, s1, "@Bet: {reg51} credits"),
          (overlay_set_text, "$g_presentation_obj_8", s1),
        (else_try),
          (eq, ":object", "$g_presentation_obj_10"),
          (store_troop_gold,reg1,"trp_player"),
          (try_begin),
            (lt,reg1,reg51),
            (display_message, "@You don't have enough money.", 0x88ffff),
          (else_try),
            (troop_remove_gold, "trp_player", reg51),
            (play_sound, "snd_money_paid"),
            (position_set_x, pos1, 1400),
            (position_set_y, pos1, 1400),
            (overlay_set_position, "$g_presentation_obj_6", pos1),
            (overlay_set_position, "$g_presentation_obj_7", pos1),
            (overlay_set_position, "$g_presentation_obj_8", pos1),
            (overlay_set_position, "$g_presentation_obj_9", pos1),
            (overlay_set_position, "$g_presentation_obj_10", pos1),
            (store_troop_gold,reg1,"trp_player"),
            (str_store_string, s1, "@Bet: {reg51} credits"),
            (overlay_set_text, "$g_presentation_obj_4", s1),
            (str_store_string, s1, "@Money: {reg1} credits"),
            (overlay_set_text, "$g_presentation_obj_5", s1),
            (assign, reg50, 4),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_11"),
          (store_troop_gold,reg1,"trp_player"),
          (try_begin),
            (lt,reg1,1),
            (display_message, "@You don't have enough money.", 0x88ffff),
          (else_try),
            (presentation_set_duration, 0),
            (assign, reg50,0),
            (start_presentation, "prsnt_blackjack"),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_12"),
          (assign, "$black_jack",0),
          (assign,reg1,0),#
          (assign,reg21,0),#
          (assign,reg22,0),
          (assign,reg23,0),
          (assign,reg24,0),
          (assign,reg25,0),
          (assign,reg26,0),
          (assign,reg27,0),
          (assign,reg28,0),
          (assign,reg29,0),
          (assign,reg30,0),
          (assign,reg31,0),
          (assign,reg32,0),
          (assign,reg33,0),
          (assign,reg34,0),
          (assign,reg35,0),
          (assign,reg36,0),
          (assign,reg37,0),
          (assign,reg38,0),
          (assign,reg39,0),
          (assign, reg51, 0),
          (assign, reg50, 0),
          (assign, reg52, 0),
          (assign, reg53, 0),
          (assign, reg54, 0),
          (assign, reg55, 0),
          (assign, reg56, 0),
          (assign, reg57, 0),
          (assign, reg58, 0),
          (assign, reg60, 0),
          (assign, reg61, 0),
          (assign, reg62, 0),
          (assign, reg63, 0),
          (presentation_set_duration, 0),
        (try_end),

        (eq, reg56, 0),
        (eq, reg57, 1),
        (eq, reg61, 0),

        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),

          (assign,":reang_low","mesh_poker_heart_a"),
          (assign,":reang_high","mesh_poker_red_joker"),
          (assign,":cur_card",0),
          (try_for_range, ":unused", 0, 300),
            (eq,":cur_card",0),
            (store_random_in_range,":rp",":reang_low",":reang_high"),
            (neq,":rp",reg21),
            (neq,":rp",reg22),
            (neq,":rp",reg23),
            (neq,":rp",reg24),
            (neq,":rp",reg25),
            (neq,":rp",reg26),
            (neq,":rp",reg27),
            (neq,":rp",reg28),
            (neq,":rp",reg29),
            (neq,":rp",reg30),
            (neq,":rp",reg31),
            (neq,":rp",reg32),
            (neq,":rp",reg33),
            (neq,":rp",reg34),
            (neq,":rp",reg35),
            (neq,":rp",reg36),
            (neq,":rp",reg37),
            (neq,":rp",reg38),
            (neq,":rp",reg39),
            (assign,":cur_card",":rp"),
          (try_end),

          (try_begin),
            (eq,reg25,0),
            (assign,reg25,":cur_card"),
          (else_try),
            (eq,reg26,0),
            (assign,reg26,":cur_card"),
          (else_try),
            (eq,reg27,0),
            (assign,reg27,":cur_card"),
          (else_try),
            (eq,reg28,0),
            (assign,reg28,":cur_card"),
          (else_try),
            (eq,reg29,0),
            (assign,reg29,":cur_card"),
          (else_try),
            (eq,reg30,0),
            (assign,reg30,":cur_card"),
          (else_try),
            (eq,reg31,0),
            (assign,reg31,":cur_card"),
          (else_try),
            (eq,reg32,0),
            (assign,reg32,":cur_card"),
          (else_try),
            (eq,reg33,0),
            (assign,reg33,":cur_card"),
          (else_try),
            (eq,reg34,0),
            (assign,reg34,":cur_card"),
          (else_try),
            (eq,reg35,0),
            (assign,reg35,":cur_card"),
          (else_try),
            (eq,reg36,0),
            (assign,reg36,":cur_card"),
          (else_try),
            (eq,reg37,0),
            (assign,reg37,":cur_card"),
          (else_try),
            (eq,reg38,0),
            (assign,reg38,":cur_card"),
          (else_try),
            (eq,reg39,0),
            (assign,reg39,":cur_card"),
          (try_end),

          (store_sub,":player_points",":cur_card",":reang_low"),
          (val_add,":player_points",1),
          (try_begin),
            (le,":player_points",13),
          (else_try),
            (val_mod,":player_points",13),
            (try_begin),
              (eq,":player_points",0),
              (assign,":player_points",13),
            (try_end),
          (try_end),
          (val_min,":player_points",10),
          (val_add, reg54, ":player_points"),
          (val_add, reg55,":player_points"),
          (try_begin),
            (eq, reg55, reg54),
            (this_or_next|eq,":cur_card","mesh_poker_heart_a"),
            (this_or_next|eq,":cur_card","mesh_poker_spade_a"),
            (this_or_next|eq,":cur_card","mesh_poker_diamond_a"),
            (eq,":cur_card","mesh_poker_club_a"),
            #(this_or_next|eq,":cur_card",407),
            #(this_or_next|eq,":cur_card",420),
            #(this_or_next|eq,":cur_card",433),
            #(eq,":cur_card",446),
            (val_add, reg55, 10),
          (try_end),
          (create_mesh_overlay, "$g_presentation_credits_obj_5", ":cur_card"),
          (overlay_set_position, "$g_presentation_credits_obj_5", pos13),
          (overlay_set_size, "$g_presentation_credits_obj_5", pos14),
          (position_get_x,":x_p",pos12),
		  #SW - modified card overlay so they are spaced wider apart
          #(val_add,":x_p",60),
		  (val_add,":x_p",90),
          (position_set_x, pos12, ":x_p"),
          (overlay_animate_to_position, "$g_presentation_credits_obj_5",300, pos12),

          (try_begin),
            (eq, reg62, 1),
            (assign, reg61, 1),
            (display_message, "@You stay.", 0x88ffff),
            (create_text_overlay, reg1, "@Stay"),
            (position_set_x, pos1, 660),
            (position_set_y, pos1, 100),
            (overlay_set_position, reg1, pos1),
            (overlay_set_color, reg1, 0x11bb11),
            (create_mesh_overlay, reg1, reg21),
            (overlay_set_position, reg1, pos60),
            (overlay_set_size, reg1, pos14),
          (try_end),

          (assign, reg57, 2),
        (else_try),
          (eq, ":object", "$g_presentation_obj_2"),
          (display_message, "@You stay.", 0x88ffff),
          (create_text_overlay, reg1, "@Stay"),
          (position_set_x, pos1, 660),
          (position_set_y, pos1, 100),
          (overlay_set_position, reg1, pos1),
          (overlay_set_color, reg1, 0x11bb11),
          (create_mesh_overlay, reg1, reg21),
          (overlay_set_position, reg1, pos60),
          (overlay_set_size, reg1, pos14),
          (assign, reg61, 1),
          (assign, reg57, 2),
        (else_try),
          (eq, ":object", "$g_presentation_obj_3"),
          (try_begin),
            (store_troop_gold,reg1,"trp_player"),
            (lt,reg1,reg51),
            (display_message, "@You don't have enough money.", 0x88ffff),
          (else_try),
            (eq, reg25, 0),
            (assign, reg62, 1),
            (display_message, "@Double bets! You can only get one card again.", 0x88ffff),

            (create_text_overlay, reg1, "@Double"),
            (position_set_x, pos1, 660),
            (position_set_y, pos1, 40),
            (overlay_set_position, reg1, pos1),
            (overlay_set_color, reg1, 0x11bb11),

            (troop_remove_gold, "trp_player", reg51),
            (play_sound, "snd_money_paid"),
            (val_mul, reg51, 2),
            (store_troop_gold,reg1,"trp_player"),
            (str_store_string, s1, "@Bet: {reg51} credits"),
            (overlay_set_text, "$g_presentation_obj_4", s1),
            (str_store_string, s1, "@Money: {reg1} credits"),
            (overlay_set_text, "$g_presentation_obj_5", s1),
          (else_try),
            (display_message, "@Not right now.", 0x88ffff),
          (try_end),
        (try_end),
        ]),
     ]),

# END OF BLACKJACK MOD

#SW - integrated companions_overview
##################JEDEDIAH Q COMPANIONS OVERVIEW########################################################################################

  ("jq_companions_quickview", 0, mesh_cpov, #mesh_cpov
   [
     (ti_on_presentation_load,
      [
	(presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
	(assign, "$g_jq_Return_to_menu", 1013),#jibberish value, just for assign

	#Back to menu - graphical button
	(create_game_button_overlay, "$g_jq_Return_to_menu", "@_Return to menu_"),
	(position_set_x, pos1, 500),
        (position_set_y, pos1, 23),
        (overlay_set_position, "$g_jq_Return_to_menu", pos1),

	###HEADLINES###
	(assign, ":x_poshl", 165),
 	(assign, ":y_pos", 581),
 	(assign, ":jq_size", 0),
	(position_set_x, ":jq_size", 720),
    	(position_set_y, ":jq_size", 775),

 (create_text_overlay, reg2, "@Strength", tf_center_justify),
    		(overlay_set_size, reg2, ":jq_size"),
 		(position_set_x, pos1, ":x_poshl"),
          	(position_set_y, pos1, ":y_pos"),
          	(overlay_set_position, reg2, pos1),

(create_text_overlay, reg2, "@Riding", tf_center_justify),
       	(overlay_set_size, reg2, ":jq_size"),
		(val_add, ":x_poshl", 55),
 		(position_set_x, pos1, ":x_poshl"),
          	(overlay_set_position, reg2, pos1),

(create_text_overlay, reg2, "@Pdraw", tf_center_justify),
        (overlay_set_size, reg2, ":jq_size"),
 		(val_add, ":x_poshl", 55),
 		(position_set_x, pos1, ":x_poshl"),
          	(overlay_set_position, reg2, pos1),

(create_text_overlay, reg2, "@Pthrow", tf_center_justify),
       	(overlay_set_size, reg2, ":jq_size"),
 		(val_add, ":x_poshl", 55),
 		(position_set_x, pos1, ":x_poshl"),
          	(overlay_set_position, reg2, pos1),

(create_text_overlay, reg2, "@1-hand", tf_center_justify),
       	(overlay_set_size, reg2, ":jq_size"),
 		(val_add, ":x_poshl", 55),
 		(position_set_x, pos1, ":x_poshl"),
          	(overlay_set_position, reg2, pos1),

(create_text_overlay, reg2, "@2-hand", tf_center_justify),
       	(overlay_set_size, reg2, ":jq_size"),
 		(val_add, ":x_poshl", 55),
 		(position_set_x, pos1, ":x_poshl"),
          	(overlay_set_position, reg2, pos1),

(create_text_overlay, reg2, "@Polearm", tf_center_justify),
       	(overlay_set_size, reg2, ":jq_size"),
 		(val_add, ":x_poshl", 55),
 		(position_set_x, pos1, ":x_poshl"),
          	(overlay_set_position, reg2, pos1),

(create_text_overlay, reg2, "@Archery", tf_center_justify),
       (overlay_set_size, reg2, ":jq_size"),
 		(val_add, ":x_poshl", 55),
 		(position_set_x, pos1, ":x_poshl"),
          	(overlay_set_position, reg2, pos1),

(create_text_overlay, reg2, "@ X-bow ", tf_center_justify),
       	(overlay_set_size, reg2, ":jq_size"),
 		(val_add, ":x_poshl", 55),
 		(position_set_x, pos1, ":x_poshl"),
          	(overlay_set_position, reg2, pos1),

(create_text_overlay, reg2, "@Throwing ", tf_center_justify),
       	(overlay_set_size, reg2, ":jq_size"),
 		(val_add, ":x_poshl", 55),
 		(position_set_x, pos1, ":x_poshl"),
          	(overlay_set_position, reg2, pos1),

(create_text_overlay, reg2, "@  Firearms", tf_center_justify),
	(position_set_x, ":jq_size", 640),
       	(overlay_set_size, reg2, ":jq_size"),
 		(val_add, ":x_poshl", 55),
 		(position_set_x, pos1, ":x_poshl"),
          	(overlay_set_position, reg2, pos1),

(create_text_overlay, reg2, "@ Mode", tf_center_justify),
	(position_set_x, ":jq_size", 700),
       	(overlay_set_size, reg2, ":jq_size"),
		(val_add, ":x_poshl", 55),
 		(position_set_x, pos1, ":x_poshl"),
          	(overlay_set_position, reg2, pos1),

(create_text_overlay, reg2, "@(to next lvl)", tf_center_justify),
	(position_set_x, ":jq_size", 640),
    	(position_set_y, ":jq_size", 750),
	(overlay_set_size, reg2, ":jq_size"),
 		(val_add, ":x_poshl", 60),
 		(position_set_x, pos1, ":x_poshl"),
        	(overlay_set_position, reg2, pos1),

        (assign, ":jq_value", 0),
	(assign, "$jq_nr", 0),
    	(assign, ":jq_size", 0),
	(assign, ":x_pos", 25),
        (assign, ":y_pos", 547),
     	(str_clear, s9),
	(assign, ":jq_col", 0x000000),
	(str_clear, s8),

	#Version info
	(create_text_overlay, "$g_jq_version", "@_1.0_", tf_left_align),
	(position_set_x, pos1, 963),
        (position_set_y, pos1, 735),
        (overlay_set_position, "$g_jq_version", pos1),
	(position_set_x, pos1, 700),
        (position_set_y, pos1, 700),
	(overlay_set_size, "$g_jq_version", pos1),
	(overlay_set_color, "$g_jq_version", 0xFFFFFFFF),

	#Equipment info
	(create_text_overlay, "$g_jq_equipment_status", "@If you can see this, buy a new cpu.", tf_center_justify), #Hero name
	(create_text_overlay, "$g_jq_equip_hlines", "@-Weapons-                                                              -Equipment-", tf_left_align),
	(create_text_overlay, "$g_jq_equipment_item0", "@________________n/a________________", tf_center_justify), #item 0
	(create_text_overlay, "$g_jq_equipment_item1", "@________________n/a________________", tf_center_justify), #item 1
	(create_text_overlay, "$g_jq_equipment_item2", "@________________n/a________________", tf_center_justify), #item 2
	(create_text_overlay, "$g_jq_equipment_item3", "@________________n/a________________", tf_center_justify), #item 3
	(create_text_overlay, "$g_jq_equipment_item4", "@________________n/a________________", tf_center_justify), #head
	(create_text_overlay, "$g_jq_equipment_item5", "@________________n/a________________", tf_center_justify), #body
	(create_text_overlay, "$g_jq_equipment_item6", "@________________n/a________________", tf_center_justify), #feet
	(create_text_overlay, "$g_jq_equipment_item7", "@________________n/a________________", tf_center_justify), #hands
#	(create_text_overlay, "$g_jq_equipment_item8", "@________________n/a________________", tf_center_justify), #horse - not in use for now.

	#Hero name centered at the top
	(position_set_x, pos1, 500),
	(position_set_y, pos1, 630),
	(overlay_set_position, "$g_jq_equipment_status", pos1),
	(position_set_x, pos1, 800),
	(position_set_y, pos1, 850),
	(overlay_set_size, "$g_jq_equipment_status", pos1),
	(overlay_set_color, "$g_jq_equipment_status", 0xFFf1f1ff),

	# Weapons and Armor headlines
	(position_set_x, pos1, 210),
	(position_set_y, pos1, 700),
	(overlay_set_position, "$g_jq_equip_hlines", pos1),
	(position_set_x, pos1, 1000),
	(position_set_y, pos1, 800),
	(overlay_set_size, "$g_jq_equip_hlines", pos1),
	(overlay_set_color, "$g_jq_equip_hlines", 0xFFd0d0ff),

	# item 0-3
	(position_set_x, pos1, 255),
	(position_set_y, pos1, 681),
	(overlay_set_position, "$g_jq_equipment_item0", pos1),
	(position_set_y, pos1, 664),
	(overlay_set_position, "$g_jq_equipment_item1", pos1),
	(position_set_y, pos1, 647),
	(overlay_set_position, "$g_jq_equipment_item2", pos1),
	(position_set_y, pos1, 630),
	(overlay_set_position, "$g_jq_equipment_item3", pos1),

	#new column head, body, feet, hands
	(position_set_x, pos1, 740),
        (position_set_y, pos1, 681),
        (overlay_set_position, "$g_jq_equipment_item4", pos1),
	(position_set_y, pos1, 664),
	(overlay_set_position, "$g_jq_equipment_item5", pos1),
	(position_set_y, pos1, 647),
	(overlay_set_position, "$g_jq_equipment_item6", pos1),
	(position_set_y, pos1, 630),
	(overlay_set_position, "$g_jq_equipment_item7", pos1),

	(position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
	(overlay_set_size, "$g_jq_equipment_status", pos1),
	(overlay_set_size, "$g_jq_equipment_item0", pos1),
	(overlay_set_color, "$g_jq_equipment_item0", 0xFFFFFFFF),
	(overlay_set_size, "$g_jq_equipment_item1", pos1),
	(overlay_set_color, "$g_jq_equipment_item1", 0xFFFFFFFF),
	(overlay_set_size, "$g_jq_equipment_item2", pos1),
	(overlay_set_color, "$g_jq_equipment_item2", 0xFFFFFFFF),
	(overlay_set_size, "$g_jq_equipment_item3", pos1),
	(overlay_set_color, "$g_jq_equipment_item3", 0xFFFFFFFF),
	(overlay_set_size, "$g_jq_equipment_item4", pos1),
	(overlay_set_color, "$g_jq_equipment_item4", 0xFFFFFFFF),
	(overlay_set_size, "$g_jq_equipment_item5", pos1),
	(overlay_set_color, "$g_jq_equipment_item5", 0xFFFFFFFF),
	(overlay_set_size, "$g_jq_equipment_item6", pos1),
	(overlay_set_color, "$g_jq_equipment_item6", 0xFFFFFFFF),
	(overlay_set_size, "$g_jq_equipment_item7", pos1),
	(overlay_set_color, "$g_jq_equipment_item7", 0xFFFFFFFF),

### Loop begins here. Printing out hero names and stats. ####################################

 (try_for_range, "$jq_dude", companions_begin, companions_end),

   	(main_party_has_troop, "$jq_dude"),
    	(troop_set_slot, "trp_temp_array_c", "$jq_nr", "$jq_dude"),
	(val_add, "$jq_nr", 1),
   	(str_store_troop_name, s9, "$jq_dude"),
 	(str_store_string, s1, "@{s9}"),
	(create_text_overlay, reg1, s1, tf_left_align),
        (position_set_x, pos3, ":x_pos"),
        (position_set_y, pos3, ":y_pos"),
        (overlay_set_position, reg1, pos3),
	(position_set_x, pos3, 750),
    	(position_set_y, pos3, 850),
    	(overlay_set_size, reg1, pos3),

	#Same name, right margin
        (create_text_overlay, reg2, s1, tf_left_align),
        (position_set_x, pos3, 880),
        (position_set_y, pos3, ":y_pos"),
        (overlay_set_position, reg2, pos3),
	(position_set_x, pos3, 750),
    	(position_set_y, pos3, 850),
    	(overlay_set_size, reg2, pos3),

	(assign, ":x_poshl", 165),
	(assign, ":jq_size", 0),
	(position_set_x, ":jq_size", 750),
    	(position_set_y, ":jq_size", 850),

#STRENGTH
		(store_attribute_level, reg1, "$jq_dude", ca_strength),
  		(str_store_string, s1, "@{reg1}"),
		(create_text_overlay, ":jqreg", s1, tf_center_justify),
	    	(overlay_set_size, ":jqreg", ":jq_size"),
		(position_set_x, pos1, ":x_poshl"),
          	(position_set_y, pos1, ":y_pos"),
          	(overlay_set_position, ":jqreg", pos1),
		(overlay_set_color, ":jqreg", ":jq_col"),
#RIDING
		(store_skill_level, reg1, "skl_riding", "$jq_dude"),
		(str_store_string, s1, "@{reg1}"),
		(val_add, ":x_poshl", 55),
		(create_text_overlay, ":jqreg", s1, tf_center_justify),
	    	(overlay_set_size, ":jqreg", ":jq_size"),
		(position_set_x, pos1, ":x_poshl"),
          	(position_set_y, pos1, ":y_pos"),
          	(overlay_set_position, ":jqreg", pos1),
		(overlay_set_color, ":jqreg", ":jq_col"),
#POWERDRAW
		(store_skill_level, reg1, "skl_power_draw", "$jq_dude"),
		(str_store_string, s1, "@{reg1}"),
		(val_add, ":x_poshl", 55),
		(create_text_overlay, ":jqreg", s1, tf_center_justify),
	    	(overlay_set_size, ":jqreg", ":jq_size"),
		(position_set_x, pos1, ":x_poshl"),
          	(position_set_y, pos1, ":y_pos"),
          	(overlay_set_position, ":jqreg", pos1),
		(overlay_set_color, ":jqreg", ":jq_col"),
#POWERTHROW
		(store_skill_level, reg1, "skl_power_throw", "$jq_dude"),
		(str_store_string, s1, "@{reg1}"),
		(val_add, ":x_poshl", 55),
		(create_text_overlay, ":jqreg", s1, tf_center_justify),
	    	(overlay_set_size, ":jqreg", ":jq_size"),
		(position_set_x, pos1, ":x_poshl"),
          	(position_set_y, pos1, ":y_pos"),
          	(overlay_set_position, ":jqreg", pos1),
		(overlay_set_color, ":jqreg", ":jq_col"),
#ONE-HANDED WEAPS
		(store_proficiency_level,  reg1, "$jq_dude", wpt_one_handed_weapon),
		(str_store_string, s1, "@{reg1}"),
		(val_add, ":x_poshl", 55),
		(create_text_overlay, ":jqreg", s1, tf_center_justify),
	    	(overlay_set_size, ":jqreg", ":jq_size"),
		(position_set_x, pos1, ":x_poshl"),
         	(position_set_y, pos1, ":y_pos"),
         	(overlay_set_position, ":jqreg", pos1),
		(overlay_set_color, ":jqreg", ":jq_col"),

#TWO-HANDED WEAPS
		(store_proficiency_level,  reg1, "$jq_dude", wpt_two_handed_weapon),
		(str_store_string, s1, "@{reg1}"),
		(val_add, ":x_poshl", 55),
		(create_text_overlay, ":jqreg", s1, tf_center_justify),
	    	(overlay_set_size, ":jqreg", ":jq_size"),
		(position_set_x, pos1, ":x_poshl"),
         	(position_set_y, pos1, ":y_pos"),
         	(overlay_set_position, ":jqreg", pos1),
		(overlay_set_color, ":jqreg", ":jq_col"),
#POLEARMS
		(store_proficiency_level,  reg1, "$jq_dude", wpt_polearm),
		(str_store_string, s1, "@{reg1}"),
		(val_add, ":x_poshl", 55),
		(create_text_overlay, ":jqreg", s1, tf_center_justify),
	    	(overlay_set_size, ":jqreg", ":jq_size"),
		(position_set_x, pos1, ":x_poshl"),
         	(position_set_y, pos1, ":y_pos"),
         	(overlay_set_position, ":jqreg", pos1),
		(overlay_set_color, ":jqreg", ":jq_col"),
#ARCHERY
		(store_proficiency_level,  reg1, "$jq_dude", wpt_archery),
		(str_store_string, s1, "@{reg1}"),
		(val_add, ":x_poshl", 55),
		(create_text_overlay, ":jqreg", s1, tf_center_justify),
	    	(overlay_set_size, ":jqreg", ":jq_size"),
		(position_set_x, pos1, ":x_poshl"),
         	(position_set_y, pos1, ":y_pos"),
         	(overlay_set_position, ":jqreg", pos1),
		(overlay_set_color, ":jqreg", ":jq_col"),
#CROSSBOW
		(store_proficiency_level,  reg1, "$jq_dude", wpt_crossbow),
		(str_store_string, s1, "@{reg1}"),
		(val_add, ":x_poshl", 55),
		(create_text_overlay, ":jqreg", s1, tf_center_justify),
	    	(overlay_set_size, ":jqreg", ":jq_size"),
		(position_set_x, pos1, ":x_poshl"),
         	(position_set_y, pos1, ":y_pos"),
         	(overlay_set_position, ":jqreg", pos1),
		(overlay_set_color, ":jqreg", ":jq_col"),
#THROWING
		(store_proficiency_level,  reg1, "$jq_dude", wpt_throwing),
		(str_store_string, s1, "@{reg1}"),
		(val_add, ":x_poshl", 55),
		(create_text_overlay, ":jqreg", s1, tf_center_justify),
	    	(overlay_set_size, ":jqreg", ":jq_size"),
		(position_set_x, pos1, ":x_poshl"),
         	(position_set_y, pos1, ":y_pos"),
         	(overlay_set_position, ":jqreg", pos1),
		(overlay_set_color, ":jqreg", ":jq_col"),
#FIREARMS
		(store_proficiency_level,  reg1, "$jq_dude", wpt_firearm),
		(str_store_string, s1, "@{reg1}"),
		(val_add, ":x_poshl", 55),
		(create_text_overlay, ":jqreg", s1, tf_center_justify),
	    	(overlay_set_size, ":jqreg", ":jq_size"),
		(position_set_x, pos1, ":x_poshl"),
         	(position_set_y, pos1, ":y_pos"),
         	(overlay_set_position, ":jqreg", pos1),
		(overlay_set_color, ":jqreg", ":jq_col"),
#WALKSorRIDES
		(try_begin),
        	(troop_is_mounted,  "$jq_dude"),
		(str_store_string, s1, "@Rides"),
		(assign, ":jq_col", 0x0000FF),
		(else_try),
		(str_store_string, s1, "@Walks"),
            	(try_end),
		(val_add, ":x_poshl", 41),
		(create_text_overlay, ":jqreg", s1, tf_left_align),
	    	(overlay_set_size, ":jqreg", ":jq_size"),
		(position_set_x, pos1, ":x_poshl"),
         	(position_set_y, pos1, ":y_pos"),
         	(overlay_set_position, ":jqreg", pos1),
		(overlay_set_color, ":jqreg", ":jq_col"),
		(assign, ":jq_col", 0x000000),
#POINTS 2 NEXT LVL
		(troop_get_xp, ":jq_value", "$jq_dude"),
		(call_script, "script_jq_xp_to_next_lvl", ":jq_value"),
		(val_add, ":x_poshl", 64),
		(create_text_overlay, ":jqreg", s1, tf_left_align),
	    	(overlay_set_size, ":jqreg", ":jq_size"),
		(position_set_x, pos1, ":x_poshl"),
          	(position_set_y, pos1, ":y_pos"),
          	(overlay_set_position, ":jqreg", pos1),

          	(assign, ":x_pos", 25),
	  	(assign, ":x_poshl", 165),
   	  	(val_sub, ":y_pos", 23),#linebreak
	(ge, ":x_pos", 950),
          	(assign, ":x_pos", 25),
          	(val_sub, ":y_pos", 23),
  (try_end),

#try-for-companions-loop ends here ####################################

#--TROOP SELECTORS--------------------------------------------------------------------------------------------#

(position_set_x, ":jq_size", 49350),
(position_set_y, ":jq_size", 1000),
(position_set_x, pos1, 0),
(position_set_y, pos1, -200),

#Create buttons (even if the equiv. hero doesn't exist)
#If I don't do this, the 'Return'-button will take over the memory adress. Yup i suck at this.

(create_image_button_overlay, "$g_jq_selector_1", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_1", pos1),
(create_image_button_overlay, "$g_jq_selector_2", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_2", pos1),
(create_image_button_overlay, "$g_jq_selector_3", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_3", pos1),
(create_image_button_overlay, "$g_jq_selector_4", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_4", pos1),
(create_image_button_overlay, "$g_jq_selector_5", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_5", pos1),
(create_image_button_overlay, "$g_jq_selector_6", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_6", pos1),
(create_image_button_overlay, "$g_jq_selector_7", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_7", pos1),
(create_image_button_overlay, "$g_jq_selector_8", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_8", pos1),
(create_image_button_overlay, "$g_jq_selector_9", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_9", pos1),

(create_image_button_overlay, "$g_jq_selector_10", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_10", pos1),

(create_image_button_overlay, "$g_jq_selector_11", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_11", pos1),

(create_image_button_overlay, "$g_jq_selector_12", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_12", pos1),

(create_image_button_overlay, "$g_jq_selector_13", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_13", pos1),

(create_image_button_overlay, "$g_jq_selector_14", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_14", pos1),

(create_image_button_overlay, "$g_jq_selector_15", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_15", pos1),

(create_image_button_overlay, "$g_jq_selector_16", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_16", pos1),

(create_image_button_overlay, "$g_jq_selector_17", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_17", pos1),

(create_image_button_overlay, "$g_jq_selector_18", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_18", pos1),

(create_image_button_overlay, "$g_jq_selector_19", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_19", pos1),

(create_image_button_overlay, "$g_jq_selector_20", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_20", pos1),

#Create buttons end

(try_begin),
(gt, "$jq_nr", 0),
    (position_set_x, pos1, 5),
    (position_set_y, pos1, 547),
    (overlay_set_position, "$g_jq_selector_1", pos1),
    	(overlay_set_size, "$g_jq_selector_1", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_1", 0),
  	(overlay_set_color, "$g_jq_selector_1", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 1),
    (position_set_y, pos1, 524),
    (overlay_set_position, "$g_jq_selector_2", pos1),
    	(overlay_set_size, "$g_jq_selector_2", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_2", 0),
  	(overlay_set_color, "$g_jq_selector_2", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 2),
    (position_set_y, pos1, 501),
    (overlay_set_position, "$g_jq_selector_3", pos1),
    	(overlay_set_size, "$g_jq_selector_3", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_3", 0),
  	(overlay_set_color, "$g_jq_selector_3", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 3),
    (position_set_y, pos1, 478),
    (overlay_set_position, "$g_jq_selector_4", pos1),
    	(overlay_set_size, "$g_jq_selector_4", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_4", 0),
  	(overlay_set_color, "$g_jq_selector_4", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 4),
    (position_set_y, pos1, 455),
    (overlay_set_position, "$g_jq_selector_5", pos1),
    	(overlay_set_size, "$g_jq_selector_5", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_5", 0),
  	(overlay_set_color, "$g_jq_selector_5", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 5),
    (position_set_y, pos1, 432),
    (overlay_set_position, "$g_jq_selector_6", pos1),
    	(overlay_set_size, "$g_jq_selector_6", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_6", 0),
  	(overlay_set_color, "$g_jq_selector_6", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 6),
    (position_set_y, pos1, 409),
    (overlay_set_position, "$g_jq_selector_7", pos1),
    	(overlay_set_size, "$g_jq_selector_7", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_7", 0),
  	(overlay_set_color, "$g_jq_selector_7", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 7),
    (position_set_y, pos1, 386),
    (overlay_set_position, "$g_jq_selector_8", pos1),
    	(overlay_set_size, "$g_jq_selector_8", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_8", 0),
  	(overlay_set_color, "$g_jq_selector_8", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 8),
    (position_set_y, pos1, 363),
    (overlay_set_position, "$g_jq_selector_9", pos1),
    	(overlay_set_size, "$g_jq_selector_9", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_9", 0),
  	(overlay_set_color, "$g_jq_selector_9", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 9),
    (position_set_y, pos1, 340),
    (overlay_set_position, "$g_jq_selector_10", pos1),
    	(overlay_set_size, "$g_jq_selector_10", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_10", 0),
  	(overlay_set_color, "$g_jq_selector_10", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 10),
    (position_set_y, pos1, 317),
    (overlay_set_position, "$g_jq_selector_11", pos1),
    	(overlay_set_size, "$g_jq_selector_11", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_11", 0),
  	(overlay_set_color, "$g_jq_selector_11", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 11),
    (position_set_y, pos1, 294),
    (overlay_set_position, "$g_jq_selector_12", pos1),
    	(overlay_set_size, "$g_jq_selector_12", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_12", 0),
  	(overlay_set_color, "$g_jq_selector_12", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 12),
    (position_set_y, pos1, 271),
    (overlay_set_position, "$g_jq_selector_13", pos1),
    	(overlay_set_size, "$g_jq_selector_13", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_13", 0),
  	(overlay_set_color, "$g_jq_selector_13", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 13),
    (position_set_y, pos1, 248),
    (overlay_set_position, "$g_jq_selector_14", pos1),
    	(overlay_set_size, "$g_jq_selector_14", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_14", 0),
  	(overlay_set_color, "$g_jq_selector_14", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 14),
    (position_set_y, pos1, 225),
    (overlay_set_position, "$g_jq_selector_15", pos1),
    	(overlay_set_size, "$g_jq_selector_15", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_15", 0),
  	(overlay_set_color, "$g_jq_selector_15", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 15),
    (position_set_y, pos1, 202),
    (overlay_set_position, "$g_jq_selector_16", pos1),
    	(overlay_set_size, "$g_jq_selector_16", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_16", 0),
  	(overlay_set_color, "$g_jq_selector_16", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 16),
    (position_set_y, pos1, 179),
    (overlay_set_position, "$g_jq_selector_17", pos1),
    	(overlay_set_size, "$g_jq_selector_17", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_17", 0),
  	(overlay_set_color, "$g_jq_selector_17", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 17),
    (position_set_y, pos1, 156),
    (overlay_set_position, "$g_jq_selector_18", pos1),
    	(overlay_set_size, "$g_jq_selector_18", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_18", 0),
  	(overlay_set_color, "$g_jq_selector_18", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 18),
    (position_set_y, pos1, 133),
    (overlay_set_position, "$g_jq_selector_19", pos1),
    	(overlay_set_size, "$g_jq_selector_19", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_19", 0),
  	(overlay_set_color, "$g_jq_selector_19", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 19),
    (position_set_y, pos1, 110),
    (overlay_set_position, "$g_jq_selector_20", pos1),
    	(overlay_set_size, "$g_jq_selector_20", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_20", 0),
  	(overlay_set_color, "$g_jq_selector_20", 0xFFFF00),
(try_end),

#TROOP SELECTORS END #-----------------------------------------------------------------------------------------------#

	(troop_get_slot, "$jq_dude", "trp_temp_array_c", 0),# automatically shows the 1st troop's equipment
	(call_script, "script_jq_extra_stats", "$jq_dude"), # automatically shows the 1st troop's equipment
   ]),

#Check for buttonpress
     (ti_on_presentation_event_state_change,

      [
        (store_trigger_param_1, ":espresso"),
        (try_begin),
 	    	(eq, ":espresso", "$g_jq_Return_to_menu"), # pressed 'Return to menu'
		(presentation_set_duration, 0),
	(else_try),
		(eq, ":espresso", "$g_jq_selector_1"),
  		#(troop_get_slot, "$jq_dude", "trp_temp_array_c", 0),#this and next line is for custom made stuff
	 	#(call_script, "script_insert_your_own_script_here", "$jq_dude"),
#(create_mesh_overlay_with_tableau_material, "$jq_portrait", -1, "tableau_troop_note_mesh", "$jq_dude", pos0),# Doesn't clear previous mesh. No known fix.
	(else_try),
		(eq, ":espresso", "$g_jq_selector_2"),
  		#(troop_get_slot, "$jq_dude", "trp_temp_array_c", 1),#this and next line is for custom made stuff
	 	#(call_script, "script_insert_your_own_script_here", "$jq_dude"),
	(else_try),
		(eq, ":espresso", "$g_jq_selector_3"),
  		#(troop_get_slot, "$jq_dude", "trp_temp_array_c", 2),#this and next line is for custom made stuff
	 	#(call_script, "script_insert_your_own_script_here", "$jq_dude"),
	(else_try),
		(eq, ":espresso", "$g_jq_selector_4"),
  		#(troop_get_slot, "$jq_dude", "trp_temp_array_c", 3),#this and next line is for custom made stuff
	 	#(call_script, "script_insert_your_own_script_here", "$jq_dude"),
	(else_try),
		(eq, ":espresso", "$g_jq_selector_5"),
  		(troop_get_slot, "$jq_dude", "trp_temp_array_c", 4),#this and next line is for custom made stuff
	 	#(call_script, "script_insert_your_own_script_here", "$jq_dude"),
	(else_try),
		(eq, ":espresso", "$g_jq_selector_6"),
  		#(troop_get_slot, "$jq_dude", "trp_temp_array_c", 5),#this and next line is for custom made stuff
	 	#(call_script, "script_insert_your_own_script_here", "$jq_dude"),
	(else_try),
		(eq, ":espresso", "$g_jq_selector_7"),
  		#(troop_get_slot, "$jq_dude", "trp_temp_array_c", 6),#this and next line is for custom made stuff
	 	#(call_script, "script_insert_your_own_script_here", "$jq_dude"),
	(else_try),
		(eq, ":espresso", "$g_jq_selector_8"),
  		#(troop_get_slot, "$jq_dude", "trp_temp_array_c", 7),#this and next line is for custom made stuff
	 	#(call_script, "script_insert_your_own_script_here", "$jq_dude"),
	(else_try),
		(eq, ":espresso", "$g_jq_selector_9"),
  		#(troop_get_slot, "$jq_dude", "trp_temp_array_c", 8),#this and next line is for custom made stuff
	 	#(call_script, "script_insert_your_own_script_here", "$jq_dude"),
	(else_try),
		(eq, ":espresso", "$g_jq_selector_10"),
  		#(troop_get_slot, "$jq_dude", "trp_temp_array_c", 9),#this and next line is for custom made stuff
	 	#(call_script, "script_insert_your_own_script_here", "$jq_dude"),
		# and so on...until selector_20...
        (try_end),
	(try_begin),
	  (eq, "$jq_in_market_menu", 0),
	  (jump_to_menu, "mnu_reports"),
	(else_try),
	  	(eq, "$jq_in_market_menu", 1),
		(jump_to_menu,"mnu_town_trade"),
        (try_end),

	        ]),
#IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII#
## mouse-over start ##
# Trigger Param 1: id of the object that mouse enters/leaves
# Trigger Param 2: 0 if mouse enters, 1 if mouse leaves

(ti_on_presentation_mouse_enter_leave,
       [(store_trigger_param_1, ":espresso"),
        (store_trigger_param_2, ":jq_enter_leave"),
        (try_begin),
          	    (eq, ":espresso", "$g_jq_selector_1"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_1", 50, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 0),
	 		(call_script, "script_jq_extra_stats", "$jq_dude"),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_1", 100, 0),
                      	(try_end),
        	(else_try),
		    (eq, ":espresso", "$g_jq_selector_2"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_2", 50, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 1),
	 		(call_script, "script_jq_extra_stats", "$jq_dude"),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_2", 100, 0),
                      	(try_end),
        	(else_try),
		    (eq, ":espresso", "$g_jq_selector_3"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_3", 50, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 2),
	 		(call_script, "script_jq_extra_stats", "$jq_dude"),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_3", 100, 0),
                      	(try_end),
		(else_try),
		    (eq, ":espresso", "$g_jq_selector_4"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_4", 50, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 3),
	 		(call_script, "script_jq_extra_stats", "$jq_dude"),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_4", 100, 0),
                      	(try_end),
		(else_try),
		    (eq, ":espresso", "$g_jq_selector_5"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_5", 50, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 4),
	 		(call_script, "script_jq_extra_stats", "$jq_dude"),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_5", 50, 0),
                      	(try_end),
		(else_try),
		    (eq, ":espresso", "$g_jq_selector_6"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_6", 50, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 5),
	 		(call_script, "script_jq_extra_stats", "$jq_dude"),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_6", 50, 0),
                      	(try_end),
        	(else_try),
		    (eq, ":espresso", "$g_jq_selector_7"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_7", 50, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 6),
	 		(call_script, "script_jq_extra_stats", "$jq_dude"),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_7", 50, 0),
                      	(try_end),
		(else_try),
		    (eq, ":espresso", "$g_jq_selector_8"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_8", 50, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 7),
	 		(call_script, "script_jq_extra_stats", "$jq_dude"),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_8", 50, 0),
                      	(try_end),
		(else_try),
		    (eq, ":espresso", "$g_jq_selector_9"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_9", 50, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 8),
	 		(call_script, "script_jq_extra_stats", "$jq_dude"),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_9", 50, 0),
                      	(try_end),
		(else_try),
		    (eq, ":espresso", "$g_jq_selector_10"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_10", 50, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 9),
	 		(call_script, "script_jq_extra_stats", "$jq_dude"),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_10", 50, 0),
                      	(try_end),
		(else_try),
		   (eq, ":espresso", "$g_jq_selector_11"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_11", 50, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 10),
	 		(call_script, "script_jq_extra_stats", "$jq_dude"),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_11", 50, 0),
                      	(try_end),
        	(else_try),
		    (eq, ":espresso", "$g_jq_selector_12"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_12", 50, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 11),
	 		(call_script, "script_jq_extra_stats", "$jq_dude"),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_12", 50, 0),
                      	(try_end),
        	(else_try),
		    (eq, ":espresso", "$g_jq_selector_13"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_13", 50, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 12),
	 		(call_script, "script_jq_extra_stats", "$jq_dude"),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_13", 50, 0),
                      	(try_end),
		(else_try),
		    (eq, ":espresso", "$g_jq_selector_14"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_14", 50, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 13),
	 		(call_script, "script_jq_extra_stats", "$jq_dude"),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_14", 50, 0),
                      	(try_end),
		(else_try),
		    (eq, ":espresso", "$g_jq_selector_15"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_15", 50, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 14),
	 		(call_script, "script_jq_extra_stats", "$jq_dude"),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_15", 50, 0),
                      	(try_end),
		(else_try),
		    (eq, ":espresso", "$g_jq_selector_16"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_16", 50, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 15),
	 		(call_script, "script_jq_extra_stats", "$jq_dude"),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_16", 50, 0),
                      	(try_end),
        	(else_try),
		    (eq, ":espresso", "$g_jq_selector_17"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_17", 50, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 16),
	 		(call_script, "script_jq_extra_stats", "$jq_dude"),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_17", 50, 0),
                      	(try_end),
		(else_try),
		    (eq, ":espresso", "$g_jq_selector_18"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_18", 50, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 17),
	 		(call_script, "script_jq_extra_stats", "$jq_dude"),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_18", 50, 0),
                      	(try_end),
		(else_try),
		    (eq, ":espresso", "$g_jq_selector_19"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_19", 50, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 18),
	 		(call_script, "script_jq_extra_stats", "$jq_dude"),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_19", 50, 0),
                      	(try_end),
		(else_try),
		    (eq, ":espresso", "$g_jq_selector_20"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_20", 50, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 19),
	 		(call_script, "script_jq_extra_stats", "$jq_dude"),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_20", 50, 0),
                      	(try_end),

         (try_end),
        ]),
## mouse-over end ##
#IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII#
 (ti_on_presentation_run,
       [(try_begin),
          (key_clicked, key_escape),
	  (eq, "$jq_in_market_menu", 0),
	  (presentation_set_duration, 0),
	  (jump_to_menu, "mnu_reports"),
	(else_try),
		(key_clicked, key_escape),
	  	(eq, "$jq_in_market_menu", 1),
  	        (presentation_set_duration, 0),
		(jump_to_menu,"mnu_town_trade"),
        (try_end),

        ]),


     ]),

##################JEDEDIAH Q COMPANIONS OVERVIEW END########################################################################################

#SW starship start

("starship", 0,mesh_load_window, [
	(ti_on_presentation_load,[

    # #Little Pos Helper by Kuba begin
	# #http://forums.taleworlds.com/index.php/topic,8652.msg2373733.html#msg2373733
	# (str_store_string, s1, "@DEBUG: x = 00, y = 00"),
    # (create_text_overlay, "$g_little_pos_helper", s1),
    # (overlay_set_color, "$g_little_pos_helper", 0xFFFFFFFF),
	# (set_fixed_point_multiplier, 1000),
    # (position_set_x, pos1, 100),
    # (position_set_y, pos1, 100),
    # (overlay_set_position, "$g_little_pos_helper", pos1),
    # #Little Pos Helper by Kuba end

	#get current gold
	(store_troop_gold, ":cur_gold", "trp_player"),
	(assign, reg45, ":cur_gold"),

	#get the current ship info
	(assign, ":ship_party_id", "$g_ship_type"),
	#get the name
	(party_get_slot, ":name", ":ship_party_id", slot_spaceship_name),
	(str_store_string, s3, ":name"),
	#get the price
	(party_get_slot, "$g_ship_price", ":ship_party_id", slot_spaceship_price),
	(assign, reg1, "$g_ship_price"),
	(str_store_string, s5, "@{reg1} credits"),
	(str_store_string, s2, "@^^ The price is {reg1} credits"),
	#get the description
	# old method, no longer used
		#(party_get_slot, ":desc", ":ship_party_id", slot_spaceship_desc),
		#(str_store_string, s1, ":desc"),
	# new method
	(party_get_slot, ":desc", ":ship_party_id", slot_spaceship_desc),
	#(assign, reg1, ":desc"),
	(str_store_string, s10, ":desc"),
	(party_get_slot, ":base_speed", ":ship_party_id", slot_spaceship_base_speed),
	(assign, reg2, ":base_speed"),
	(party_get_slot, ":min", ":ship_party_id", slot_spaceship_drive_min),
	(assign, reg3, ":min"),
	(party_get_slot, ":max", ":ship_party_id", slot_spaceship_drive_max),
	(assign, reg4, ":max"),
	(party_get_slot, ":min", ":ship_party_id", slot_spaceship_scanner_min),
	(assign, reg5, ":min"),
	(party_get_slot, ":max", ":ship_party_id", slot_spaceship_scanner_max),
	(assign, reg6, ":max"),
	(party_get_slot, ":min", ":ship_party_id", slot_spaceship_combat_computer_min),
	(assign, reg7, ":min"),
	(party_get_slot, ":max", ":ship_party_id", slot_spaceship_combat_computer_max),
	(assign, reg8, ":max"),
	(party_get_slot, ":min", ":ship_party_id", slot_spaceship_troop_capacity_min),
	(assign, reg9, ":min"),
	(party_get_slot, ":max", ":ship_party_id", slot_spaceship_troop_capacity_max),
	(assign, reg10, ":max"),
	(party_get_slot, ":min", ":ship_party_id", slot_spaceship_medical_bay_min),
	(assign, reg11, ":min"),
	(party_get_slot, ":max", ":ship_party_id", slot_spaceship_medical_bay_max),
	(assign, reg12, ":max"),
	(party_get_slot, ":min", ":ship_party_id", slot_spaceship_prisoner_capacity_min),
	(assign, reg13, ":min"),
	(party_get_slot, ":max", ":ship_party_id", slot_spaceship_prisoner_capacity_max),
	(assign, reg14, ":max"),
	(party_get_slot, ":min", ":ship_party_id", slot_spaceship_trade_computer_min),
	(assign, reg15, ":min"),
	(party_get_slot, ":max", ":ship_party_id", slot_spaceship_trade_computer_max),
	(assign, reg16, ":max"),
	(party_get_slot, ":min", ":ship_party_id", slot_spaceship_cargo_capacity_min),
	(assign, reg17, ":min"),
	(party_get_slot, ":max", ":ship_party_id", slot_spaceship_cargo_capacity_max),
	(assign, reg18, ":max"),
	#create the full description string
	#(try_begin),
	#	(eq, ":desc", ""),
	#	(str_store_string, s1, "@Upgrade Details:^^Base Speed: {reg2}^            Drive: {reg3} of {reg4}^          Scanner: {reg5} of {reg6}^  Combat Computer: {reg7} of {reg8}^   Troop Capacity: {reg9} of {reg10}^      Medical Bay: {reg11} of {reg12}^Prisoner Capacity: {reg13} of {reg14}^   Trade Computer: {reg15} of {reg16}^   Cargo Capacity: {reg17} of {reg18}"),
	#(else_try),
	#	(str_store_string, s1, "@Description:^^{reg1}^^Upgrade Details:^^Base Speed: {reg2}^            Drive: {reg3} of {reg4}^          Scanner: {reg5} of {reg6}^  Combat Computer: {reg7} of {reg8}^   Troop Capacity: {reg9} of {reg10}^      Medical Bay: {reg11} of {reg12}^Prisoner Capacity: {reg13} of {reg14}^   Trade Computer: {reg15} of {reg16}^   Cargo Capacity: {reg17} of {reg18}"),
		#(str_store_string, s1, "@{s10}^^Upgrade Details:^^Base Speed: {reg2}^Drive: {reg3} of {reg4}^Scanner: {reg5} of {reg6}^Combat Computer: {reg7} of {reg8}^Troop Capacity: {reg9} of {reg10}^Medical Bay: {reg11} of {reg12}^Prisoner Capacity: {reg13} of {reg14}^Trade Computer: {reg15} of {reg16}^Cargo Capacity: {reg17} of {reg18}"),
		(str_store_string, s1, "@{s10}^^Upgrade Details:^^    Base Speed: {reg2}^    Drive: {reg3} of {reg4}^    Scanner: {reg5} of {reg6}^    Combat Computer: {reg7} of {reg8}^    Troop Capacity: {reg9} of {reg10}^    Medical Bay: {reg11} of {reg12}^    Prisoner Capacity: {reg13} of {reg14}^    Trade Computer: {reg15} of {reg16}^    Cargo Capacity: {reg17} of {reg18}"),
	#(try_end),

	# (try_begin),
		# (eq, "$g_ship_type", 1),
		# (str_store_string, s3, "@Z-95 Headhunter"),
		# (assign, "$g_ship_price", 4500),
		# (str_store_string, s5, "@4500 credits"),
		# (str_store_string, s1, "@The z-95 Headhunter is a fast and agile craft which will see you safely to ^all corners of the galaxy. ^^Its powerful MK-III engines can be upgraded to MK-V to make it the fastest ^ship out there, unless you believe that nonsense about the Millenium Falcon.^^It has MK-I scanners with the option to upgrade to MK-III."),
		# (str_store_string, s2, "@^^ The price is 4500 credits"),
	# (else_try),

		# (eq, "$g_ship_type", 2),
		# (str_store_string, s3, "@Mercenary Raider"),
		# (assign, "$g_ship_price", 7500),
		# (str_store_string, s5, "@7500 credits"),
		# (str_store_string, s1, "@The Mercenary Raider is an all-round winner. ^^While already no slouch, it can be made faster still with drive upgrades. ^There is plenty of room for detaining defeated enemies with room for ^two additional compartments if required.^^Enhanced scanners help detect enemies while the MK-I Combat Computer ^will give you the edge in any fight. ^If you still find yourself on the losing end, you can upgrade to a MK-III model."),
		# (str_store_string, s2, "@^^ The price is 7500 credits"),
	# (else_try),
		# (eq, "$g_ship_type", 3),
		# (str_store_string, s3, "@Freighter"),
		# (assign, "$g_ship_price", 9000),
		# (str_store_string, s5, "@9000 credits"),
		# (str_store_string, s1, "@This model Freighter is the workhorse of traders around the galaxy. ^^Its basic engines are somewhat outdated but can easily be upgraded to MK-III.^^The ship has a pressurized cargo hold with room for four additional units to be installed. ^^The MK-I trade computer will make sure you get a fair price but if you ^really want to hunt for the sharpest deal, you can uprade to a MK-V model. ^^There is also room for two prisoner comparments, with one already installed."),
		# (str_store_string, s2, "@^^ The price is 9000 credits"),
	# (else_try),
		# (eq, "$g_ship_type", 4),
		# (str_store_string, s3, "@Imperial Shuttle"),
		# (assign, "$g_ship_price", 15000),
		# (str_store_string, s5, "@15000 credits"),
		# (str_store_string, s1, "@A true beauty, the Imperial Shuttle combines speed with troop support capabilites. ^^It has one troop compartment with room for two more and a MK-I Medical bay ^which can be upgraded to MK-II. ^^The current MK-I scanners could be upgraded to MK-III if you require a larger scanning range."),
		# (str_store_string, s2, "@^^ The price is 15000 credits"),
	# (else_try),
		# (eq, "$g_ship_type", 5),
		# (str_store_string, s3, "@Hutt Heavy Freighter"),
		# (assign, "$g_ship_price", 22500),
		# (str_store_string, s5, "@22500 credits"),
		# (str_store_string, s1, "@The Hutt Heavy Freighter makes trading safer than ever.^^Although not the fastest of ships, it's MK-I engines can be upgraded to MK-III.^^To accomodate the day-to-day activities of the Hutt Cartel, it comes equiped with ^one prisoner compartment with room for four more.^^Extra troops can be carried in the troop compartment; an extra two can be installed.^^The MK-I combat computer (upgradable to MK-III) will help you defeat would-be pirates ^while the MK-III trade computer will aid you in your trade activity. ^At the top of the line, we also offer the MK-V computer for this model of ship"),
		# (str_store_string, s2, "@^^ The price is 22500 credits"),
	# (else_try),
		# (eq, "$g_ship_type", 6),
		# (str_store_string, s3, "@Rebel Alliance Cruiser"),
		# (assign, "$g_ship_price", 30000),
		# (str_store_string, s5, "@30000 credits"),
		# (str_store_string, s1, "@The Rebel Alliance Cruiser is a sleek and highly sophisticated battleship. ^^Your troops will be carried in the two to four troop compartments and will be ^transported swiftly to their destination by the MK-II engines, upgradable to MK-IV. ^^The ship offers extensive medical facilites from the standard MK-II MedBay, up to ^a fully equiped hospital at MK-V. ^^The rebels build the most powerful scanners and combat computers available today. ^Both come standard at MK-II but can be upgraded to MK-V."),
		# (str_store_string, s2, "@^^ The price is 30000 credits"),
	# (else_try),
		# (eq, "$g_ship_type", 7),
		# (str_store_string, s3, "@Imperial Star Destroyer"),
		# (assign, "$g_ship_price", 45000),
		# (str_store_string, s5, "@45000 credits"),
		# (str_store_string, s1, "@If you're after loads of space for your troops, ^the Imperial Star Destroyer is the way to go. ^^It comes standard with two troop compartments but these ^can be extended to a whopping six.^^Prisoners are also no problem, with between two and four bays available. ^^The ISD has a basic medical facility which can be improved to a MK-II model. ^^The scanners and drive are both MK-I models and can be upgraded to MK-III. ^^Finally, the ship can support a combat computer up to MK-IV, ^with a MK-II unit installed standard"),
		# (str_store_string, s2, "@^^ The price is 45000 credits"),
	# (try_end),


		(set_fixed_point_multiplier, 1000),
		(presentation_set_duration, 999999),
		#main title
		(create_text_overlay, reg1, "@Shipyard Stock List - select the ship you want to view or purchase",tf_center_justify),
		(position_set_x, pos3, 387), #swy-> moved to the left a bit (position_set_x, pos3, 512),
        (position_set_y, pos3, 690),
        (overlay_set_position, reg1, pos3),
		(overlay_set_color, reg1, 000066),

		# #ship icon outline
		# (create_game_button_overlay, reg1, "@.",tf_center_justify),
		# (position_set_x, pos3, 750),
        # (position_set_y, pos3, 240),
        # (overlay_set_position, reg1, pos3),
		# (overlay_set_color, reg1, 000066),
		# (position_set_x, pos4, 300),
		# (position_set_y, pos4, 200),
		# (overlay_set_size, reg1, pos4),
		#ship name
		(create_game_button_overlay, reg1, "@{s3}",tf_center_justify),
		(position_set_x, pos3, 725),
        (position_set_y, pos3, 475),
        (overlay_set_position, reg1, pos3),
		(overlay_set_color, reg1, 000066),
		(position_set_x, pos4, 250),
		(position_set_y, pos4, 40),
		(overlay_set_size, reg1, pos4),
		#price overlay
		(create_game_button_overlay , reg1, "@{s5}", tf_center_justify),
        (position_set_x, pos3, 760),
        (position_set_y, pos3, 115),
        (overlay_set_position, reg1, pos3),
		(overlay_set_color, reg1, 0x009900),
		(position_set_x, pos4, 200),
		(position_set_y, pos4, 40),
		(overlay_set_size, reg1, pos4),

		#set up the buttons
		(try_begin),
			(troop_get_slot, ":has_ship", "trp_player", slot_troop_has_spaceship),
			(eq, ":has_ship", 0), #can't buy a ship unless you sell your old one so you don't have one
			(ge, reg45, "$g_ship_price"),
			(create_game_button_overlay, "$g_presentation_obj_1", "@Buy the ship"),
			(position_set_x, pos1, 120),
			(position_set_y, pos1, 50),
			(overlay_set_position, "$g_presentation_obj_1", pos1),
			(overlay_set_color, "$g_presentation_obj_1", 000066),
		(try_end),
		(create_game_button_overlay, "$g_presentation_obj_2", "@Go back...",),
		(position_set_x, pos2, 310),
        (position_set_y, pos2, 50),
        (overlay_set_position, "$g_presentation_obj_2", pos2),
		(overlay_set_color, "$g_presentation_obj_2", 000066),

		#main text block
        (create_text_overlay , reg1, "@>{s1}", tf_left_align|tf_vertical_align_center),
        (position_set_x, pos3, 40),
        (position_set_y, pos3, 350),
        (overlay_set_position, reg1, pos3),
		(overlay_set_color, reg1, 000060), #swy
		# (position_set_x, pos1, 300),
        # (position_set_y, pos1, 300),
        # (overlay_set_area_size, reg1, pos1),

		(position_set_x, pos4, 850),
		(position_set_y, pos4, 850),
		(overlay_set_size, reg1, pos4),

		#current funds block
		(create_text_overlay , reg1, "@You have {reg45} credits", tf_left_align),
        (position_set_x, pos3, 600),
        (position_set_y, pos3, 50),
        (overlay_set_position, reg1, pos3),

	#load icon mesh on the right of the screen
    (create_mesh_overlay_with_tableau_material,reg1, -1, "tableau_starship_icon", "$g_ship_icon"),
	(set_fixed_point_multiplier, 1000),
	(position_set_x, pos0, 320),
	(position_set_y, pos0, -80),
	(overlay_set_position, reg1, pos0),
	#SW - added ability to change the size
	(position_set_x, pos1, 2100),
	(position_set_y, pos1, 2100),
	(overlay_set_size, reg1, pos1),


	#Adding menu bar at the top
	(assign, ":button_x_val", 60), #x size of 'view' button
	(assign, ":button_y_val", 25), #y size of 'view' button
	(assign, ":button_y_val_2", 545), #y position of 'view' button, x positions are all different for the icons
	#Z95 - Choice 1
	(party_get_slot, ":icon", "$g_ship_choice_1", slot_spaceship_icon),
	(create_image_button_overlay_with_tableau_material,reg1, -1, "tableau_starship_icon", ":icon"),
	(set_fixed_point_multiplier, 1000),
	(position_set_x, pos0, 10),
	(position_set_y, pos0, 530),
	(overlay_set_position, reg1, pos0),
	(position_set_x, pos1, 500),
	(position_set_y, pos1, 500),
#	(overlay_set_color, "$g_presentation_object_3", 0xec2a53),
	(overlay_set_size, reg1, pos1),
	(create_game_button_overlay, "$g_presentation_obj_3", "@view"),
		(position_set_x, pos2, 140), #was 55 for text button
        (position_set_y, pos2, ":button_y_val_2"),
        (overlay_set_position, "$g_presentation_obj_3", pos2),
		(overlay_set_color, "$g_presentation_obj_3", 000066),
		(position_set_x, pos1, ":button_x_val"),
		(position_set_y, pos1, ":button_y_val"),
		(overlay_set_size, "$g_presentation_obj_3", pos1),

	#Merc raider - Choice 2
	(party_get_slot, ":icon", "$g_ship_choice_2", slot_spaceship_icon),
	(create_image_button_overlay_with_tableau_material,reg1, -1, "tableau_starship_icon", ":icon"),
	(set_fixed_point_multiplier, 1000),
	(position_set_x, pos0, 140),
	(position_set_y, pos0, 530),
	(overlay_set_position, reg1, pos0),
	(position_set_x, pos1, 500),
	(position_set_y, pos1, 500),
	(overlay_set_size, reg1, pos1),
	(create_game_button_overlay, "$g_presentation_obj_4", "@view"),
		(position_set_x, pos2, 270),
        (position_set_y, pos2, ":button_y_val_2"),
        (overlay_set_position, "$g_presentation_obj_4", pos2),
		(overlay_set_color, "$g_presentation_obj_4", 000066),
		(position_set_x, pos1, ":button_x_val"),
		(position_set_y, pos1, ":button_y_val"),
		(overlay_set_size, "$g_presentation_obj_4", pos1),

	#Freighter - Choice 3
	(party_get_slot, ":icon", "$g_ship_choice_3", slot_spaceship_icon),
	(create_image_button_overlay_with_tableau_material,reg1, -1, "tableau_starship_icon", ":icon"),
	(set_fixed_point_multiplier, 1000),
	(position_set_x, pos0, 270),
	(position_set_y, pos0, 530),
	(overlay_set_position, reg1, pos0),
	(position_set_x, pos1, 500),
	(position_set_y, pos1, 500),
	(overlay_set_size, reg1, pos1),
	(create_game_button_overlay, "$g_presentation_obj_5", "@view"),
		(position_set_x, pos2, 400),
        (position_set_y, pos2, ":button_y_val_2"),
        (overlay_set_position, "$g_presentation_obj_5", pos2),
		(overlay_set_color, "$g_presentation_obj_5", 000066),
		(position_set_x, pos1, ":button_x_val"),
		(position_set_y, pos1, ":button_y_val"),
		(overlay_set_size, "$g_presentation_obj_5", pos1),

	#Imperial Shuttle - Choice 4
	(party_get_slot, ":icon", "$g_ship_choice_4", slot_spaceship_icon),
	(create_image_button_overlay_with_tableau_material,reg1, -1, "tableau_starship_icon", ":icon"),
	(set_fixed_point_multiplier, 1000),
	(position_set_x, pos0, 400),
	(position_set_y, pos0, 530),
	(overlay_set_position, reg1, pos0),
	(position_set_x, pos1, 500),
	(position_set_y, pos1, 500),
	(overlay_set_size, reg1, pos1),
		(create_game_button_overlay, "$g_presentation_obj_6", "@view"),
		(position_set_x, pos2, 530),
        (position_set_y, pos2, ":button_y_val_2"),
        (overlay_set_position, "$g_presentation_obj_6", pos2),
		(overlay_set_color, "$g_presentation_obj_6", 000066),
		(position_set_x, pos1, ":button_x_val"),
		(position_set_y, pos1, ":button_y_val"),
		(overlay_set_size, "$g_presentation_obj_6", pos1),

	#Hutt Heavy Freighter - Choice 5
	(party_get_slot, ":icon", "$g_ship_choice_5", slot_spaceship_icon),
	(create_image_button_overlay_with_tableau_material,reg1, -1, "tableau_starship_icon", ":icon"),
	(set_fixed_point_multiplier, 1000),
	(position_set_x, pos0, 530),
	(position_set_y, pos0, 530),
	(overlay_set_position, reg1, pos0),
	(position_set_x, pos1, 500),
	(position_set_y, pos1, 500),
	(overlay_set_size, reg1, pos1),
		(create_game_button_overlay, "$g_presentation_obj_7", "@view"),
		(position_set_x, pos2, 660),
        (position_set_y, pos2, ":button_y_val_2"),
        (overlay_set_position, "$g_presentation_obj_7", pos2),
		(overlay_set_color, "$g_presentation_obj_7", 000066),
		(position_set_x, pos1, ":button_x_val"),
		(position_set_y, pos1, ":button_y_val"),
		(overlay_set_size, "$g_presentation_obj_7", pos1),

	#Rebel Alliance Cruiser - Choice 6
	(party_get_slot, ":icon", "$g_ship_choice_6", slot_spaceship_icon),
	(create_image_button_overlay_with_tableau_material,reg1, -1, "tableau_starship_icon", ":icon"),
	(set_fixed_point_multiplier, 1000),
	(position_set_x, pos0, 660),
	(position_set_y, pos0, 530),
	(overlay_set_position, reg1, pos0),
	(position_set_x, pos1, 500),
	(position_set_y, pos1, 500),
	(overlay_set_size, reg1, pos1),
	(overlay_set_size, reg1, pos1),
		(create_game_button_overlay, "$g_presentation_obj_8", "@view"),
		(position_set_x, pos2, 790),
        (position_set_y, pos2, ":button_y_val_2"),
        (overlay_set_position, "$g_presentation_obj_8", pos2),
		(overlay_set_color, "$g_presentation_obj_8", 000066),
		(position_set_x, pos1, ":button_x_val"),
		(position_set_y, pos1, ":button_y_val"),
		(overlay_set_size, "$g_presentation_obj_8", pos1),

	#Imperial Star Destroyer - Choice 7
	(party_get_slot, ":icon", "$g_ship_choice_7", slot_spaceship_icon),
	(create_image_button_overlay_with_tableau_material,reg1, -1, "tableau_starship_icon", ":icon"),
	(set_fixed_point_multiplier, 1000),
	(position_set_x, pos0, 790),
	(position_set_y, pos0, 530),
	(overlay_set_position, reg1, pos0),
	(position_set_x, pos1, 500),
	(position_set_y, pos1, 500),
	(overlay_set_size, reg1, pos1),
	(overlay_set_size, reg1, pos1),
		(create_game_button_overlay, "$g_presentation_obj_9", "@view"),
		(position_set_x, pos2, 920),
        (position_set_y, pos2, ":button_y_val_2"),
        (overlay_set_position, "$g_presentation_obj_9", pos2),
		(overlay_set_color, "$g_presentation_obj_9", 000066),
		(position_set_x, pos1, ":button_x_val"),
		(position_set_y, pos1, ":button_y_val"),
		(overlay_set_size, "$g_presentation_obj_9", pos1),

		]),




(ti_on_presentation_event_state_change,

      [
        (store_trigger_param_1, ":object"),

	(try_begin),
 		(eq, ":object", "$g_presentation_obj_2"),
		(presentation_set_duration, 0),
		(jump_to_menu, "mnu_shipyard"),
	(else_try),
		(eq, ":object", "$g_presentation_obj_1"),
		(call_script, "script_reset_starship_slots_for_troop", "trp_player", "$g_ship_type"),
		(display_message, "@The {s3} is waiting for you on the docking bay."),
		(troop_remove_gold, "trp_player", "$g_ship_price"),
        (play_sound, "snd_money_paid"),
		(presentation_set_duration, 0),
		(jump_to_menu, "mnu_shipyard"),
	(else_try),
		    (eq, ":object", "$g_presentation_obj_3"),
			(assign, "$g_ship_type", "$g_ship_choice_1"),
			(party_get_slot, "$g_ship_icon", "$g_ship_type", slot_spaceship_icon),
			(start_presentation, "prsnt_starship"),
	(else_try),
		    (eq, ":object", "$g_presentation_obj_4"),
			(assign, "$g_ship_type", "$g_ship_choice_2"),
			(party_get_slot, "$g_ship_icon", "$g_ship_type", slot_spaceship_icon),
			(start_presentation, "prsnt_starship"),
	(else_try),
		    (eq, ":object", "$g_presentation_obj_5"),
			(assign, "$g_ship_type", "$g_ship_choice_3"),
			(party_get_slot, "$g_ship_icon", "$g_ship_type", slot_spaceship_icon),
			(start_presentation, "prsnt_starship"),
	(else_try),
		    (eq, ":object", "$g_presentation_obj_6"),
			(assign, "$g_ship_type", "$g_ship_choice_4"),
			(party_get_slot, "$g_ship_icon", "$g_ship_type", slot_spaceship_icon),
			(start_presentation, "prsnt_starship"),
	(else_try),
		    (eq, ":object", "$g_presentation_obj_7"),
			(assign, "$g_ship_type", "$g_ship_choice_5"),
			(party_get_slot, "$g_ship_icon", "$g_ship_type", slot_spaceship_icon),
			(start_presentation, "prsnt_starship"),
	(else_try),
		    (eq, ":object", "$g_presentation_obj_8"),
			(assign, "$g_ship_type", "$g_ship_choice_6"),
			(party_get_slot, "$g_ship_icon", "$g_ship_type", slot_spaceship_icon),
			(start_presentation, "prsnt_starship"),
	(else_try),
		    (eq, ":object", "$g_presentation_obj_9"),
			(assign, "$g_ship_type", "$g_ship_choice_7"),
			(party_get_slot, "$g_ship_icon", "$g_ship_type", slot_spaceship_icon),
			(start_presentation, "prsnt_starship"),
    (try_end),
        ]),
#
(ti_on_presentation_run,
       [

		# #Little Pos Helper by Kuba begin
		# #http://forums.taleworlds.com/index.php/topic,8652.msg2373733.html#msg2373733
		# (set_fixed_point_multiplier, 1000),
		# (mouse_get_position, pos1),
		# (position_get_x, reg1, pos1),
		# (position_get_y, reg2, pos1),
		# (str_store_string, s1, "@DEBUG: x = {reg1}, y = {reg2}"),
		# #(overlay_set_text, "$g_little_pos_helper", "@DEBUG: x = {reg1}, y = {reg2}"),
		# (overlay_set_text, "$g_little_pos_helper", s1),
		# #Little Pos Helper by Kuba end

	   (try_begin),
          (this_or_next|key_clicked, key_escape),
          (key_clicked, key_back_space),
          (presentation_set_duration, 0),
		  (jump_to_menu, "mnu_shipyard"),
        (try_end),
        ]),

]),

("ship_details", 0,mesh_load_window, [
	(ti_on_presentation_load,[

    # #Little Pos Helper by Kuba begin
	# #http://forums.taleworlds.com/index.php/topic,8652.msg2373733.html#msg2373733
	# (str_store_string, s1, "@DEBUG: x = 00, y = 00"),
    # (create_text_overlay, "$g_little_pos_helper", s1),
    # (overlay_set_color, "$g_little_pos_helper", 0xFFFFFFFF),
	# (set_fixed_point_multiplier, 1000),
    # (position_set_x, pos1, 100),
    # (position_set_y, pos1, 100),
    # (overlay_set_position, "$g_little_pos_helper", pos1),
    # #Little Pos Helper by Kuba end

	(set_fixed_point_multiplier, 1000),
	(presentation_set_duration, 999999),

	#get info
	(assign, ":troop_no", "trp_player"),
	(troop_get_slot, "$g_ship_type", ":troop_no", slot_troop_has_spaceship),
	(store_troop_gold, ":cur_gold", "trp_player"),
	(assign, reg45, ":cur_gold"),
	(troop_get_slot, reg2, ":troop_no", slot_ship_drive),
	(troop_get_slot, reg3, ":troop_no", slot_ship_scanner),
	(troop_get_slot, reg4, ":troop_no", slot_ship_troop_capacity),
	(troop_get_slot, reg5, ":troop_no", slot_ship_prisoner_capacity),
	(troop_get_slot, reg6, ":troop_no", slot_ship_cargo_capacity),
	(troop_get_slot, reg7, ":troop_no", slot_ship_combat_computer),
	(troop_get_slot, reg8, ":troop_no", slot_ship_trade_computer),
	(troop_get_slot, reg9, ":troop_no", slot_ship_medical_bay),
	(troop_get_slot, reg10, ":troop_no", slot_ship_drive_max),
	(troop_get_slot, reg11, ":troop_no", slot_ship_scanner_max),
	(troop_get_slot, reg12, ":troop_no", slot_ship_troop_capacity_max),
	(troop_get_slot, reg13, ":troop_no", slot_ship_prisoner_capacity_max),
	(troop_get_slot, reg14, ":troop_no", slot_ship_cargo_capacity_max),
	(troop_get_slot, reg15, ":troop_no", slot_ship_combat_computer_max),
	(troop_get_slot, reg16, ":troop_no", slot_ship_trade_computer_max),
	(troop_get_slot, reg17, ":troop_no", slot_ship_medical_bay_max),
	#calculate the prices
	(call_script, "script_get_component_upgrade_price", 1, "$g_ship_type", reg2),
	(assign, reg18, reg0),
	(call_script, "script_get_component_upgrade_price", 2, "$g_ship_type", reg3),
	(assign, reg19, reg0),
	(call_script, "script_get_component_upgrade_price", 3, "$g_ship_type", reg4),
	(assign, reg20, reg0),
	(call_script, "script_get_component_upgrade_price", 4, "$g_ship_type", reg5),
	(assign, reg21, reg0),
	(call_script, "script_get_component_upgrade_price", 5, "$g_ship_type", reg6),
	(assign, reg22, reg0),
	(call_script, "script_get_component_upgrade_price", 6, "$g_ship_type", reg7),
	(assign, reg23, reg0),
	(call_script, "script_get_component_upgrade_price", 7, "$g_ship_type", reg8),
	(assign, reg24, reg0),
	(call_script, "script_get_component_upgrade_price", 8, "$g_ship_type", reg9),
	(assign, reg25, reg0),

	#set name string
	(try_begin),
		(gt, "$g_ship_type", 0),
		#get the current ship info
		(assign, ":ship_party_id", "$g_ship_type"),
		#get the name
		(party_get_slot, ":name", ":ship_party_id", slot_spaceship_name),
		(str_store_string, s3, ":name"),
	(try_end),

		#main title
		(create_text_overlay, reg1, "@Ship Details",tf_center_justify),
		(position_set_x, pos3, 500),
        (position_set_y, pos3, 700),
        (overlay_set_position, reg1, pos3),
#		(overlay_set_color, reg1, 000066),
		#ship name
		(create_game_button_overlay, reg1, "@{s3}",tf_center_justify),
		(position_set_x, pos3, 400),
        (position_set_y, pos3, 650),
        (overlay_set_position, reg1, pos3),
		(overlay_set_color, reg1, 000066),
		(position_set_x, pos3, 300),
        (position_set_y, pos3, 40),
		(overlay_set_size, reg1, pos3),
		#set up the buttons
		(create_game_button_overlay, "$g_presentation_obj_2", "@Go back...", tf_left_align),
		(position_set_x, pos2, 200),
        (position_set_y, pos2, 50),
        (overlay_set_position, "$g_presentation_obj_2", pos2),
#		(overlay_set_color, "$g_presentation_obj_2", 000066),

		#current funds block
		(create_text_overlay , reg1, "@You have {reg45} credits", tf_left_align),
        (position_set_x, pos3, 600),
        (position_set_y, pos3, 50),
        (overlay_set_position, reg1, pos3),

		#load icon mesh
		(party_get_slot, "$g_ship_icon", "$g_ship_type", slot_spaceship_icon),
		(create_mesh_overlay_with_tableau_material,reg1, -1, "tableau_starship_icon", "$g_ship_icon"),
		(set_fixed_point_multiplier, 1000),
		(position_set_x, pos0, 575),
		(position_set_y, pos0, 420),
		(overlay_set_position, reg1, pos0),
		#SW - added new code to set the size
		(position_set_x, pos1, 1200),
		(position_set_y, pos1, 1200),
		(overlay_set_size, reg1, pos1),

		#first row: headers
		(create_text_overlay, reg1, "@Ship system",tf_left_align),
		(position_set_x, pos3, 100),
        (position_set_y, pos3, 550),
        (overlay_set_position, reg1, pos3),
#		(overlay_set_color, reg1, 000066),

		(create_text_overlay, reg1, "@Current",tf_center_justify),
		(position_set_x, pos3, 400),
        (position_set_y, pos3, 550),
        (overlay_set_position, reg1, pos3),
#		(overlay_set_color, reg1, 000066),

		(create_text_overlay, reg1, "@Max",tf_center_justify),
		(position_set_x, pos3, 500),
        (position_set_y, pos3, 550),
        (overlay_set_position, reg1, pos3),
#		(overlay_set_color, reg1, 000066),
	(try_begin),
		(eq, "$g_presentation_details", 0),
		(create_text_overlay, reg1, "@Upgrade price (credits)",tf_left_align),
		(position_set_x, pos3, 575),
        (position_set_y, pos3, 550),
        (overlay_set_position, reg1, pos3),
#		(overlay_set_color, reg1, 000066),
	(try_end),

		#first colomn: Description - top to bottom
		(assign, ":x_val", 100),
		(assign, ":y_val", 500),
		(assign, ":y_spacing", 50),

		(create_text_overlay, reg1, "@Drive",tf_left_align),
		(position_set_x, pos3, ":x_val"),
        (position_set_y, pos3, ":y_val"),
        (overlay_set_position, reg1, pos3),
		(overlay_set_color, reg1, 000066),
		(val_sub, ":y_val", ":y_spacing"),

		(create_text_overlay, reg1, "@Scanners",tf_left_align),
		(position_set_x, pos3, ":x_val"),
        (position_set_y, pos3, ":y_val"),
        (overlay_set_position, reg1, pos3),
		(overlay_set_color, reg1, 000066),
		(val_sub, ":y_val", ":y_spacing"),

		(create_text_overlay, reg1, "@Troop Capacity",tf_left_align),
		(position_set_x, pos3, ":x_val"),
        (position_set_y, pos3, ":y_val"),
        (overlay_set_position, reg1, pos3),
		(overlay_set_color, reg1, 000066),
		(val_sub, ":y_val", ":y_spacing"),

		(create_text_overlay, reg1, "@Prisoner Capacity",tf_left_align),
		(position_set_x, pos3, ":x_val"),
        (position_set_y, pos3, ":y_val"),
        (overlay_set_position, reg1, pos3),
		(overlay_set_color, reg1, 000066),
		(val_sub, ":y_val", ":y_spacing"),

		(create_text_overlay, reg1, "@Cargo Capacity",tf_left_align),
		(position_set_x, pos3, ":x_val"),
        (position_set_y, pos3, ":y_val"),
        (overlay_set_position, reg1, pos3),
		(overlay_set_color, reg1, 000066),
		(val_sub, ":y_val", ":y_spacing"),

		(create_text_overlay, reg1, "@Combat Computer",tf_left_align),
		(position_set_x, pos3, ":x_val"),
        (position_set_y, pos3, ":y_val"),
        (overlay_set_position, reg1, pos3),
		(overlay_set_color, reg1, 000066),
		(val_sub, ":y_val", ":y_spacing"),

		(create_text_overlay, reg1, "@Trade Computer",tf_left_align),
		(position_set_x, pos3, ":x_val"),
        (position_set_y, pos3, ":y_val"),
        (overlay_set_position, reg1, pos3),
		(overlay_set_color, reg1, 000066),
		(val_sub, ":y_val", ":y_spacing"),

		(create_text_overlay, reg1, "@Medical Bay",tf_left_align),
		(position_set_x, pos3, ":x_val"),
        (position_set_y, pos3, ":y_val"),
        (overlay_set_position, reg1, pos3),
		(overlay_set_color, reg1, 000066),
		(val_sub, ":y_val", ":y_spacing"),

				#second comlumn - current value
		(assign, ":x_val", 400),
		(assign, ":y_val", 500),
		(assign, ":y_spacing", 50),

		(try_begin),
			(gt, reg2, 0),
			(create_text_overlay, reg1, "@{reg2}",tf_left_align),
			(position_set_x, pos3, ":x_val"),
			(position_set_y, pos3, ":y_val"),
			(overlay_set_position, reg1, pos3),
			(overlay_set_color, reg1, 000066),
		(try_end),
		(val_sub, ":y_val", ":y_spacing"),

		(try_begin),
			(gt, reg3, 0),
			(create_text_overlay, reg1, "@{reg3}",tf_left_align),
			(position_set_x, pos3, ":x_val"),
			(position_set_y, pos3, ":y_val"),
			(overlay_set_position, reg1, pos3),
			(overlay_set_color, reg1, 000066),
		(try_end),
		(val_sub, ":y_val", ":y_spacing"),

		(try_begin),
			(gt, reg4, 0),
			(create_text_overlay, reg1, "@{reg4}",tf_left_align),
			(position_set_x, pos3, ":x_val"),
			(position_set_y, pos3, ":y_val"),
			(overlay_set_position, reg1, pos3),
			(overlay_set_color, reg1, 000066),
		(try_end),
		(val_sub, ":y_val", ":y_spacing"),

		(try_begin),
			(gt, reg5, 0),
			(create_text_overlay, reg1, "@{reg5}",tf_left_align),
			(position_set_x, pos3, ":x_val"),
			(position_set_y, pos3, ":y_val"),
			(overlay_set_position, reg1, pos3),
			(overlay_set_color, reg1, 000066),
		(try_end),
		(val_sub, ":y_val", ":y_spacing"),

		(try_begin),
			(gt, reg6, 0),
			(create_text_overlay, reg1, "@{reg6}",tf_left_align),
			(position_set_x, pos3, ":x_val"),
			(position_set_y, pos3, ":y_val"),
			(overlay_set_position, reg1, pos3),
			(overlay_set_color, reg1, 000066),
		(try_end),
		(val_sub, ":y_val", ":y_spacing"),

		(try_begin),
			(gt, reg7, 0),
			(create_text_overlay, reg1, "@{reg7}",tf_left_align),
			(position_set_x, pos3, ":x_val"),
			(position_set_y, pos3, ":y_val"),
			(overlay_set_position, reg1, pos3),
			(overlay_set_color, reg1, 000066),
		(try_end),
		(val_sub, ":y_val", ":y_spacing"),

		(try_begin),
			(gt, reg8, 0),
			(create_text_overlay, reg1, "@{reg8}",tf_left_align),
			(position_set_x, pos3, ":x_val"),
			(position_set_y, pos3, ":y_val"),
			(overlay_set_position, reg1, pos3),
			(overlay_set_color, reg1, 000066),
		(try_end),
		(val_sub, ":y_val", ":y_spacing"),

		(try_begin),
			(gt, reg9, 0),
			(create_text_overlay, reg1, "@{reg9}",tf_left_align),
			(position_set_x, pos3, ":x_val"),
			(position_set_y, pos3, ":y_val"),
			(overlay_set_position, reg1, pos3),
			(overlay_set_color, reg1, 000066),
		(try_end),
		(val_sub, ":y_val", ":y_spacing"),

		#third comlumn - max value
		(assign, ":x_val", 500),
		(assign, ":y_val", 500),
		(assign, ":y_spacing", 50),

		(try_begin),
		(gt, reg10, 0),
			(create_text_overlay, reg1, "@{reg10}",tf_left_align),
			(position_set_x, pos3, ":x_val"),
			(position_set_y, pos3, ":y_val"),
			(overlay_set_position, reg1, pos3),
			(overlay_set_color, reg1, 000066),
		(try_end),
		(val_sub, ":y_val", ":y_spacing"),

		(try_begin),
		(gt, reg11, 0),
			(create_text_overlay, reg1, "@{reg11}",tf_left_align),
			(position_set_x, pos3, ":x_val"),
			(position_set_y, pos3, ":y_val"),
			(overlay_set_position, reg1, pos3),
			(overlay_set_color, reg1, 000066),
		(try_end),
		(val_sub, ":y_val", ":y_spacing"),

		(try_begin),
		(gt, reg12, 0),
			(create_text_overlay, reg1, "@{reg12}",tf_left_align),
			(position_set_x, pos3, ":x_val"),
			(position_set_y, pos3, ":y_val"),
			(overlay_set_position, reg1, pos3),
			(overlay_set_color, reg1, 000066),
		(try_end),
		(val_sub, ":y_val", ":y_spacing"),

		(try_begin),
			(gt, reg13, 0),
			(create_text_overlay, reg1, "@{reg13}",tf_left_align),
			(position_set_x, pos3, ":x_val"),
			(position_set_y, pos3, ":y_val"),
			(overlay_set_position, reg1, pos3),
			(overlay_set_color, reg1, 000066),
		(try_end),
		(val_sub, ":y_val", ":y_spacing"),

		(try_begin),
			(gt, reg14, 0),
			(create_text_overlay, reg1, "@{reg14}",tf_left_align),
			(position_set_x, pos3, ":x_val"),
			(position_set_y, pos3, ":y_val"),
			(overlay_set_position, reg1, pos3),
			(overlay_set_color, reg1, 000066),
		(try_end),
		(val_sub, ":y_val", ":y_spacing"),

		(try_begin),
			(gt, reg15, 0),
			(create_text_overlay, reg1, "@{reg15}",tf_left_align),
			(position_set_x, pos3, ":x_val"),
			(position_set_y, pos3, ":y_val"),
			(overlay_set_position, reg1, pos3),
			(overlay_set_color, reg1, 000066),
		(try_end),
		(val_sub, ":y_val", ":y_spacing"),

		(try_begin),
			(gt, reg16, 0),
			(create_text_overlay, reg1, "@{reg16}",tf_left_align),
			(position_set_x, pos3, ":x_val"),
			(position_set_y, pos3, ":y_val"),
			(overlay_set_position, reg1, pos3),
			(overlay_set_color, reg1, 000066),
		(try_end),
		(val_sub, ":y_val", ":y_spacing"),

		(try_begin),
			(gt, reg17, 0),
			(create_text_overlay, reg1, "@{reg17}",tf_left_align),
			(position_set_x, pos3, ":x_val"),
			(position_set_y, pos3, ":y_val"),
			(overlay_set_position, reg1, pos3),
			(overlay_set_color, reg1, 000066),
		(try_end),
		(val_sub, ":y_val", ":y_spacing"),
	(try_begin),
		(eq, "$g_presentation_details", 0), #check here to see if we're buying, selling or just checking details

		#fourth comlumn - upgrade price
		(assign, ":x_val", 625),
		(assign, ":y_val", 500),
		(assign, ":y_spacing", 50),

		(try_begin),
			(val_sub, reg10, reg2),
			(gt, reg10, 0),
			(create_text_overlay, reg1, "@{reg18}",tf_left_align),
			(position_set_x, pos3, ":x_val"),
			(position_set_y, pos3, ":y_val"),
			(overlay_set_position, reg1, pos3),
			(overlay_set_color, reg1, 000066),
		(try_end),
		(val_sub, ":y_val", ":y_spacing"),

		(try_begin),
			(val_sub, reg11, reg3),
			(gt, reg11, 0),
			(create_text_overlay, reg1, "@{reg19}",tf_left_align),
			(position_set_x, pos3, ":x_val"),
			(position_set_y, pos3, ":y_val"),
			(overlay_set_position, reg1, pos3),
			(overlay_set_color, reg1, 000066),
		(try_end),
		(val_sub, ":y_val", ":y_spacing"),

		(try_begin),
			(val_sub, reg12, reg4),
			(gt, reg12, 0),
			(create_text_overlay, reg1, "@{reg20}",tf_left_align),
			(position_set_x, pos3, ":x_val"),
			(position_set_y, pos3, ":y_val"),
			(overlay_set_position, reg1, pos3),
			(overlay_set_color, reg1, 000066),
		(try_end),
		(val_sub, ":y_val", ":y_spacing"),

		(try_begin),
			(val_sub, reg13, reg5),
			(gt, reg13, 0),
			(create_text_overlay, reg1, "@{reg21}",tf_left_align),
			(position_set_x, pos3, ":x_val"),
			(position_set_y, pos3, ":y_val"),
			(overlay_set_position, reg1, pos3),
			(overlay_set_color, reg1, 000066),
		(try_end),
		(val_sub, ":y_val", ":y_spacing"),

		(try_begin),
			(val_sub, reg14, reg6),
			(gt, reg14, 0),
			(create_text_overlay, reg1, "@{reg22}",tf_left_align),
			(position_set_x, pos3, ":x_val"),
			(position_set_y, pos3, ":y_val"),
			(overlay_set_position, reg1, pos3),
			(overlay_set_color, reg1, 000066),
		(try_end),
		(val_sub, ":y_val", ":y_spacing"),

		(try_begin),
			(val_sub, reg15, reg7),
			(gt, reg15, 0),
			(create_text_overlay, reg1, "@{reg23}",tf_left_align),
			(position_set_x, pos3, ":x_val"),
			(position_set_y, pos3, ":y_val"),
			(overlay_set_position, reg1, pos3),
			(overlay_set_color, reg1, 000066),
		(try_end),
		(val_sub, ":y_val", ":y_spacing"),

		(try_begin),
			(val_sub, reg16, reg8),
			(gt, reg16, 0),
			(create_text_overlay, reg1, "@{reg24}",tf_left_align),
			(position_set_x, pos3, ":x_val"),
			(position_set_y, pos3, ":y_val"),
			(overlay_set_position, reg1, pos3),
			(overlay_set_color, reg1, 000066),
		(try_end),
		(val_sub, ":y_val", ":y_spacing"),

		(try_begin),
			(val_sub, reg17, reg9),
			(gt, reg17, 0),
			(create_text_overlay, reg1, "@{reg25}",tf_left_align),
			(position_set_x, pos3, ":x_val"),
			(position_set_y, pos3, ":y_val"),
			(overlay_set_position, reg1, pos3),
			(overlay_set_color, reg1, 000066),
		(try_end),
		(val_sub, ":y_val", ":y_spacing"),
	#fifth colomn - buy buttons.
		(assign, ":x_val", 850),
		(assign, ":y_val", 500),
		(assign, ":y_spacing", 50),
		(assign, ":color", 006600),
		(assign, ":button_x_val", 60),
		(assign, ":button_y_val", 25),

		(try_begin),
			# (val_sub, reg10, reg2),
			(gt, reg10, 0), #check for upgrade possibility
			(ge, ":cur_gold", reg18), #see if player has enough credits
			(create_game_button_overlay, "$g_presentation_obj_3", "@Buy", tf_left_align),
			(position_set_x, pos2, ":x_val"),
			(position_set_y, pos2, ":y_val"),
			(overlay_set_position, "$g_presentation_obj_3", pos2),
			(overlay_set_color, reg1, ":color"),
			(position_set_x, pos2, ":button_x_val"),
			(position_set_y, pos2, ":button_y_val"),
			(overlay_set_size, "$g_presentation_obj_3", pos2),
		(else_try),
			(assign, "$g_presentation_obj_3", -1),		#make sure the global variable is cleared if the button isn't displayed
		(try_end),
		(val_sub, ":y_val", ":y_spacing"),
		(try_begin),
			# (val_sub, reg11, reg3),
			(gt, reg11, 0),
			(ge, ":cur_gold", reg19),
			(create_game_button_overlay, "$g_presentation_obj_4", "@Buy", tf_left_align),
			(position_set_x, pos2, ":x_val"),
			(position_set_y, pos2, ":y_val"),
			(overlay_set_position, "$g_presentation_obj_4", pos2),
			(overlay_set_color, reg1, ":color"),
			(position_set_x, pos2, ":button_x_val"),
			(position_set_y, pos2, ":button_y_val"),
			(overlay_set_size, "$g_presentation_obj_4", pos2),
		(else_try),
			(assign, "$g_presentation_obj_4", -1),		#make sure the global variable is cleared if the button isn't displayed
		(try_end),
		(val_sub, ":y_val", ":y_spacing"),
		(try_begin),
			# (val_sub, reg12, reg4),
			(gt, reg12, 0),
			(ge, ":cur_gold", reg20),
			(create_game_button_overlay, "$g_presentation_obj_5", "@Buy", tf_left_align),
			(position_set_x, pos2, ":x_val"),
			(position_set_y, pos2, ":y_val"),
			(overlay_set_position, "$g_presentation_obj_5", pos2),
			(overlay_set_color, reg1, ":color"),
			(position_set_x, pos2, ":button_x_val"),
			(position_set_y, pos2, ":button_y_val"),
			(overlay_set_size, "$g_presentation_obj_5", pos2),
		(else_try),
			(assign, "$g_presentation_obj_5", -1),		#make sure the global variable is cleared if the button isn't displayed
		(try_end),
		(val_sub, ":y_val", ":y_spacing"),
		(try_begin),
			# (val_sub, reg13, reg5),
			(gt, reg13, 0),
			(ge, ":cur_gold", reg21),
			(create_game_button_overlay, "$g_presentation_obj_6", "@Buy", tf_left_align),
			(position_set_x, pos2, ":x_val"),
			(position_set_y, pos2, ":y_val"),
			(overlay_set_position, "$g_presentation_obj_6", pos2),
			(position_set_x, pos2, ":button_x_val"),
			(position_set_y, pos2, ":button_y_val"),
			(overlay_set_size, "$g_presentation_obj_6", pos2),
			(overlay_set_color, reg1, ":color"),
		(else_try),
			(assign, "$g_presentation_obj_6", -1),		#make sure the global variable is cleared if the button isn't displayed
		(try_end),
		(val_sub, ":y_val", ":y_spacing"),
		(try_begin),
			# (val_sub, reg14, reg6),
			(gt, reg14, 0),
			(ge, ":cur_gold", reg22),
			(create_game_button_overlay, "$g_presentation_obj_7", "@Buy", tf_left_align),
			(position_set_x, pos2, ":x_val"),
			(position_set_y, pos2, ":y_val"),
			(overlay_set_position, "$g_presentation_obj_7", pos2),
			(position_set_x, pos2, ":button_x_val"),
			(position_set_y, pos2, ":button_y_val"),
			(overlay_set_size, "$g_presentation_obj_7", pos2),
			(overlay_set_color, reg1, ":color"),
		(else_try),
			(assign, "$g_presentation_obj_7", -1),		#make sure the global variable is cleared if the button isn't displayed
		(try_end),
		(val_sub, ":y_val", ":y_spacing"),
		(try_begin),
			# (val_sub, reg15, reg7),
			(gt, reg15, 0),
			(ge, ":cur_gold", reg23),
			(create_game_button_overlay, "$g_presentation_obj_8", "@Buy", tf_left_align),
			(position_set_x, pos2, ":x_val"),
			(position_set_y, pos2, ":y_val"),
			(overlay_set_position, "$g_presentation_obj_8", pos2),
			(position_set_x, pos2, ":button_x_val"),
			(position_set_y, pos2, ":button_y_val"),
			(overlay_set_size, "$g_presentation_obj_8", pos2),
			(overlay_set_color, reg1, ":color"),
		(else_try),
			(assign, "$g_presentation_obj_8", -1),		#make sure the global variable is cleared if the button isn't displayed
		(try_end),
		(val_sub, ":y_val", ":y_spacing"),
		(try_begin),
			# (val_sub, reg16, reg8),
			(gt, reg16, 0),
			(ge, ":cur_gold", reg24),
			(create_game_button_overlay, "$g_presentation_obj_9", "@Buy", tf_left_align),
			(position_set_x, pos2, ":x_val"),
			(position_set_y, pos2, ":y_val"),
			(overlay_set_position, "$g_presentation_obj_9", pos2),
			(position_set_x, pos2, ":button_x_val"),
			(position_set_y, pos2, ":button_y_val"),
			(overlay_set_size, "$g_presentation_obj_9", pos2),
			(overlay_set_color, reg1, ":color"),
		(else_try),
			(assign, "$g_presentation_obj_9", -1),		#make sure the global variable is cleared if the button isn't displayed
		(try_end),
		(val_sub, ":y_val", ":y_spacing"),
		(try_begin),
			# (val_sub, reg17, reg9),
			(gt, reg17, 0),
			(ge, ":cur_gold", reg25),
			(create_game_button_overlay, "$g_presentation_obj_10", "@Buy", tf_left_align),
			(position_set_x, pos2, ":x_val"),
			(position_set_y, pos2, ":y_val"),
			(overlay_set_position, "$g_presentation_obj_10", pos2),
			(position_set_x, pos2, ":button_x_val"),
			(position_set_y, pos2, ":button_y_val"),
			(overlay_set_size, "$g_presentation_obj_10", pos2),
			(overlay_set_color, reg1, ":color"),
		(else_try),
			(assign, "$g_presentation_obj_10", -1),		#make sure the global variable is cleared if the button isn't displayed
		(try_end),
		(val_sub, ":y_val", ":y_spacing"),
	(try_end),
	#presentation options for selling the ship
	(try_begin),
		(eq, "$g_presentation_details", 2),
		(call_script, "script_get_ship_sell_value", "trp_player"),
		(create_game_button_overlay, reg1, "@Sale price {reg0} credits",tf_center_justify),
		(position_set_x, pos3, 700),
        (position_set_y, pos3, 350),
        (overlay_set_position, reg1, pos3),
		(overlay_set_color, reg1, 000066),
		(position_set_x, pos3, 300),
        (position_set_y, pos3, 40),
		(overlay_set_size, reg1, pos3),
		(create_game_button_overlay, "$g_presentation_obj_25", "@Sell the ship",tf_center_justify),
		(position_set_x, pos3, 760),
        (position_set_y, pos3, 250),
        (overlay_set_position, "$g_presentation_obj_25", pos3),
		(overlay_set_color, "$g_presentation_obj_25", 000066),
		(position_set_x, pos3, 150),
        (position_set_y, pos3, 40),
		(overlay_set_size, "$g_presentation_obj_25", pos3),

	(try_end),
		]),

(ti_on_presentation_event_state_change,

      [
        (store_trigger_param_1, ":object"),
	(try_begin),
 		(eq, ":object", "$g_presentation_obj_2"),
		(presentation_set_duration, 0),
		(jump_to_menu, "mnu_shipyard"),

	#start buy button processing
#	(assign, ":troop_no", "trp_player"),
	(else_try),
		(eq, ":object", "$g_presentation_obj_3"),
		(display_message, "@Your upgrade has been installed."),
		(troop_remove_gold, "trp_player", reg18),
        (play_sound, "snd_money_paid"),
		(store_add, ":new_val", reg2, 1), #old lvl +1 = new lvl
		(troop_set_slot, "trp_player", slot_ship_drive, ":new_val"),
		(start_presentation, "prsnt_ship_details"),
	(else_try),
		(eq, ":object", "$g_presentation_obj_4"),
		(display_message, "@Your upgrade has been installed."),
		(troop_remove_gold, "trp_player", reg19),
        (play_sound, "snd_money_paid"),
		(store_add, ":new_val", reg3, 1), #old lvl +1 = new lvl
		(troop_set_slot, "trp_player", slot_ship_scanner, ":new_val"),
		(start_presentation, "prsnt_ship_details"),
	(else_try),
		(eq, ":object", "$g_presentation_obj_5"),
		(display_message, "@Your upgrade has been installed."),
		(troop_remove_gold, "trp_player", reg20),
        (play_sound, "snd_money_paid"),
		(store_add, ":new_val", reg4, 1), #old lvl +1 = new lvl
		(troop_set_slot, "trp_player", slot_ship_troop_capacity, ":new_val"),
		(start_presentation, "prsnt_ship_details"),
	(else_try),
		(eq, ":object", "$g_presentation_obj_6"),
		(display_message, "@Your upgrade has been installed."),
		(troop_remove_gold, "trp_player", reg21),
        (play_sound, "snd_money_paid"),
		(store_add, ":new_val", reg5, 1), #old lvl +1 = new lvl
		(troop_set_slot, "trp_player", slot_ship_prisoner_capacity, ":new_val"),
		(start_presentation, "prsnt_ship_details"),
	(else_try),
		(eq, ":object", "$g_presentation_obj_7"),
		(display_message, "@Your upgrade has been installed."),
		(troop_remove_gold, "trp_player", reg22),
        (play_sound, "snd_money_paid"),
		(store_add, ":new_val", reg6, 1), #old lvl +1 = new lvl
		(troop_set_slot, "trp_player", slot_ship_cargo_capacity, ":new_val"),
		(start_presentation, "prsnt_ship_details"),
	(else_try),
		(eq, ":object", "$g_presentation_obj_8"),
		(display_message, "@Your upgrade has been installed."),
		(troop_remove_gold, "trp_player", reg23),
        (play_sound, "snd_money_paid"),
		(store_add, ":new_val", reg7, 1), #old lvl +1 = new lvl
		(troop_set_slot, "trp_player", slot_ship_combat_computer, ":new_val"),
		(start_presentation, "prsnt_ship_details"),
	(else_try),
		(eq, ":object", "$g_presentation_obj_9"),
		(display_message, "@Your upgrade has been installed."),
		(troop_remove_gold, "trp_player", reg24),
        (play_sound, "snd_money_paid"),
		(store_add, ":new_val", reg8, 1), #old lvl +1 = new lvl
		(troop_set_slot, "trp_player", slot_ship_trade_computer, ":new_val"),
		(start_presentation, "prsnt_ship_details"),
	(else_try),
		(eq, ":object", "$g_presentation_obj_10"),
		(display_message, "@Your upgrade has been installed."),
		(troop_remove_gold, "trp_player", reg25),
        (play_sound, "snd_money_paid"),
		(store_add, ":new_val", reg9, 1), #old lvl +1 = new lvl
		(troop_set_slot, "trp_player", slot_ship_medical_bay, ":new_val"),
		(start_presentation, "prsnt_ship_details"),
	(else_try),
		(eq, ":object", "$g_presentation_obj_25"),
		(call_script, "script_reset_starship_slots_for_troop", "trp_player", 0),
		(display_message, "@Your ship has been sold"),
		(troop_add_gold, "trp_player", reg0),
		(play_sound, "snd_money_paid"),
		(presentation_set_duration, 0),
		(jump_to_menu, "mnu_shipyard"),
	(try_end),
        ]),
#
(ti_on_presentation_run,
       [

		# #Little Pos Helper by Kuba begin
		# #http://forums.taleworlds.com/index.php/topic,8652.msg2373733.html#msg2373733
		# (set_fixed_point_multiplier, 1000),
		# (mouse_get_position, pos1),
		# (position_get_x, reg1, pos1),
		# (position_get_y, reg2, pos1),
		# (str_store_string, s1, "@DEBUG: x = {reg1}, y = {reg2}"),
		# #(overlay_set_text, "$g_little_pos_helper", "@DEBUG: x = {reg1}, y = {reg2}"),
		# (overlay_set_text, "$g_little_pos_helper", s1),
		# #Little Pos Helper by Kuba end

	   (try_begin),
          (this_or_next|key_clicked, key_escape),
          (key_clicked, key_back_space),
          (presentation_set_duration, 0),
	  (jump_to_menu, "mnu_shipyard"),
        (try_end),

        ]),

]),


##################################################################################################
# CODE FROM Expanded Gameplay III
  ("key_assignment",prsntf_read_only,0,[

      (ti_on_presentation_load,
       [(presentation_set_duration, 999999),
		]),

      (ti_on_presentation_run,
       [


(assign,":bind",0),
(try_begin),(key_clicked,key_1),(assign,":bind",key_1),
(else_try),(key_clicked,key_2),(assign,":bind",key_2),
(else_try),(key_clicked,key_3),(assign,":bind",key_3),
(else_try),(key_clicked,key_4),(assign,":bind",key_4),
(else_try),(key_clicked,key_5),(assign,":bind",key_5),
(else_try),(key_clicked,key_6),(assign,":bind",key_6),
(else_try),(key_clicked,key_7),(assign,":bind",key_7),
(else_try),(key_clicked,key_8),(assign,":bind",key_8),
(else_try),(key_clicked,key_9),(assign,":bind",key_9),
(else_try),(key_clicked,key_0),(assign,":bind",key_0),
(else_try),(key_clicked,key_a),(assign,":bind",key_a),
(else_try),(key_clicked,key_b),(assign,":bind",key_b),
(else_try),(key_clicked,key_c),(assign,":bind",key_c),
(else_try),(key_clicked,key_d),(assign,":bind",key_d),
(else_try),(key_clicked,key_e),(assign,":bind",key_e),
(else_try),(key_clicked,key_f),(assign,":bind",key_f),
(else_try),(key_clicked,key_g),(assign,":bind",key_g),
(else_try),(key_clicked,key_h),(assign,":bind",key_h),
(else_try),(key_clicked,key_i),(assign,":bind",key_i),
(else_try),(key_clicked,key_j),(assign,":bind",key_j),
(else_try),(key_clicked,key_k),(assign,":bind",key_k),
(else_try),(key_clicked,key_l),(assign,":bind",key_l),
(else_try),(key_clicked,key_m),(assign,":bind",key_m),
(else_try),(key_clicked,key_n),(assign,":bind",key_n),
(else_try),(key_clicked,key_o),(assign,":bind",key_o),
(else_try),(key_clicked,key_p),(assign,":bind",key_p),
(else_try),(key_clicked,key_q),(assign,":bind",key_q),
(else_try),(key_clicked,key_r),(assign,":bind",key_r),
(else_try),(key_clicked,key_s),(assign,":bind",key_s),
(else_try),(key_clicked,key_t),(assign,":bind",key_t),
(else_try),(key_clicked,key_u),(assign,":bind",key_u),
(else_try),(key_clicked,key_v),(assign,":bind",key_v),
(else_try),(key_clicked,key_w),(assign,":bind",key_w),
(else_try),(key_clicked,key_x),(assign,":bind",key_x),
(else_try),(key_clicked,key_y),(assign,":bind",key_y),
(else_try),(key_clicked,key_z),(assign,":bind",key_z),
(else_try),(key_clicked,key_numpad_0),(assign,":bind",key_numpad_0),
(else_try),(key_clicked,key_numpad_1),(assign,":bind",key_numpad_1),
(else_try),(key_clicked,key_numpad_2),(assign,":bind",key_numpad_2),
(else_try),(key_clicked,key_numpad_3),(assign,":bind",key_numpad_3),
(else_try),(key_clicked,key_numpad_4),(assign,":bind",key_numpad_4),
(else_try),(key_clicked,key_numpad_5),(assign,":bind",key_numpad_5),
(else_try),(key_clicked,key_numpad_6),(assign,":bind",key_numpad_6),
(else_try),(key_clicked,key_numpad_7),(assign,":bind",key_numpad_7),
(else_try),(key_clicked,key_numpad_8),(assign,":bind",key_numpad_8),
(else_try),(key_clicked,key_numpad_9),(assign,":bind",key_numpad_9),
(else_try),(key_clicked,key_num_lock),(assign,":bind",key_num_lock),
(else_try),(key_clicked,key_numpad_slash),(assign,":bind",key_numpad_slash),
(else_try),(key_clicked,key_numpad_multiply),(assign,":bind",key_numpad_multiply),
(else_try),(key_clicked,key_numpad_minus),(assign,":bind",key_numpad_minus),
(else_try),(key_clicked,key_numpad_plus),(assign,":bind",key_numpad_plus),
(else_try),(key_clicked,key_numpad_enter),(assign,":bind",key_numpad_enter),
(else_try),(key_clicked,key_numpad_period),(assign,":bind",key_numpad_period),
(else_try),(key_clicked,key_insert),(assign,":bind",key_insert),
(else_try),(key_clicked,key_delete),(assign,":bind",key_delete),
(else_try),(key_clicked,key_home),(assign,":bind",key_home),
(else_try),(key_clicked,key_end),(assign,":bind",key_end),
(else_try),(key_clicked,key_page_up),(assign,":bind",key_page_up),
(else_try),(key_clicked,key_page_down),(assign,":bind",key_page_down),
(else_try),(key_clicked,key_up),(assign,":bind",key_up),
(else_try),(key_clicked,key_down),(assign,":bind",key_down),
(else_try),(key_clicked,key_left),(assign,":bind",key_left),
(else_try),(key_clicked,key_right),(assign,":bind",key_right),
(else_try),(key_clicked,key_f1),(assign,":bind",key_f1),
(else_try),(key_clicked,key_f2),(assign,":bind",key_f2),
(else_try),(key_clicked,key_f3),(assign,":bind",key_f3),
(else_try),(key_clicked,key_f4),(assign,":bind",key_f4),
(else_try),(key_clicked,key_f5),(assign,":bind",key_f5),
(else_try),(key_clicked,key_f6),(assign,":bind",key_f6),
(else_try),(key_clicked,key_f7),(assign,":bind",key_f7),
(else_try),(key_clicked,key_f8),(assign,":bind",key_f8),
(else_try),(key_clicked,key_f9),(assign,":bind",key_f9),
(else_try),(key_clicked,key_f10),(assign,":bind",key_f10),
(else_try),(key_clicked,key_f11),(assign,":bind",key_f11),
(else_try),(key_clicked,key_f12),(assign,":bind",key_f12),
(else_try),(key_clicked,key_space),(assign,":bind",key_space),
(else_try),(key_clicked,key_escape),(assign,":bind",key_escape),
(else_try),(key_clicked,key_enter),(assign,":bind",key_enter),
(else_try),(key_clicked,key_tab),(assign,":bind",key_tab),
(else_try),(key_clicked,key_back_space),(assign,":bind",key_back_space),
(else_try),(key_clicked,key_open_braces),(assign,":bind",key_open_braces),
(else_try),(key_clicked,key_close_braces),(assign,":bind",key_close_braces),
(else_try),(key_clicked,key_comma),(assign,":bind",key_comma),
(else_try),(key_clicked,key_period),(assign,":bind",key_period),
(else_try),(key_clicked,key_slash),(assign,":bind",key_slash),
(else_try),(key_clicked,key_back_slash),(assign,":bind",key_back_slash),
(else_try),(key_clicked,key_equals),(assign,":bind",key_equals),
(else_try),(key_clicked,key_minus),(assign,":bind",key_minus),
(else_try),(key_clicked,key_semicolon),(assign,":bind",key_semicolon),
(else_try),(key_clicked,key_apostrophe),(assign,":bind",key_apostrophe),
(else_try),(key_clicked,key_tilde),(assign,":bind",key_tilde),
(else_try),(key_clicked,key_caps_lock),(assign,":bind",key_caps_lock),
(else_try),(key_clicked,key_left_shift),(assign,":bind",key_left_shift),
(else_try),(key_clicked,key_right_shift),(assign,":bind",key_right_shift),
(else_try),(key_clicked,key_left_control),(assign,":bind",key_left_control),
(else_try),(key_clicked,key_right_control),(assign,":bind",key_right_control),
(else_try),(key_clicked,key_left_alt),(assign,":bind",key_left_alt),
(else_try),(key_clicked,key_right_alt),(assign,":bind",key_right_alt),
(else_try),(key_clicked,key_left_mouse_button),(assign,":bind",key_left_mouse_button),
(else_try),(key_clicked,key_right_mouse_button),(assign,":bind",key_right_mouse_button),
(else_try),(key_clicked,key_middle_mouse_button),(assign,":bind",key_middle_mouse_button),
(else_try),(key_clicked,key_mouse_button_4),(assign,":bind",key_mouse_button_4),
(else_try),(key_clicked,key_mouse_button_5),(assign,":bind",key_mouse_button_5),
(else_try),(key_clicked,key_mouse_button_6),(assign,":bind",key_mouse_button_6),
(else_try),(key_clicked,key_mouse_button_7),(assign,":bind",key_mouse_button_7),
(else_try),(key_clicked,key_mouse_button_8),(assign,":bind",key_mouse_button_8),
(else_try),(key_clicked,key_mouse_scroll_up),(assign,":bind",key_mouse_scroll_up),
(else_try),(key_clicked,key_mouse_scroll_down),(assign,":bind",key_mouse_scroll_down),
(try_end),

(try_begin),
		(neq,":bind",0),

		(presentation_set_duration,0),
		  (try_begin),
			(eq,":bind",key_escape),
		   	(assign,":bind",-1),
		  (try_end),
		(try_begin),
		  	# (eq,"$active_key",0),
		        # (assign,"$help_key",":bind"),
		# (else_try),
		  	(eq,"$active_key",1),
		        (assign,"$crouch_key",":bind"),
		 (else_try),
		  	 (eq,"$active_key",2),
		         (assign,"$toggle_weapon_key",":bind"),
		 (else_try),
		  	 (eq,"$active_key",3),
		         (assign,"$helmet_view_key",":bind"),
		 (else_try),
		  	 (eq,"$active_key",4),
		         (assign,"$jetpack_key",":bind"),
		 # (else_try),
		  	 # (eq,"$active_key",5),
		         # (assign,"$warcry_key",":bind"),
		 (else_try),
		  	 (eq,"$active_key",6),
		         (assign,"$bacta_injector_key",":bind"),
		 #(else_try),
		  	 #(eq,"$active_key",7),
		         #(assign,"$binoculars_key",":bind"),
		 (else_try),
		  	 (eq,"$active_key",8),
		         (assign,"$deathcam_forward_key",":bind"),
		 (else_try),
		  	 (eq,"$active_key",9),
		         (assign,"$deathcam_backward_key",":bind"),
		(try_end),

		(call_script,"script_get_all_binds"),

(try_end),

        ]),
]),
##################################################################################################

######################################################################################################

# SWYTER's FACTION SELECTION ANIMATED AND MODULAR MENU
# enjoy it :P
  ("faction_selection",0,mesh_load_window,[
      (ti_on_presentation_load,
       [	#Little Pos Helper by Kuba begin
			(create_text_overlay, "$g_little_pos_helper", "@X: 00,Y: 00"),
			(overlay_set_color, "$g_little_pos_helper", 0xFFFFFFFF),
			(position_set_x, pos1, 10),
			(position_set_y, pos1, 700),
			(overlay_set_position, "$g_little_pos_helper", pos1),

			(create_text_overlay, "$g_little_pos2_helper", "@Over:"),
			(overlay_set_color, "$g_little_pos2_helper", 0xFFFFFFFF),
			(position_set_x, pos1, 35),
			(position_set_y, pos1, 680),
			(overlay_set_position, "$g_little_pos2_helper", pos1),

			(create_text_overlay, "$g_little_pos3_helper", "@Selected:"),
			(overlay_set_color, "$g_little_pos3_helper", 0xFFFFFFFF),
			(position_set_x, pos1, 50),
			(position_set_y, pos1, 660),
			(overlay_set_position, "$g_little_pos3_helper", pos1),
			#Little Pos Helper by Kuba end

	   (set_fixed_point_multiplier, 1000),

        (str_store_string, s1, "@As you grew older you decided to join..."),
        (create_text_overlay, reg1, s1, tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (overlay_set_text, reg1, s1),
        (create_button_overlay, "$g_presentation_obj_1", "@Go Back...", tf_center_justify),
		#(create_button_overlay, "$g_presentation_obj_1", 0, tf_center_justify),
        (position_set_x, pos1, 350),
        (position_set_y, pos1, 50),
        (overlay_set_position, "$g_presentation_obj_1", pos1),

        (create_button_overlay, "$g_presentation_obj_2", "@Remain Independent.", tf_center_justify),
		#(create_button_overlay, "$g_presentation_obj_1", 0, tf_center_justify),
        (position_set_x, pos1, 570),
        (position_set_y, pos1, 50),
        (overlay_set_position, "$g_presentation_obj_2", pos1),

		#GALACTIC EMPIRE
		#text
		 (create_text_overlay, "$g_option_empire_text", "@Galactic Empire", tf_center_justify),
		#(create_button_overlay, "$g_presentation_obj_1", 0, tf_center_justify),
        (position_set_x, pos1, 480),
        (position_set_y, pos1, 280),
        (overlay_set_position, "$g_option_empire_text", pos1),
		(overlay_set_alpha, "$g_option_empire_text", 0x7D),
		(overlay_set_color, "$g_option_empire_text", 0x181D4D),

		#logo
	    (create_image_button_overlay, "$g_option_empire", "mesh_pic_arms_swadian", "mesh_pic_arms_swadian"),
           (position_set_x, pos1, 480),
           (position_set_y, pos1, 400),
           (overlay_set_position, "$g_option_empire", pos1),
           (position_set_x, pos1, 500),
           (position_set_y, pos1, 500),
           (overlay_set_size, "$g_option_empire", pos1),

		#REBEL ALLIANCE
		#text
		 (create_text_overlay, "$g_option_rebel_text", "@Rebel Alliance", tf_center_justify),
		#(create_button_overlay, "$g_presentation_obj_1", 0, tf_center_justify),
        (position_set_x, pos1, 180),
        (position_set_y, pos1, 180),
        (overlay_set_position, "$g_option_rebel_text", pos1),
		(overlay_set_alpha, "$g_option_rebel_text", 0x7D),
		(overlay_set_color, "$g_option_rebel_text", 0x4D1818),

		#logo
	    (create_image_button_overlay, "$g_option_rebel", "mesh_pic_arms_vaegir", "mesh_pic_arms_vaegir"),
           (position_set_x, pos1, 180),
           (position_set_y, pos1, 300),
           (overlay_set_position, "$g_option_rebel", pos1),
           (position_set_x, pos1, 600),
           (position_set_y, pos1, 600),
           (overlay_set_size, "$g_option_rebel",pos1),


		#HUTT CARTEL
		#text
		 (create_text_overlay, "$g_option_hutt_text", "@Hutt Cartel", tf_center_justify),
		#(create_button_overlay, "$g_presentation_obj_1", 0, tf_center_justify),
        (position_set_x, pos1, 780),
        (position_set_y, pos1, 180),
        (overlay_set_position, "$g_option_hutt_text", pos1),
		(overlay_set_alpha, "$g_option_hutt_text", 0x7D),
		(overlay_set_color, "$g_option_hutt_text", 0x4D4018),

		#logo
	    (create_image_button_overlay, "$g_option_hutt", "mesh_pic_arms_khergit", "mesh_pic_arms_khergit"),
           (position_set_x, pos1, 780),
           (position_set_y, pos1, 300),
           (overlay_set_position, "$g_option_hutt", pos1),
           (position_set_x, pos1, 600),
           (position_set_y, pos1, 600),
           (overlay_set_size, "$g_option_hutt",pos1),

        # (assign, ":x_pos", 160),
        # (assign, ":y_pos", 400),
        # (assign, ":try_end", faction_meshes_end_minus_one),
        # (store_mul, ":begin_mesh", 16, "$g_presentation_page_no"),
        # (val_add, ":begin_mesh", faction_meshes_begin),
        # (store_add, ":try_end_2", ":begin_mesh", 16),
        # (val_min, ":try_end", ":try_end_2"),
        # (store_add, "$g_presentation_banner_start", "$g_presentation_obj_1", 1),
        # (try_for_range, ":cur_banner_mesh", ":begin_mesh", ":try_end"),
          # (create_image_button_overlay, reg1, ":cur_banner_mesh", ":cur_banner_mesh"),
          # (position_set_x, pos1, ":x_pos"),
          # (position_set_y, pos1, ":y_pos"),
          # (overlay_set_position, reg1, pos1),
            # (position_set_x, pos1, 300),
            # (position_set_y, pos1, 300),
            # (overlay_set_size, reg1, pos1),
          # (val_add, ":x_pos", 300),
          # (ge, ":x_pos", 900),
          # (assign, ":x_pos", 110),
          # (val_sub, ":y_pos", 250),
        # (try_end),
        (presentation_set_duration, 999999),
        ]),
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
		(store_trigger_param_1, reg5),
	    (overlay_set_text, "$g_little_pos3_helper", "@Selected: {reg5}"),

        (try_begin),
			  (eq, ":object", "$g_presentation_obj_1"),
			  (jump_to_menu,"mnu_start_character_0"),
			  (presentation_set_duration, 0),
        (else_try),
			  (eq, ":object", "$g_presentation_obj_2"),
				(str_store_string,s13,"@You decide it is now time to leave your family and seek you own fortune."),
				(assign,"$faction_choice",cb0_independent),
				(jump_to_menu,"mnu_choose_skill"),
			  (presentation_set_duration, 0),
        (else_try),
			(eq, ":object", "$g_option_empire"),
				(str_store_string,s13,"@After visiting the recruiting center you were accepted into the army and spent several months training at the Imperial Academy. As your last task before graduation you were given a small ship and sent to Coruscant to pledge your loyalty before Emperor Palpatine himself."),
				(assign,"$faction_choice",cb0_empire),
				(jump_to_menu,"mnu_choose_skill"),
				(presentation_set_duration, 0),
        (else_try),
			(eq, ":object", "$g_option_rebel"),
				(str_store_string,s13,"@Using some of your local contacts you eventually arranged a meeting with a rebel commander. After working with his unit for several months you have been given a small ship and sent to Yavin IV to pledge your loyalty before Mon Mothma herself."),
				(assign,"$faction_choice",cb0_rebel),
				(jump_to_menu,"mnu_choose_skill"),
				(presentation_set_duration, 0),
        (else_try),
			(eq, ":object", "$g_option_hutt"),
				(str_store_string,s13,"@You spent several months doing random jobs for the local crime lord. Thievery and murder became a common part of your life and you developed enough of a reputation that you were given a small ship and sent to Tatooine to pledge your loyalty before Jabba the Hutt."),
				(assign,"$faction_choice",cb0_hutt),
				(jump_to_menu,"mnu_choose_skill"),
				(presentation_set_duration, 0),
        (try_end),
        ]),


       (ti_on_presentation_run,[
	   	(mouse_get_position, pos1),
		(position_get_x, reg1, pos1),
		(position_get_y, reg2, pos1),
		(overlay_set_text, "$g_little_pos_helper", "@X: {reg1},Y: {reg2}"),


       # [(try_begin),
          # (this_or_next|key_clicked, key_space),
          # (this_or_next|key_clicked, key_enter),
          # (this_or_next|key_clicked, key_escape),
          # (key_clicked, key_back_space),
          # (presentation_set_duration, 0),
        # (try_end),

         ]),

		(ti_on_presentation_mouse_enter_leave,[

			(store_trigger_param_1, reg3),
			(store_trigger_param_2, reg4),
			(store_trigger_param_1, ":id"),
			(store_trigger_param_2, ":stage"),

			(overlay_set_text, "$g_little_pos2_helper", "@Over: {reg3},{reg4}"),

        (try_begin),


			  (eq, ":id", "$g_option_empire"),
			  (eq, ":stage", 0),
			(position_set_x, pos1, 550),
            (position_set_y, pos1, 550),
			(overlay_animate_to_size, "$g_option_rebel", 400, pos1),
			(overlay_animate_to_size, "$g_option_hutt", 400, pos1),
			(position_set_x, pos1, 700),
            (position_set_y, pos1, 700),
			(overlay_animate_to_size, ":id", 300, pos1),
			(overlay_animate_to_alpha, ":id", 150, 0x7D),
			(overlay_animate_to_alpha, "$g_option_empire_text", 150, 0xFF),
		(else_try),
			  (eq, ":id", "$g_option_empire"),
			  (eq, ":stage", 1),
			(position_set_x, pos1, 600),
            (position_set_y, pos1, 600),
			(overlay_animate_to_size, ":id", 300, pos1),
			#(overlay_animate_to_size, "$g_option_hutt", 400, pos1),
			#(overlay_animate_to_size, "$g_option_rebel", 400, pos1),
			(overlay_animate_to_alpha, ":id", 150, 0x0),
			(overlay_animate_to_alpha, "$g_option_empire_text", 150, 0x7D),
        (else_try),


			  (eq, ":id", "$g_option_rebel"),
			  (eq, ":stage", 0),
			(position_set_x, pos1, 550),
            (position_set_y, pos1, 550),
			(overlay_animate_to_size, "$g_option_empire", 400, pos1),
			(overlay_animate_to_size, "$g_option_hutt", 400, pos1),
			(position_set_x, pos1, 700),
            (position_set_y, pos1, 700),
			(overlay_animate_to_size, ":id", 300, pos1),
			(overlay_animate_to_alpha, ":id", 150, 0x7D),
			(overlay_animate_to_alpha, "$g_option_rebel_text", 150, 0xFF),
		(else_try),
			  (eq, ":id", "$g_option_rebel"),
			  (eq, ":stage", 1),
			(position_set_x, pos1, 600),
            (position_set_y, pos1, 600),
			(overlay_animate_to_size, ":id", 300, pos1),
			#(overlay_animate_to_size, "$g_option_empire", 400, pos1),
			#(overlay_animate_to_size, "$g_option_hutt", 400, pos1),
			(overlay_animate_to_alpha, ":id", 150, 0x0),
			(overlay_animate_to_alpha, "$g_option_rebel_text", 150, 0x7D),
        (else_try),


			  (eq, ":id", "$g_option_hutt"),
			  (eq, ":stage", 0),
			(position_set_x, pos1, 550),
            (position_set_y, pos1, 550),
			(overlay_animate_to_size, "$g_option_rebel", 400, pos1),
			(overlay_animate_to_size, "$g_option_empire", 400, pos1),
			(position_set_x, pos1, 700),
            (position_set_y, pos1, 700),
			(overlay_animate_to_size, ":id", 300, pos1),
			(overlay_animate_to_alpha, ":id", 150, 0x7D),
			(overlay_animate_to_alpha, "$g_option_hutt_text", 150, 0xFF),
		(else_try),
			  (eq, ":id", "$g_option_hutt"),
			  (eq, ":stage", 1),
			(position_set_x, pos1, 600),
            (position_set_y, pos1, 600),
			(overlay_animate_to_size, ":id", 300, pos1),
			#(overlay_animate_to_size, "$g_option_empire", 400, pos1),
			#(overlay_animate_to_size, "$g_option_rebel", 400, pos1),
			(overlay_animate_to_alpha, ":id", 150, 0x0),
			(overlay_animate_to_alpha, "$g_option_hutt_text", 150, 0x7D),
		(try_end),
		]),

      ]),


	  # SWYTER's class SELECTION ANIMATED AND MODULAR MENU
# enjoy it :P
  ("class_selection",0,mesh_load_window,[
      (ti_on_presentation_load,
       [	#Little Pos Helper by Kuba begin
			(create_text_overlay, "$g_little_pos_helper", "@X: 00,Y: 00"),
			(overlay_set_color, "$g_little_pos_helper", 0xFFFFFFFF),
			(position_set_x, pos1, 10),
			(position_set_y, pos1, 700),
			(overlay_set_position, "$g_little_pos_helper", pos1),

			(create_text_overlay, "$g_little_pos2_helper", "@Over:"),
			(overlay_set_color, "$g_little_pos2_helper", 0xFFFFFFFF),
			(position_set_x, pos1, 35),
			(position_set_y, pos1, 680),
			(overlay_set_position, "$g_little_pos2_helper", pos1),

			(create_text_overlay, "$g_little_pos3_helper", "@Selected:"),
			(overlay_set_color, "$g_little_pos3_helper", 0xFFFFFFFF),
			(position_set_x, pos1, 50),
			(position_set_y, pos1, 660),
			(overlay_set_position, "$g_little_pos3_helper", pos1),
			#Little Pos Helper by Kuba end

	   (set_fixed_point_multiplier, 1000),

        (str_store_string, s1, "@You spent your early years traveling around the galaxy with your parents. Your father was..."),
        (create_text_overlay, reg1, s1, tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (overlay_set_text, reg1, s1),
        (create_button_overlay, "$g_presentation_obj_1", "@Go Back...", tf_center_justify),
		#(create_button_overlay, "$g_presentation_obj_1", 0, tf_center_justify),
        (position_set_x, pos1, 450),
        (position_set_y, pos1, 50),
        (overlay_set_position, "$g_presentation_obj_1", pos1),

		#GALACTIC ambassador
		#text
		 (create_text_overlay, "$g_option_ambassador_text", "@Ambassador", tf_center_justify),
		#(create_button_overlay, "$g_presentation_obj_1", 0, tf_center_justify),
        (position_set_x, pos1, 460),
        (position_set_y, pos1, 280),
        (overlay_set_position, "$g_option_ambassador_text", pos1),
		(overlay_set_alpha, "$g_option_ambassador_text", 0x7D),
		(overlay_set_color, "$g_option_ambassador_text", 0x181D4D),

		#logo
	    (create_image_button_overlay, "$g_option_ambassador", "mesh_ui_merchant", "mesh_ui_merchant"),
           (position_set_x, pos1, 460),
           (position_set_y, pos1, 400),
           (overlay_set_position, "$g_option_ambassador", pos1),
           (position_set_x, pos1, 500),
           (position_set_y, pos1, 500),
           (overlay_set_size, "$g_option_ambassador", pos1),

		#merchant ALLIANCE
		#text
		 (create_text_overlay, "$g_option_merchant_text", "@Merchant", tf_center_justify),
		#(create_button_overlay, "$g_presentation_obj_1", 0, tf_center_justify),
        (position_set_x, pos1, 160),
        (position_set_y, pos1, 180),
        (overlay_set_position, "$g_option_merchant_text", pos1),
		(overlay_set_alpha, "$g_option_merchant_text", 0x7D),
		(overlay_set_color, "$g_option_merchant_text", 0x4D1818),

		#logo
	    (create_image_button_overlay, "$g_option_merchant", "mesh_ui_merchant", "mesh_ui_merchant"),
           (position_set_x, pos1, 160),
           (position_set_y, pos1, 300),
           (overlay_set_position, "$g_option_merchant", pos1),
           (position_set_x, pos1, 600),
           (position_set_y, pos1, 600),
           (overlay_set_size, "$g_option_merchant",pos1),


		#HUTT CARTEL
		#text
		 (create_text_overlay, "$g_option_soldier_text", "@Soldier", tf_center_justify),
		#(create_button_overlay, "$g_presentation_obj_1", 0, tf_center_justify),
        (position_set_x, pos1, 760),
        (position_set_y, pos1, 180),
        (overlay_set_position, "$g_option_soldier_text", pos1),
		(overlay_set_alpha, "$g_option_soldier_text", 0x7D),
		(overlay_set_color, "$g_option_soldier_text", 0x4D4018),

		#logo
	    (create_image_button_overlay, "$g_option_soldier", "mesh_ui_soldier", "mesh_ui_soldier"),
           (position_set_x, pos1, 760),
           (position_set_y, pos1, 300),
           (overlay_set_position, "$g_option_soldier", pos1),
           (position_set_x, pos1, 600),
           (position_set_y, pos1, 600),
           (overlay_set_size, "$g_option_soldier",pos1),

        (presentation_set_duration, 999999),
        ]),
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
		(store_trigger_param_1, reg5),
	    (overlay_set_text, "$g_little_pos3_helper", "@Selected: {reg5}"),

        (try_begin),
			  (eq, ":object", "$g_presentation_obj_1"),
			  (jump_to_menu,"mnu_start_game_1"),
			  (presentation_set_duration, 0),
        (else_try),
			(eq, ":object", "$g_option_ambassador"),
				  (assign,"$background_type",cb0_ambassador),
				  (assign, reg3, "$character_gender"),
				  #(str_store_string,s10,"@string not used"),
				  #(str_store_string,s13,"@You decide it is now time to leave your family and seek you own fortune."),
				(jump_to_menu,"mnu_start_character_faction"),
				(presentation_set_duration, 0),
        (else_try),
			(eq, ":object", "$g_option_merchant"),
				  (assign,"$background_type",cb0_merchant),
				  (assign, reg3, "$character_gender"),
				  #(str_store_string,s10,"@string not used"),
				  #(str_store_string,s13,"@You decide it is now time to leave your family and seek you own fortune."),
				(jump_to_menu,"mnu_start_character_faction"),
				(presentation_set_duration, 0),
        (else_try),
			(eq, ":object", "$g_option_soldier"),
				  (assign,"$background_type",cb0_soldier),
				  (assign, reg3, "$character_gender"),
				  #(str_store_string,s10,"@string not used"),
				  #(str_store_string,s13,"@You decide it is now time to leave your family and seek you own fortune."),
				(jump_to_menu,"mnu_start_character_faction"),
				(presentation_set_duration, 0),
        (try_end),
        ]),


       (ti_on_presentation_run,[
	   	(mouse_get_position, pos1),
		(position_get_x, reg1, pos1),
		(position_get_x, ":mouse_x", pos1),
		(position_get_y, reg2, pos1),
		(overlay_set_text, "$g_little_pos_helper", "@X: {reg1},Y: {reg2}"),

	  (assign,"$g_roller_end_plus_1","$g_option_soldier"),
	  (val_add,"$g_roller_end_plus_1",1),

	  (try_for_range,":overlay","$g_option_ambassador_text","$g_roller_end_plus_1"),
		(try_begin),
			(le,":mouse_x",150), #-> left screen side
			(overlay_get_position, pos1, ":overlay"),
			(position_get_x,":x",pos1),
				(val_sub,":x",10),
			(position_set_x,pos1,":x"),
			(overlay_animate_to_position, ":overlay", 500, pos1),
		(else_try),
			(ge,":mouse_x",750), #-> right screen side
			(overlay_get_position, pos1, ":overlay"),
			(position_get_x,":x",pos1),
				(val_add,":x",10),
			(position_set_x,pos1,":x"),
			(overlay_animate_to_position, ":overlay", 500, pos1),
		(try_end),
	   (try_end),

         ]),

		(ti_on_presentation_mouse_enter_leave,[

			(store_trigger_param_1, reg3),
			(store_trigger_param_2, reg4),
			(store_trigger_param_1, ":id"),
			(store_trigger_param_2, ":stage"),

			(overlay_set_text, "$g_little_pos2_helper", "@Over: {reg3},{reg4}"),

        (try_begin),


			  (eq, ":id", "$g_option_ambassador"),
			  (eq, ":stage", 0),
			(position_set_x, pos1, 300),
            (position_set_y, pos1, 300),
			(overlay_animate_to_size, ":id", 200, pos1),
			(overlay_animate_to_alpha, ":id", 150, 0x7D),
			(overlay_animate_to_alpha, "$g_option_ambassador_text", 150, 0xFF),
		(else_try),
			  (eq, ":id", "$g_option_ambassador"),
			  (eq, ":stage", 1),
			(position_set_x, pos1, 600),
            (position_set_y, pos1, 600),
			(overlay_animate_to_size, ":id", 200, pos1),
			(overlay_animate_to_alpha, ":id", 150, 0x0),
			(overlay_animate_to_alpha, "$g_option_ambassador_text", 150, 0x7D),
        (else_try),


			  (eq, ":id", "$g_option_merchant"),
			  (eq, ":stage", 0),
			(position_set_x, pos1, 400),
            (position_set_y, pos1, 400),
			(overlay_animate_to_size, ":id", 200, pos1),
			(overlay_animate_to_alpha, ":id", 150, 0x7D),
			(overlay_animate_to_alpha, "$g_option_merchant_text", 150, 0xFF),
		(else_try),
			  (eq, ":id", "$g_option_merchant"),
			  (eq, ":stage", 1),
			(position_set_x, pos1, 700),
            (position_set_y, pos1, 700),
			(overlay_animate_to_size, ":id", 200, pos1),
			(overlay_animate_to_alpha, ":id", 150, 0x0),
			(overlay_animate_to_alpha, "$g_option_merchant_text", 150, 0x7D),
        (else_try),


			  (eq, ":id", "$g_option_soldier"),
			  (eq, ":stage", 0),
			(position_set_x, pos1, 400),
            (position_set_y, pos1, 400),
			(overlay_animate_to_size, ":id", 200, pos1),
			(overlay_animate_to_alpha, ":id", 150, 0x7D),
			(overlay_animate_to_alpha, "$g_option_soldier_text", 150, 0xFF),
		(else_try),
			  (eq, ":id", "$g_option_soldier"),
			  (eq, ":stage", 1),
			(position_set_x, pos1, 700),
            (position_set_y, pos1, 700),
			(overlay_animate_to_size, ":id", 200, pos1),
			(overlay_animate_to_alpha, ":id", 150, 0x0),
			(overlay_animate_to_alpha, "$g_option_soldier_text", 150, 0x7D),
		(try_end),
		]),

      ]),

########################################################
## Easy regulars upgrading kit begin
########################################################
  ("upgrade_troops", 0, mesh_load_window, [
  (ti_on_presentation_load,
    [
      (set_fixed_point_multiplier, 1000),
      (presentation_set_duration, 999999),

      (assign, ":slot_id", reg11),
      ## upgrade troop and total size
      # upgrade size will not change
      (troop_get_slot, ":upgrade_troop", "trp_temp_array_a", ":slot_id"),
      (troop_get_slot, ":upgrade_size", "trp_temp_array_b", ":slot_id"),
      (str_store_troop_name_by_count, s0, ":upgrade_troop", ":upgrade_size"),
      (assign, reg3, ":upgrade_size"),

      ## upgrade 2nd path: troop and size
      (troop_get_slot, ":upgrade_2_size", "trp_temp_array_c", ":slot_id"),
      (troop_get_upgrade_troop, ":upgrade_2_troop", ":upgrade_troop", 1),
      (try_begin),
        (gt, ":upgrade_2_troop", 0),
        (str_store_troop_name, s2, ":upgrade_2_troop"),
        (assign, reg2, ":upgrade_2_size"),
      (try_end),

      ## upgrade 1st path: troop and size
      (troop_get_upgrade_troop, ":upgrade_1_troop", ":upgrade_troop", 0),
      # upgrade 1 size = upgrade size - upgrade 2 size
      (store_sub, ":upgrade_1_size", ":upgrade_size", ":upgrade_2_size"),
      (str_store_troop_name, s1, ":upgrade_1_troop"),
      (assign, reg1, ":upgrade_1_size"),

      (create_text_overlay, reg0, "@{reg3} {s0} can upgrade.", tf_center_justify|tf_vertical_align_center),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 450),
      (overlay_set_position, reg0, pos1),

      (try_begin),
        (gt, ":upgrade_2_troop", 0),
        (create_text_overlay, "$g_presentation_obj_1", "@{reg1}^^Upgrade to {s1}", tf_center_justify|tf_vertical_align_center),
        (position_set_x, pos1, 320),
        (position_set_y, pos1, 350),
        (overlay_set_position, "$g_presentation_obj_1", pos1),

        (create_text_overlay, "$g_presentation_obj_2", "@{reg2}^^Upgrade to {s2}", tf_center_justify|tf_vertical_align_center),
        (position_set_x, pos1, 680),
        (position_set_y, pos1, 350),
        (overlay_set_position, "$g_presentation_obj_2", pos1),

        (create_slider_overlay, "$g_presentation_obj_3", 0, ":upgrade_size"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 350),
        (overlay_set_val, "$g_presentation_obj_3", ":upgrade_2_size"),
        (overlay_set_position, "$g_presentation_obj_3", pos1),
      (else_try),
        (create_text_overlay, "$g_presentation_obj_1", "@Upgrade to {s1}({reg3})", tf_center_justify|tf_vertical_align_center),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 350),
        (overlay_set_position, "$g_presentation_obj_1", pos1),

        (create_text_overlay, "$g_presentation_obj_2", "@ ", tf_center_justify|tf_vertical_align_center),
        (position_set_x, pos1, 1200),
        (position_set_y, pos1, 1200),
        (overlay_set_position, "$g_presentation_obj_2", pos1),

        (create_slider_overlay, "$g_presentation_obj_3", 0, 10),
        (position_set_x, pos1, 1200),
        (position_set_y, pos1, 1200),
        (overlay_set_val, "$g_presentation_obj_3", 0),
        (overlay_set_position, "$g_presentation_obj_3", pos1),
      (try_end),

      (create_button_overlay, "$g_presentation_obj_4", "@Previous"),
      (try_begin),
        (gt, reg11, 0),
        (position_set_x, pos1, 200),
        (position_set_y, pos1, 200),
      (else_try),
        (position_set_x, pos1, 1200),
        (position_set_y, pos1, 1200),
      (try_end),
      (overlay_set_position, "$g_presentation_obj_4", pos1),

      (position_set_x, pos1, 800),
      (position_set_y, pos1, 200),
      (store_add, ":next_slot", reg11, 1),
      (try_begin),
        (neg|troop_slot_eq, "trp_temp_array_a", ":next_slot", -1),
        (str_store_string, s0, "@Next"),
      (else_try),
        (str_store_string, s0, "@Done"),
      (try_end),
      (create_button_overlay, "$g_presentation_obj_5", "@{s0}"),
      (overlay_set_position, "$g_presentation_obj_5", pos1),
    ]),

  (ti_on_presentation_run,
    [
      (set_fixed_point_multiplier, 1000),

      (assign, ":slot_id", reg11),
      (troop_get_slot, ":upgrade_troop", "trp_temp_array_a", ":slot_id"),
      (troop_get_upgrade_troop, ":upgrade_2_troop", ":upgrade_troop", 1),
      (try_begin),
        (gt, ":upgrade_2_troop", 0),
        (troop_get_slot, ":upgrade_size", "trp_temp_array_b", ":slot_id"),
        (troop_get_slot, ":upgrade_2_size", "trp_temp_array_c", ":slot_id"),
        (assign, reg2, ":upgrade_2_size"),
        (store_sub, ":upgrade_1_size", ":upgrade_size", ":upgrade_2_size"),
        (assign, reg1, ":upgrade_1_size"),

        (overlay_set_text, "$g_presentation_obj_1", "@{reg1}^^Upgrade to {s1}"),
        (overlay_set_text, "$g_presentation_obj_2", "@{reg2}^^Upgrade to {s2}"),
      (try_end),
    ]),

  (ti_on_presentation_event_state_change,
    [
      (store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":value"),

      (try_begin),
        (eq, ":object", "$g_presentation_obj_3"),
        (assign, ":slot_id", reg11),
        (troop_get_slot, ":upgrade_2_size", "trp_temp_array_c", ":slot_id"),
        (try_begin),
          (neq, ":upgrade_2_size", ":value"),
          (assign, ":upgrade_2_size", ":value"),
        (try_end),
        (troop_set_slot, "trp_temp_array_c", ":slot_id", ":upgrade_2_size"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_4"),
        (val_sub, reg11, 1),
        (start_presentation, "prsnt_upgrade_troops"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_5"),
        (store_add, ":next_slot", reg11, 1),
        (try_begin),
          (neg|troop_slot_eq, "trp_temp_array_a", ":next_slot", -1),
          (val_add, reg11, 1),
          (start_presentation, "prsnt_upgrade_troops"),
        (else_try),
          ## is the end, switch troops from 1st path to 2nd path
          (try_for_range, ":slot_id", 0, 32),
            (troop_get_slot, ":upgrade_troop", "trp_temp_array_a", ":slot_id"),
            (gt, ":upgrade_troop", 0),
            (troop_get_slot, ":upgrade_2_size", "trp_temp_array_c", ":slot_id"),
            (gt, ":upgrade_2_size", 0),
            (troop_get_upgrade_troop, ":upgrade_1_troop", ":upgrade_troop", 0),
            (troop_get_upgrade_troop, ":upgrade_2_troop", ":upgrade_troop", 1),
            (party_remove_members, "p_main_party", ":upgrade_1_troop", ":upgrade_2_size"),
            (party_add_members, "p_main_party", ":upgrade_2_troop", ":upgrade_2_size"),
          (try_end),
          ## all finished back to camp menu
          (presentation_set_duration, 0),
        (try_end),
      (try_end),
    ]),
  ]),
########################################################
## Easy regulars upgrading kit end
########################################################

]

from module_info import wb_compile_switch

if wb_compile_switch==1:
  presentations+=[
    ("game_start", mesh_load_window, 0,
    [
      (ti_on_presentation_load,
       [
         (presentation_set_duration, 999999),
         (set_fixed_point_multiplier,  1000),

         #swy-- place the main menu statue in WB, manually, as there is no hardcoded mesh as in 1.011.
         (create_mesh_overlay, ":mmback", "mesh_main_menu_background"),
         (position_set_x, pos1, 0),
         (position_set_y, pos1, 0),
         (overlay_set_position, ":mmback", pos1),

         (create_mesh_overlay, ":mmstatue", "mesh_main_menu_statue"),
         (position_set_x, pos1, 0),
         (position_set_y, pos1, 0),
         (overlay_set_position, ":mmstatue", pos1),
       ]),
    ]),

    ("game_custom_battle_designer", mesh_load_window, 0,
    [
      (ti_on_presentation_load,
       [
         (presentation_set_duration, 0),

         #swy-- boom! direct shortcut to the vanilla quick battle menu! how cool is that?
         (jump_to_menu, "mnu_start_game_3")
       ])
    ]),

    ("game_escape", mesh_load_window, 0,
    [
      (ti_on_presentation_load,
       [
         (presentation_set_duration, 999999),
         (set_fixed_point_multiplier,  1000),

         #swy-- place the random escape menu illustrations in WB, manually, as there are no hardcoded meshes as in 1.011.
         (create_mesh_overlay, ":emback", "mesh_main_menu_background"),
         (position_set_x, pos1, 0),
         (position_set_y, pos1, 0),
         (overlay_set_position, ":emback", pos1),

         (store_random_in_range, ":random_bg_pic", mesh_pic_mb_warrior_1, mesh_pic_mb_warrior_4 + 1),

         (create_mesh_overlay, ":empic", ":random_bg_pic"),
         (position_set_x, pos1, 0),
         (position_set_y, pos1, 0),
         (overlay_set_position, ":empic", pos1),
       ])
    ])
]

